{"version":3,"sources":["components/IndepthTable.js","pages/indepth.js"],"names":["AnalysisTable","props","tooltipContent","setTooltipContent","useState","tooltipPosition","setTooltipPosition","top","left","columns","columnList","map","item","index","sortable","push","_jsx","_Fragment","children","className","_jsxs","DataTable","data","dataList","defaultSortField","defaultSortAsc","pagination","dense","onRowMouseLeave","row","e","onRowMouseEnter","showTooltip","event","target","textContent","clientY","clientX","style","position","background","color","fontSize","padding","right","bottom","initialValues","tradeType","searchBy","searchValue","countryCode","fromDate","toDate","matchType","validateForm","Yup","shape","required","conditionalRowStyles","when","importer_name","exporter_name","port_name","hscode","country_name","city_name","backgroundColor","cursor","withRouter","connect","state","loading","loader","dispatch","loadingStart","loaderStart","loadingStop","loaderStop","search_id","location","importerForExport","exporterForImport","fetchSearchQuery","queryBuilderSuggestionList","Axios","method","url","params","searchId","then","res","queryList","sParams","userSearchQuery","Date","portOriginList","portDestinationList","hsCode4DigitList","importerList","exporterList","cityOriginList","cityDestinationList","queryBuilder","hsCodeList","shipmentModeList","shipModeList","stdUnitList","setSearchValue","length","newitem","newindex","setQueryBuilderSearchValue","handleSearch","getTradingCountryList","catch","err","console","log","toggle","setToggle","useHistory","pendingImport","setPendingImport","pendingExport","setPendingExport","searchParams","setSearchParams","importerDataList","setImporterDataList","exporterDataList","setExporterDataList","pendingIndPort","setPendingIndPort","indianPortDataList","setIndianPortDataList","pendingForPort","setPendingForPort","forPortDataList","setForPortDataList","pendingHSCode","setPendingHSCode","hsCodeDataList","setHSCodeDataList","pendingCountry","setPendingCountry","countryDataList","setCountryDataList","pendingCity","setPendingCity","cityDataList","setCityDataList","tradeCountryList","setTradeCountryList","minDate","setMinDate","maxDate","setMaxDate","monthWise","setMonthWiseList","monthWiseDataList","setMonthWiseDataList","queryBuilderSearchValue","importerDataLT","setImporterDataLT","exporterDataLT","setExportertDataLT","indianPortDataLT","setIndianPortDataLT","forPortDataLT","setForPortDataLT","hsCodeDataLT","setHSCodeDataLT","countryDataLT","setCountryDataLT","cityDataLT","setCityDataLT","showModal","setShowModal","newModalColumn","setNewModalColumn","newModalData","setNewModalData","setPortOriginList","portOriginDataArray","setPortOriginDataArray","portDestinationDataArray","setPortDestinationDataArray","setPortDestinationList","countryOriginList","setCountryOriginList","countryDestinationList","setCountryDestinationList","setCityOriginList","setCityDestinationList","shipmentModeDataArray","setShipmentModeDataArray","setShipmentModeList","setHsCode4digitList","hsCode4digitDataArray","setHsCode4digitDataArray","stdUnitDataArray","setStdUnitDataArray","setStdUnitList","setImporterList","importerDataArray","setImporterDataArray","setExporterList","exporterDataArray","setExporterDataArray","setHsCodeList","hsCodeDataArray","setHsCodeDataArray","monthWiseColumns","name","selector","month_name","quantity","conditionalCellStyles","textShadow","shipment_count","value_usd","importerColumns","share","exporterColumns","portColumns","hsCodeColumns","countryColumns","cityColumns","handleModal","rowData","values","getImporterList","getMonthWiseList","getExporterList","getIndianPortList","getForeignPortList","getHSCodeList","getForeignCountryList","getCityList","getShipmentModeList","getHSCode4digitList","getStdUnitList","handleBlur","setFieldValue","value","newSearchValue","postData","JSON","stringify","headers","icList","forEach","specificItem","std_unit","hsList","hscodesList","ship_mode","importersList","others","total","totalQuantityTop10","valueShareTop10","shipmentCountTop10","value_inr","totalValueINRTop10","totalValueUSDTop10","totalQuantity","valueShare","shipmentCount","totalValueINR","totalValueUSD","monthwiseList","AxiosMaster","countryList","exportersList","portsList","country","fcList","countriesList","citiesList","useEffect","monthWiseLabel","labels","MonthWiseData","importerLabel","Object","assign","slice","exporterLabel","indPortLabel","forPortLabel","hsCodeLabel","countryLabel","cityLabel","swalResponse","Swal","fire","title","text","icon","dangerMode","confirmButtonColor","errors","touched","setFieldTouched","Fragment","FieldArray","render","arrayHelpers","Row","Field","component","autoComplete","onChange","queryPerDay","hasOwnProperty","FormGroup","TagsInput","separators","classNames","tag","input","placeHolder","disabled","onBlur","onDataRowClicked","updateFilter","searchFlag","Formik","enableReinitialize","validationSchema","onSubmit","_ref","setFieldError","isValid","handleSubmit","submitForm","Form","setMaxMinDate","tempRow","filter","shortcode","toLowerCase","includes","moment","importFrom","format","importUpto","exportFrom","exportUpto","keys","DatePicker","dateFormat","placeholderText","peekPreviousMonth","peekPreviousYear","showMonthDropdown","showYearDropdown","dropdownMode","selected","Link","to","pathname","workspace_id","workspace_name","workspace_desc","workspaceId","columnKeys","Draggable","class","onClick","onRowClicked","highlightOnHover","progressPending","progressComponent","Loader","Tabs","defaultIndex","TabList","Tab","TabPanel","GraphBar","barTitle","dataLabel","colorCode","xAxixLabel","GraphLine","GraphPI","importerDataPie","importerData","exporterDataPie","exporterData","indianPortPie","indPortData","foreignPortPie","forPortData","hsCodePie","hsCodeData","countryDataPie","countryData","cityDataPie","cityData","AdvanceSearch","toggleFromChild","portOriginDataList","portDestinationDataList","shipmentModeDataList","type","hsCode4digitDataList","resetFilter","stdUnitDataList","Modal","show","onHide","handleModalClose","dialogClassName","Header","closeButton","Title","Body"],"mappings":"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","file":"static/js/7.79b6f225.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport * as Yup from \"yup\";\nimport DataTable from \"react-data-table-component\";\nimport DataTableExtensions from \"react-data-table-component-extensions\";\nimport \"react-data-table-component-extensions/dist/index.css\";\nimport moment from 'moment';\nimport Loader from '../components/Loader';\nimport 'react-tabs/style/react-tabs.css';\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css'\n\n\nconst AnalysisTable = (props) => {\n\nconst [tooltipContent, setTooltipContent] = useState(\"\");\nconst [tooltipPosition, setTooltipPosition] = useState({ top: 0, left: 0 })\n\n  let columns = []\n  props.columnList.map((item,index)=>{\n    item.sortable = true\n    columns.push(item)\n  })\n\n  const showTooltip = (row, event ) => {\n\n      setTooltipContent(event.target.textContent)\n      setTooltipPosition({ top: event.clientY, left: event.clientX+30 });\n\n   };\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n\n            <div >\n                <DataTable\n                className=\"table table-striped table-hover\"\n                columns={columns}\n                data={props.dataList}\n                // noHeader\n                defaultSortField=\"id\"\n                defaultSortAsc={false}\n                pagination\n                dense\n                onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                onRowMouseEnter={(row, e) => \n                  showTooltip(row, e) \n                }\n                // progressPending={pendingIndPort}\n                // progressComponent={<Loader />}\n                />\n                {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n            </div>\n      </div>\n\n\n    </>\n  );\n}\n\n\nexport default AnalysisTable;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Axios from '../shared/Axios';\nimport AxiosMaster from \"../shared/AxiosMaster\";\nimport { Field, Formik, FieldArray } from 'formik';\nimport { Form, FormGroup, Row, Modal, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport * as Yup from \"yup\";\nimport DataTable from \"react-data-table-component\";\nimport DataTableExtensions from \"react-data-table-component-extensions\";\nimport \"react-data-table-component-extensions/dist/index.css\";\nimport moment from 'moment';\nimport Loader from '../components/Loader';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport GraphPI from '../components/GraphPI';\nimport GraphBar from '../components/GrapghBar';\nimport GraphLine from '../components/GraphLine';\nimport { TagsInput } from \"react-tag-input-component\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css'\nimport { useHistory, Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { loaderStart, loaderStop } from \"../store/actions/loader\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport AnalysisTable from '../components/IndepthTable'\nimport AdvanceSearch from '../components/AdvanceSearch';\nimport Draggable from 'react-draggable';\nimport BlankImg from '../assets/image/BlankImg.png'\n\nconst dateFormat = \"YYYY-MM-DD\";\n\nlet initialValues = {\n  tradeType: \"\",\n  searchBy: \"\",\n  searchValue: \"\",\n  countryCode: \"\",\n  fromDate: \"\",\n  toDate: \"\",\n  matchType: \"\"\n};\n\n//let monthArray = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]\n\nconst validateForm = Yup.object().shape({\n  tradeType: Yup.string().required(\"Please select trade type\"),\n  searchBy: Yup.string().required(\"This field is required\"),\n  // searchValue: Yup.string().required(\"This field is required\"),\n  countryCode: Yup.string().required(\"This field is required\"),\n  fromDate: Yup.string().required(\"This field is required\"),\n  toDate: Yup.string().required(\"This field is required\"),\n});\n\n\nconst conditionalRowStyles = [\n  {\n    when: row => (row.importer_name == \"OTHERS\" || row.exporter_name == \"OTHERS\" || row.port_name == \"OTHERS\" \n    || row.hscode == \"OTHERS\" || row.country_name == \"OTHERS\" || row.port_name == \"OTHERS\" || row.city_name == \"OTHERS\"),\n    style: {\n    \t\t\tbackgroundColor: 'rgba(63, 195, 128, 0.9)',\n    \t\t\tcolor: 'white',\n          cursor: 'pointer',\n    \t\t\t'&:hover': {\n    \t\t\t\tcursor: 'pointer',\n    \t\t\t},\n    \t\t},\n  },\n  {\n    when: row => (row.importer_name == \"TOTAL\" || row.exporter_name == \"TOTAL\" || row.port_name == \"TOTAL\" \n    || row.hscode == \"TOTAL\" || row.country_name == \"TOTAL\" || row.port_name == \"TOTAL\" || row.city_name == \"TOTAL\"),\n    style: {\n    \t\t\tbackgroundColor: 'rgba(242, 38, 19, 0.9)',\n    \t\t\tcolor: 'white',\n    \t\t\t'&:hover': {\n    \t\t\t\tcursor: 'pointer',\n    \t\t\t},\n    \t\t},\n  }\n\n]\n\n\nconst Analysis = (props) => {\n\nconst search_id = props.location.state ? props.location.state.search_id : null ;\nconst importerForExport = props.location.state ? props.location.state.importerForExport : null ;\nconst exporterForImport = props.location.state ? props.location.state.exporterForImport : null ;\n\n\nconst [tooltipContent, setTooltipContent] = useState(\"\");\nconst [tooltipPosition, setTooltipPosition] = useState({ top: 0, left: 0 })\n\n\nconst showTooltip = (row, event ) => {\n\n// console.log(\"row ================= \", row)\n  // console.log(\"event ================= \", event.target.textContent)\n  if ((row.importer_name == \"OTHERS\" || row.exporter_name == \"OTHERS\" || row.port_name == \"OTHERS\" \n    || row.hscode == \"OTHERS\" || row.country_name == \"OTHERS\" || row.port_name == \"OTHERS\" || row.city_name == \"OTHERS\") || \n    (row.importer_name == \"TOTAL\" || row.exporter_name == \"TOTAL\" || row.port_name == \"TOTAL\" \n    || row.hscode == \"TOTAL\" || row.country_name == \"TOTAL\" || row.port_name == \"TOTAL\" || row.city_name == \"TOTAL\") )\n    {\n      setTooltipContent(\"\")\n      setTooltipPosition({ top: 0, left: 0 });\n    }\n    else\n    {\n      setTooltipContent(event.target.textContent)\n      setTooltipPosition({ top: event.clientY, left: event.clientX+30 });\n    }\n};\n\n\nconst fetchSearchQuery = () => {\n  if (search_id) {\n    props.loadingStart()\n    let queryBuilderSuggestionList = []\n    Axios({\n      method: \"GET\",\n      url: `/search-management/search/details`,\n      params: { searchId: search_id }\n    })\n      .then(res => {\n        if (res.data.queryList) {\n          let sParams = res.data.queryList[0].userSearchQuery;\n          initialValues = {\n            ...initialValues,\n            tradeType: sParams.tradeType,\n            matchType: sParams.matchType,\n            searchBy: sParams.searchBy,\n            searchValue: sParams.searchValue,\n            countryCode: sParams.countryCode,\n            fromDate: sParams.fromDate ? new Date(sParams.fromDate) : \"\",\n            toDate: sParams.toDate ? new Date(sParams.toDate) : \"\" ,\n            portOriginList: sParams.portOriginList,\n            portDestinationList: sParams.portDestinationList,\n            hsCode4DigitList: sParams.hsCode4DigitList,\n            importerList: sParams.importerList,\n            exporterList: sParams.exporterList,\n            cityOriginList: sParams.cityOriginList,\n            cityDestinationList: sParams.cityDestinationList,\n            queryBuilder: sParams.queryBuilder,\n            hsCodeList: sParams.hsCodeList,\n            shipmentModeList: sParams.shipModeList ? sParams.shipModeList : [],\n            stdUnitList: sParams.stdUnitList ? sParams.stdUnitList : [],\n          };\n          setSearchValue(sParams.searchValue)\n          if(sParams.queryBuilder && sParams.queryBuilder.length > 0) {\n\n            sParams.queryBuilder.map((newitem,newindex)=> {\n              queryBuilderSuggestionList[newindex] = newitem.searchValue\n            })\n          }\n          setQueryBuilderSearchValue(queryBuilderSuggestionList)\n          handleSearch(sParams);    \n          sParams.tradeType == \"IMPORT\" ? getTradingCountryList(\"I\") : getTradingCountryList(\"E\")  \n\n        }\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n      });\n  }\n}\n\n  const history = useHistory();\n\n  const [toggle, setToggle] = useState(false);\n  const [pendingImport, setPendingImport] = useState(true);\n  const [pendingExport, setPendingExport] = useState(true);\n  const [searchParams, setSearchParams] = useState();\n  const [importerDataList, setImporterDataList] = useState([]);\n  const [exporterDataList, setExporterDataList] = useState([]);\n  const [pendingIndPort, setPendingIndPort] = useState(true);\n  const [indianPortDataList, setIndianPortDataList] = useState([]);\n  const [pendingForPort, setPendingForPort] = useState(true);\n  const [forPortDataList, setForPortDataList] = useState([]);\n  const [pendingHSCode, setPendingHSCode] = useState(true);\n  const [hsCodeDataList, setHSCodeDataList] = useState([]);\n  const [pendingCountry, setPendingCountry] = useState(true);\n  const [countryDataList, setCountryDataList] = useState([]);\n  const [pendingCity, setPendingCity] = useState(true);\n  const [cityDataList, setCityDataList] = useState([]);\n  const [tradeCountryList, setTradeCountryList] = useState([]);\n  const [searchValue, setSearchValue] = useState();\n  const [minDate, setMinDate] = useState(new Date());\n  const [maxDate, setMaxDate] = useState(new Date());\n  const [monthWise, setMonthWiseList] = useState([]);\n  const [monthWiseDataList, setMonthWiseDataList] = useState([]);\n  const [queryBuilderSearchValue, setQueryBuilderSearchValue] = useState([]);\n  const [importerDataLT, setImporterDataLT] = useState([]);\n  const [exporterDataLT, setExportertDataLT] = useState([]);\n  const [indianPortDataLT, setIndianPortDataLT] = useState([]);\n  const [forPortDataLT, setForPortDataLT] = useState([]);\n  const [hsCodeDataLT, setHSCodeDataLT] = useState([]);\n  const [countryDataLT, setCountryDataLT] = useState([]);\n  const [cityDataLT, setCityDataLT] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [newModalColumn, setNewModalColumn] = useState([]);\n  const [newModalData, setNewModalData] = useState([]);\n\n  const [portOriginList, setPortOriginList] = useState([]);\n  const [portOriginDataArray, setPortOriginDataArray] = useState([]);\n  const [portDestinationDataArray, setPortDestinationDataArray] = useState([]);\n  const [portDestinationList, setPortDestinationList] = useState([]);\n  const [countryOriginList, setCountryOriginList] = useState([]);\n  const [countryDestinationList, setCountryDestinationList] = useState([]);\n  const [cityOriginList, setCityOriginList] = useState([]);\n  const [cityDestinationList, setCityDestinationList] = useState([]);\n  const [shipmentModeDataArray, setShipmentModeDataArray] = useState([]);\n  const [shipmentModeList, setShipmentModeList] = useState([]);\n  const [hsCode4DigitList, setHsCode4digitList] = useState([])\n  const [hsCode4digitDataArray, setHsCode4digitDataArray] = useState([])\n  const [stdUnitDataArray, setStdUnitDataArray] = useState([]);\n  const [stdUnitList, setStdUnitList] = useState([]);\n  \n  const [importerList, setImporterList] = useState([]);\n  const [importerDataArray, setImporterDataArray] = useState([]);\n  const [exporterList, setExporterList] = useState([]);\n  const [exporterDataArray, setExporterDataArray] = useState([]);\n  const [hsCodeList, setHsCodeList] = useState([]);\n  const [hsCodeDataArray, setHsCodeDataArray] = useState([]);\n\n\n  const monthWiseColumns = [\n    {\n      name: \"Month Name\",\n      selector: row => row.month_name,\n      sortable: false\n    },\n    {\n      name: \"Total Quantity\",\n      selector: row => row.quantity,\n      sortable: false,\n      conditionalCellStyles: [\n        {\n            when: row => stdUnitDataArray.length > 1 && stdUnitList.length == 0 ,\n            style: {\n              color: \"transparent\",\n              textShadow: \"0 0 8px #000\",\n            },\n        },\n      ]\n    },\n    {\n      name: \"Shipment Count\",\n      selector: row => row.shipment_count,\n      sortable: false\n    },\n    {\n      name: \"Total Value (USD)\",\n      selector: row => row.value_usd,\n      sortable: false\n    },\n  ];\n  \n  const importerColumns = [\n    {\n      name: \"Importer Name\",\n      selector: row => row.importer_name,\n      sortable: false\n    },\n    {\n      name: \"Total Quantity\",\n      selector: row => row.quantity,\n      sortable: false,\n      conditionalCellStyles: [\n        {\n            when: row => stdUnitDataArray.length > 1 && stdUnitList.length == 0,\n            style: {\n              color: \"transparent\",\n              textShadow: \"0 0 8px #000\"\n            },\n        },\n      ]\n    },\n    {\n      name: \"Shipment Count\",\n      selector: row => row.shipment_count,\n      sortable: false\n    },\n    {\n      name: \"Total Value (USD)\",\n      selector: row => row.value_usd,\n      sortable: false\n    },\n    {\n      name: \"Value Share %\",\n      selector: row => row.share,\n      sortable: false,\n      // cell: d => <span>{d.genres.join(\", \")}</span>\n    }\n  ];\n  \n  const exporterColumns = [\n    {\n      name: \"Exporter Name\",\n      selector: row => row.exporter_name,\n      sortable: false\n    },\n    {\n      name: \"Total Quantity\",\n      selector: row => row.quantity,\n      sortable: false,\n      conditionalCellStyles: [\n        {\n            when: row => stdUnitDataArray.length > 1 && stdUnitList.length == 0,\n            style: {\n              color: \"transparent\",\n              textShadow: \"0 0 8px #000\"\n            },\n        },\n      ]\n    },\n    {\n      name: \"Shipment Count\",\n      selector: row => row.shipment_count,\n      sortable: false\n    },\n    {\n      name: \"Total Value (USD)\",\n      selector: row => row.value_usd,\n      sortable: false\n    },\n    {\n      name: \"Value Share %\",\n      selector: row => row.share,\n      sortable: false,\n    }\n  ];\n  \n  const portColumns = [\n    {\n      name: \"Port Name\",\n      selector: row => row.port_name,\n      sortable: false\n    },\n    {\n      name: \"Total Quantity\",\n      selector: row => row.quantity,\n      sortable: false,\n      conditionalCellStyles: [\n        {\n            when: row => stdUnitDataArray.length > 1 && stdUnitList.length == 0,\n            style: {\n              color: \"transparent\",\n              textShadow: \"0 0 8px #000\"\n            },\n        },\n      ]\n    },\n    {\n      name: \"Shipment Count\",\n      selector: row => row.shipment_count,\n      sortable: false\n    },\n    {\n      name: \"Total Value (USD)\",\n      selector: row => row.value_usd,\n      sortable: false\n    },\n    {\n      name: \"Value Share %\",\n      selector: row => row.share,\n      sortable: false,\n    }\n  ];\n  const hsCodeColumns = [\n    {\n      name: \"HS Code\",\n      selector: row => row.hscode,\n      sortable: false\n    },\n    {\n      name: \"Total Quantity\",\n      selector: row => row.quantity,\n      sortable: false,\n      conditionalCellStyles: [\n        {\n            when: row => stdUnitDataArray.length > 1 && stdUnitList.length == 0,\n            style: {\n              color: \"transparent\",\n              textShadow: \"0 0 8px #000\"\n            },\n        },\n      ]\n    },\n    {\n      name: \"Shipment Count\",\n      selector: row => row.shipment_count,\n      sortable: false\n    },\n    {\n      name: \"Total Value (USD)\",\n      selector: row => row.value_usd,\n      sortable: false\n    },\n    {\n      name: \"Value Share %\",\n      selector: row => row.share,\n      sortable: false,\n    }\n  ];\n  const countryColumns = [\n    {\n      name: \"Country Name\",\n      selector: row => row.country_name,\n      sortable: false\n    },\n    {\n      name: \"Total Quantity\",\n      selector: row => row.quantity,\n      sortable: false,\n      conditionalCellStyles: [\n        {\n            when: row => stdUnitDataArray.length > 1 && stdUnitList.length == 0,\n            style: {\n              color: \"transparent\",\n              textShadow: \"0 0 8px #000\"\n            },\n        },\n      ]\n    },\n    {\n      name: \"Shipment Count\",\n      selector: row => row.shipment_count,\n      sortable: false\n    },\n    {\n      name: \"Total Value (USD)\",\n      selector: row => row.value_usd,\n      sortable: false\n    },\n    {\n      name: \"Value Share %\",\n      selector: row => row.share,\n      sortable: false,\n    }\n  ];\n  const cityColumns = [\n    {\n      name: \"City Name\",\n      selector: row => row.city_name,\n      sortable: false\n    },\n    {\n      name: \"Total Quantity\",\n      selector: row => row.quantity,\n      sortable: false,\n      conditionalCellStyles: [\n        {\n            when: row => stdUnitDataArray.length > 1 && stdUnitList.length == 0,\n            style: {\n              color: \"transparent\",\n              textShadow: \"0 0 8px #000\"\n            },\n        },\n      ]\n    },\n    {\n      name: \"Shipment Count\",\n      selector: row => row.shipment_count,\n      sortable: false\n    },\n    {\n      name: \"Total Value (USD)\",\n      selector: row => row.value_usd,\n      sortable: false\n    },\n    {\n      name: \"Value Share %\",\n      selector: row => row.share,\n      sortable: false,\n    }\n  ];\n\n  const handleModal = (rowData,columns)  => {\n    setShowModal(true)\n    setNewModalColumn(columns)\n    setNewModalData(rowData)\n  }\n\n  const handleModalClose = ()  => {\n    setShowModal(false)\n  }\n\n\n  const handleSearch = (values) => {\n    var params = [];\n    params[\"tradeType\"] = values.tradeType;\n    params[\"searchBy\"] = values.searchBy;\n    params[\"searchValue\"] = values.searchValue;\n    params[\"countryCode\"] = values.countryCode;\n    params[\"fromDate\"] = values.fromDate;\n    params[\"toDate\"] = values.toDate;\n    params[\"matchType\"] = values.matchType;\n    params[\"queryBuilder\"]= values.queryBuilder\n\n    if (values.portOriginList) {\n      setPortOriginList(values.portOriginList);\n      params[\"portOriginList\"] = values.portOriginList;\n    }\n    if (values.portDestinationList) {\n      setPortDestinationList(values.portDestinationList);\n      params[\"portDestinationList\"] = values.portDestinationList;\n    }\n    if (values.hsCodeList) {\n      setHsCodeList(values.hsCodeList);\n      params[\"hsCodeList\"] = values.hsCodeList;\n    }\n    if (values.hsCode4DigitList) {\n      setHsCode4digitList(values.hsCode4DigitList);\n      params[\"hsCode4DigitList\"] = values.hsCode4DigitList;\n    }\n    if (values.importerList) {\n      setImporterList(values.importerList);\n      params[\"importerList\"] = values.importerList;\n    }\n    if (values.exporterList) {\n      setExporterList(values.exporterList);\n      params[\"exporterList\"] = values.exporterList;\n    }\n    if (values.cityOriginList) {\n      setCityOriginList(values.cityOriginList);\n      params[\"cityOriginList\"] = values.cityOriginList;\n    }\n    if (values.cityDestinationList) {\n      setCityDestinationList(values.cityDestinationList);\n      params[\"cityDestinationList\"] = values.cityDestinationList;\n    }\n    if (values.shipmentModeList) {\n      setShipmentModeList(values.shipmentModeList);\n      params[\"shipmentModeList\"] = values.shipmentModeList;\n    }\n    if (values.stdUnitList) {\n      setStdUnitList(values.stdUnitList);\n      params[\"stdUnitList\"] = values.stdUnitList;\n    }\n\n    setSearchParams(params);\n    getImporterList(params);\n    getMonthWiseList(params)\n    getExporterList(params);\n    getIndianPortList(params);\n    getForeignPortList(params);\n    getHSCodeList(params);\n    getForeignCountryList(params);\n    getCityList(params);\n    getShipmentModeList(params);\n    getHSCode4digitList(params);\n    getStdUnitList(params);\n  }\n\n\n  const handleBlur = (e,setFieldValue) => {\n    if(e.target.value != \"\"){\n      let newSearchValue = searchValue\n      newSearchValue.push(e.target.value)\n      setSearchValue(newSearchValue)    \n      setFieldValue(\"searchValue\", newSearchValue);\n      \n      e.target.value = \"\"\n    }  \n  }\n\n  const getStdUnitList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/liststdunit`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let icList = [];\n        if (res.data.stdUnitList) {\n          res.data.stdUnitList.forEach((item) => {\n            let specificItem = { \"value\": item.std_unit, \"label\": item.std_unit };\n            icList.push(specificItem);\n          })\n        }\n        setStdUnitDataArray(icList);\n        props.loadingStop()\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setStdUnitDataArray([]);\n        props.loadingStop()\n      });\n  }\n\n  const getHSCode4digitList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listhscodes4digit`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let hsList = [];\n        if (res.data.hscodesList) {\n          res.data.hscodesList.forEach((item) => {\n            let specificItem = { \"value\": item.hscode, \"label\": item.hscode+ \" [\"+item.shipment_count+\"]\"};\n            hsList.push(specificItem);\n          })\n        }\n        setHsCode4digitDataArray(hsList);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setHsCode4digitDataArray([]);\n      });\n  }\n\n  const getShipmentModeList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listshipmentmode`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let icList = [];\n        if (res.data.shipmentModeList) {\n          res.data.shipmentModeList.forEach((item) => {\n            let specificItem = { \"value\": item.ship_mode, \"label\": item.ship_mode };\n            icList.push(specificItem);\n          })\n        }\n        setShipmentModeDataArray(icList);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setShipmentModeDataArray([]);\n      });\n  }\n\n\n  const getImporterList = (params) => {\n\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listimporters`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n\n        let importersList = [];\n        if (res.data.importersList) {\n          res.data.importersList.forEach((item) => {\n            let specificItem = { \"value\": item.importer_name, \"label\": item.importer_name+\" [\"+item.shipment_count+\"]\" };\n            importersList.push(specificItem);\n          })\n          setImporterDataArray(importersList)\n        }\n\n        let data = [];\n            let others = {};\n            let total = {};\n            let quantity = 0\n            let share = 0;\n            let shipment_count = 0\n            let value_inr = 0;\n            let value_usd = 0\n            let total_quantity = 0\n            let total_share = 0\n            let total_shipment_count = 0\n            let total_value_inr = 0\n            let total_value_usd = 0\n\n            res.data.importersList.forEach((item,index) => {\n              if(index < 10){\n                data.push(item);\n              }\n              // else{\n              //     quantity = quantity + item.quantity;\n              //     share = share + item.share;\n              //     shipment_count = shipment_count + item.shipment_count;\n              //     value_inr = value_inr + item.value_inr;\n              //     value_usd = value_usd + item.value_usd;\n              // }     \n              // total_quantity = total_quantity + item.quantity;\n              // total_share = total_share + item.share;\n              // total_shipment_count = total_shipment_count + item.shipment_count;\n              // total_value_inr = total_value_inr + item.value_inr;\n              // total_value_usd = total_value_usd + item.value_usd;\n            })\n            if( res.data.importersList.length >= 10){\n              others = {\n                importer_name : 'OTHERS',\n                quantity : res.data.totalQuantityTop10,\n                share : res.data.valueShareTop10,\n                shipment_count : res.data.shipmentCountTop10,\n                value_inr : res.data.totalValueINRTop10,\n                value_usd : res.data.totalValueUSDTop10\n              }\n              data.push(others)\n            }\n            total = {\n              importer_name : 'TOTAL',\n              quantity : res.data.totalQuantity,\n              share : res.data.valueShare,\n              shipment_count : res.data.shipmentCount,\n              value_inr : res.data.totalValueINR,\n              value_usd : res.data.totalValueUSD\n            }\n        \n            data.push(total)\n            setImporterDataLT(data)\n\n        setImporterDataList(res.data);\n        setPendingImport(false);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setPendingImport(false);\n      });\n  }\n\n  const getMonthWiseList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listmonthwise`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n\n        // let data = [];\n        // monthArray.map((month,index)=>{\n        //   res.data.monthwiseList.forEach((item,subindex) => {\n        //     let tempMnt = item.month_name.split(\"-\")\n        //       if(tempMnt[0] == month){\n        //         data.push(item);\n        //       }\n        //   })\n        // })\n\n        setMonthWiseDataList(res.data.monthwiseList);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n      });\n  }\n\n  const getTradingCountryList = (params) => {\n    props.loadingStart()\n    let searchParams = params == \"IMPORT\" ? \"I\" : \"E\"\n    AxiosMaster({\n      method: \"GET\",\n      url: `masterdata-management/countrylistbytrade/${searchParams}`,    \n    })\n      .then(res => {\n        let countryList = [];\n        // if (res.data.countryList) {\n        //   res.data.countryList.forEach((item) => {\n        //     let specificItem = { \"value\": item.shortcode, \"label\": item.name };\n        //     countryList.push(specificItem);\n        //   })\n        // }\n        setTradeCountryList(res.data.countryList)\n      })\n      .catch(err => {\n        setTradeCountryList([])\n      });\n  }\n\n  const getExporterList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listexporters`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n\n        let exportersList = [];\n        if (res.data.exportersList) {\n          res.data.exportersList.forEach((item) => {\n            let specificItem = { \"value\": item.exporter_name, \"label\": item.exporter_name+\" [\"+item.shipment_count+\"]\" };\n            exportersList.push(specificItem);\n          })\n          setExporterDataArray(exportersList)\n        }\n\n        let data = [];\n        let others = {};\n        let total = {};\n        let quantity = 0\n        let share = 0;\n        let shipment_count = 0\n        let value_inr = 0;\n        let value_usd = 0\n        let total_quantity = 0\n        let total_share = 0\n        let total_shipment_count = 0\n        let total_value_inr = 0\n        let total_value_usd = 0\n\n        res.data.exportersList.forEach((item,index) => {\n          if(index < 10){\n            data.push(item);\n          }\n          \n          // else{\n          //     quantity = quantity + item.quantity;\n          //     share = share + item.share;\n          //     shipment_count = shipment_count + item.shipment_count;\n          //     value_inr = value_inr + item.value_inr;\n          //     value_usd = value_usd + item.value_usd;\n          // }     \n          // total_quantity = total_quantity + item.quantity;\n          // total_share = total_share + item.share;\n          // total_shipment_count = total_shipment_count + item.shipment_count;\n          // total_value_inr = total_value_inr + item.value_inr;\n          // total_value_usd = total_value_usd + item.value_usd;\n        // }\n        })\n        if(res.data.exportersList.length  >= 10){\n          others = {\n            exporter_name : 'OTHERS',\n            quantity : res.data.totalQuantityTop10,\n            share : res.data.valueShareTop10,\n            shipment_count : res.data.shipmentCountTop10,\n            value_inr : res.data.totalValueINRTop10,\n            value_usd : res.data.totalValueUSDTop10\n          } \n\n        data.push(others)\n        }\n        total = {\n          exporter_name : 'TOTAL',\n          quantity : res.data.totalQuantity,\n          share : res.data.valueShare,\n          shipment_count : res.data.shipmentCount,\n          value_inr : res.data.totalValueINR,\n          value_usd : res.data.totalValueUSD\n        }\n\n        data.push(total)\n        setExportertDataLT(data)\n\n        setExporterDataList(res.data);\n        setPendingExport(false);\n        \n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setPendingExport(false);\n      });\n  }\n\n  const getIndianPortList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listindianports`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        \n        let portsList = [];\n        if (res.data.portsList) {\n          res.data.portsList.forEach((item) => {\n            let specificItem = { \"value\": item.port_name, \"label\": item.port_name+\" [\"+item.shipment_count+\"]\" };\n            portsList.push(specificItem);\n          })\n        }\n        setPortOriginDataArray(portsList);\n\n        let data = [];\n        let others = {};\n        let total = {};\n        let quantity = 0\n        let share = 0;\n        let shipment_count = 0\n        let value_inr = 0;\n        let value_usd = 0\n        let total_quantity = 0\n        let total_share = 0\n        let total_shipment_count = 0\n        let total_value_inr = 0\n        let total_value_usd = 0\n\n        res.data.portsList.forEach((item,index) => {\n          if(index < 10){\n            data.push(item);\n          }\n          // else{\n          //     quantity = quantity + item.quantity;\n          //     share = share + item.share;\n          //     shipment_count = shipment_count + item.shipment_count;\n          //     value_inr = value_inr + item.value_inr;\n          //     value_usd = value_usd + item.value_usd;\n          // }     \n          // total_quantity = total_quantity + item.quantity;\n          // total_share = total_share + item.share;\n          // total_shipment_count = total_shipment_count + item.shipment_count;\n          // total_value_inr = total_value_inr + item.value_inr;\n          // total_value_usd = total_value_usd + item.value_usd;\n        })\n        if(res.data.portsList.length >= 10){\n          others = {\n            port_name : 'OTHERS',\n            quantity : res.data.totalQuantityTop10,\n            share : res.data.valueShareTop10,\n            shipment_count : res.data.shipmentCountTop10,\n            value_inr : res.data.totalValueINRTop10,\n            value_usd : res.data.totalValueUSDTop10,\n            country : 'India'\n          }\n          data.push(others)\n        }\n        total = {\n          port_name : 'TOTAL',\n          quantity : res.data.totalQuantity,\n          share : res.data.valueShare,\n          shipment_count : res.data.shipmentCount,\n          value_inr : res.data.totalValueINR,\n          value_usd : res.data.totalValueUSD\n        }\n\n        data.push(total)\n        setIndianPortDataLT(data)\n\n        setIndianPortDataList(res.data);\n        setPendingIndPort(false);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setPendingIndPort(false);\n      });\n  }\n\n  const getForeignPortList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listforeignports`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let portsList = [];\n        if (res.data.portsList) {\n          res.data.portsList.forEach((item) => {\n            let specificItem = { \"value\": item.port_name, \"label\": item.port_name+\"[\"+item.shipment_count+\"]\" };\n            portsList.push(specificItem);\n          })\n        }\n        setPortDestinationDataArray(portsList);\n\n        let data = [];\n        let others = {};\n        let total = {};\n        let quantity = 0\n        let share = 0;\n        let shipment_count = 0\n        let value_inr = 0;\n        let value_usd = 0\n        let total_quantity = 0\n        let total_share = 0\n        let total_shipment_count = 0\n        let total_value_inr = 0\n        let total_value_usd = 0\n\n        res.data.portsList.forEach((item,index) => {\n          if(index < 10){\n            data.push(item);\n          }\n          // else{\n          //     quantity = quantity + item.quantity;\n          //     share = share + item.share;\n          //     shipment_count = shipment_count + item.shipment_count;\n          //     value_inr = value_inr + item.value_inr;\n          //     value_usd = value_usd + item.value_usd;\n          // }     \n          // total_quantity = total_quantity + item.quantity;\n          // total_share = total_share + item.share;\n          // total_shipment_count = total_shipment_count + item.shipment_count;\n          // total_value_inr = total_value_inr + item.value_inr;\n          // total_value_usd = total_value_usd + item.value_usd;\n        })\n        if(res.data.portsList.length >= 10){\n          others = {\n            port_name : 'OTHERS',\n            quantity : res.data.totalQuantityTop10,\n            share : res.data.valueShareTop10,\n            shipment_count : res.data.shipmentCountTop10,\n            value_inr : res.data.totalValueINRTop10,\n            value_usd : res.data.totalValueUSDTop10,\n            country : 'Foreign'\n          }\n          data.push(others)\n        }\n        total = {\n          port_name : 'TOTAL',\n          quantity : res.data.totalQuantity,\n          share : res.data.valueShare,\n          shipment_count : res.data.shipmentCount,\n          value_inr : res.data.totalValueINR,\n          value_usd : res.data.totalValueUSD\n        }\n\n        data.push(total)\n        setForPortDataLT(data)\n\n        setForPortDataList(res.data);\n        setPendingForPort(false);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setPendingForPort(false);\n      });\n  }\n\n  const getHSCodeList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listhscodes`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n\n        let hscodesList = [];\n          if (res.data.hscodesList) {\n            res.data.hscodesList.forEach((item) => {\n              let specificItem = { \"value\": item.hscode, \"label\": item.hscode+\" [\"+item.shipment_count+\"]\" };\n              hscodesList.push(specificItem);\n            })\n            setHsCodeDataArray(hscodesList)\n          }\n\n        let data = [];\n        let others = {};\n        let total = {};\n        let quantity = 0\n        let share = 0;\n        let shipment_count = 0\n        let value_inr = 0;\n        let value_usd = 0\n        let total_quantity = 0\n        let total_share = 0\n        let total_shipment_count = 0\n        let total_value_inr = 0\n        let total_value_usd = 0\n\n        res.data.hscodesList.forEach((item,index) => {\n          if(index < 10){\n            data.push(item);\n          }\n          // else{\n          //     quantity = quantity + item.quantity;\n          //     share = share + item.share;\n          //     shipment_count = shipment_count + item.shipment_count;\n          //     value_inr = value_inr + item.value_inr;\n          //     value_usd = value_usd + item.value_usd;\n          // }     \n          // total_quantity = total_quantity + item.quantity;\n          // total_share = total_share + item.share;\n          // total_shipment_count = total_shipment_count + item.shipment_count;\n          // total_value_inr = total_value_inr + item.value_inr;\n          // total_value_usd = total_value_usd + item.value_usd;\n        })\n        if(res.data.hscodesList.length >= 10){\n          others = {\n            hscode : 'OTHERS',\n            quantity : res.data.totalQuantityTop10,\n            share : res.data.valueShareTop10,\n            shipment_count : res.data.shipmentCountTop10,\n            value_inr : res.data.totalValueINRTop10,\n            value_usd : res.data.totalValueUSDTop10\n          }\n          data.push(others)\n        }\n        total = {\n          hscode : 'TOTAL',\n          quantity : res.data.totalQuantity,\n          share : res.data.valueShare,\n          shipment_count : res.data.shipmentCount,\n          value_inr : res.data.totalValueINR,\n          value_usd : res.data.totalValueUSD\n        }\n\n        data.push(total)\n        setHSCodeDataLT(data)\n\n        setHSCodeDataList(res.data);\n        setPendingHSCode(false);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setPendingHSCode(false);\n      });\n  }\n\n  const getForeignCountryList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listforeigncountries`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n\n        let fcList = [];\n        if (res.data.countriesList) {\n          res.data.countriesList.forEach((item) => {\n            let specificItem = { \"value\": item.country_name, \"label\": item.country_name+\" [\"+item.shipment_count+\"]\" };\n            fcList.push(specificItem);\n          })\n        }\n        setCountryOriginList(fcList);\n\n        let data = [];\n        let others = {};\n        let total = {};\n        let quantity = 0\n        let share = 0;\n        let shipment_count = 0\n        let value_inr = 0;\n        let value_usd = 0\n        let total_quantity = 0\n        let total_share = 0\n        let total_shipment_count = 0\n        let total_value_inr = 0\n        let total_value_usd = 0\n\n        res.data.countriesList.forEach((item,index) => {\n          if(index < 10){\n            data.push(item);\n          }\n          // else{\n          //     quantity = quantity + item.quantity;\n          //     share = share + item.share;\n          //     shipment_count = shipment_count + item.shipment_count;\n          //     value_inr = value_inr + item.value_inr;\n          //     value_usd = value_usd + item.value_usd;\n          // }     \n          // total_quantity = total_quantity + item.quantity;\n          // total_share = total_share + item.share;\n          // total_shipment_count = total_shipment_count + item.shipment_count;\n          // total_value_inr = total_value_inr + item.value_inr;\n          // total_value_usd = total_value_usd + item.value_usd;\n        })\n        if(res.data.countriesList.length >= 10){\n          others = {\n            country_name : 'OTHERS',\n            quantity : res.data.totalQuantityTop10,\n            share : res.data.valueShareTop10,\n            shipment_count : res.data.shipmentCountTop10,\n            value_inr : res.data.totalValueINRTop10,\n            value_usd : res.data.totalValueUSDTop10\n          }\n          data.push(others)\n        }\n        total = {\n          country_name : 'TOTAL',\n          quantity : res.data.totalQuantity,\n          share : res.data.valueShare,\n          shipment_count : res.data.shipmentCount,\n          value_inr : res.data.totalValueINR,\n          value_usd : res.data.totalValueUSD\n        }\n\n        data.push(total)\n        setCountryDataLT(data)\n\n        setCountryDataList(res.data);\n        setPendingCountry(false);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setPendingCountry(false);\n      });\n  }\n\n  const getCityList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": 20,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\":  params.portDestinationList,\n      \"hsCodeList\":  params.hsCodeList,\n      \"hsCode4DigitList\":  params.hsCode4DigitList,\n      \"exporterList\":  params.exporterList,\n      \"importerList\":  params.importerList,\n      \"cityOriginList\":  params.cityOriginList,\n      \"cityDestinationList\":  params.cityDestinationList,\n      \"searchId\": search_id,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList\n    }\n    props.loadingStart()\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listindiancities`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let icList = [];\n        if (res.data.citiesList) {\n          res.data.citiesList.forEach((item) => {\n            let specificItem = { \"value\": item.city_name, \"label\": item.city_name+\" [\"+item.shipment_count+\"]\" };\n            icList.push(specificItem);\n          })\n        }\n        setCountryDestinationList(icList);\n\n        let data = [];\n        let others = {};\n        let total = {};\n        let quantity = 0\n        let share = 0;\n        let shipment_count = 0\n        let value_inr = 0;\n        let value_usd = 0\n        let total_quantity = 0\n        let total_share = 0\n        let total_shipment_count = 0\n        let total_value_inr = 0\n        let total_value_usd = 0\n\n        res.data.citiesList.forEach((item,index) => {\n          if(index < 10){\n            data.push(item);\n          }\n          // else{\n          //     quantity = quantity + item.quantity;\n          //     share = share + item.share;\n          //     shipment_count = shipment_count + item.shipment_count;\n          //     value_inr = value_inr + item.value_inr;\n          //     value_usd = value_usd + item.value_usd;\n          // }     \n          // total_quantity = total_quantity + item.quantity;\n          // total_share = total_share + item.share;\n          // total_shipment_count = total_shipment_count + item.shipment_count;\n          // total_value_inr = total_value_inr + item.value_inr;\n          // total_value_usd = total_value_usd + item.value_usd;\n        })\n        if(res.data.citiesList.length >= 10){\n          others = {\n            city_name : 'OTHERS',\n            quantity : res.data.totalQuantityTop10,\n            share : res.data.valueShareTop10,\n            shipment_count : res.data.shipmentCountTop10,\n            value_inr : res.data.totalValueINRTop10,\n            value_usd : res.data.totalValueUSDTop10\n          }\n          data.push(others)\n        }\n        total = {\n          city_name : 'TOTAL',\n          quantity : res.data.totalQuantity,\n          share : res.data.valueShare,\n          shipment_count : res.data.shipmentCount,\n          value_inr : res.data.totalValueINR,\n          value_usd : res.data.totalValueUSD\n        }\n\n        data.push(total)\n        setCityDataLT(data)\n\n        setCityDataList(res.data);\n        setPendingCity(false);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setPendingCity(false);\n      });\n  }\n\n  useEffect(() => {\n    fetchSearchQuery()\n    if (searchParams && searchParams.tradeType) {\n      getImporterList(searchParams);\n      getMonthWiseList(searchParams);\n      getExporterList(searchParams);\n      getIndianPortList(searchParams);\n      getForeignPortList(searchParams);\n      getHSCodeList(searchParams);\n      getForeignCountryList(searchParams);\n      getCityList(searchParams);\n      getTradingCountryList(searchParams.tradeType);\n      getShipmentModeList(searchParams);\n      getHSCode4digitList(searchParams);\n      getStdUnitList(searchParams);\n    }\n  }, []);\n\n  const monthWiseLabel = () => {\n    let labels = [];\n    monthWiseDataList.forEach((item) => {\n      labels.push(item.month_name);\n    }) \n    return labels;\n  }\n  const MonthWiseData = () => {\n    let data = [];\n    let others = 0;\n    monthWiseDataList.forEach((item,index) => {\n      data.push(item.value_usd);    \n    })\n    data.push(others)\n    return data;\n  }\n\n  const importerLabel = () => {\n    let labels = [];\n    let tempImporterList = Object.assign(importerDataList)\n    tempImporterList.importersList.slice(0,10).forEach((item) => {\n      labels.push(item.importer_name);\n    })\n    if(importerDataList.importersList.length > 10){\n      labels.push(\"Others\")\n    }  \n    return labels;\n  }\n  const importerData = () => {\n    let data = [];\n    let others = 0;\n    importerDataList.importersList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.value_usd);\n      }\n      // else{\n      //   others = others + item.value_usd\n      // }     \n    })\n    data.push(importerDataList.totalValueUSDTop10)\n    return data;\n  }\n\n  const importerDataPie = () => {\n    let data = [];\n    let others = 0;\n    importerDataList.importersList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.share);\n      }\n      // else{\n      //   others = others + item.share\n      // }     \n    })\n    data.push(importerDataList.valueShareTop10)\n    return data;\n  }\n\n\n  const exporterLabel = () => {\n\n    let labels = [];\n    let tempExporterList = Object.assign(exporterDataList)\n    tempExporterList.exportersList.slice(0,10).forEach((item,index) => {\n      labels.push(item.exporter_name);\n    })\n    if(exporterDataList.exportersList.length > 10){\n      labels.push(\"Others\")\n    }  \n    return labels;\n  }\n\n  const exporterData = () => {\n    let data = [];\n    let others = 0;\n    exporterDataList.exportersList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.value_usd);\n      }\n      // else{\n      //   others = others + item.value_usd\n      // }     \n    })\n    data.push(exporterDataList.totalValueUSDTop10)\n    return data;\n  }\n\n  const exporterDataPie = () => {\n    let data = [];\n    let others = 0;\n    exporterDataList.exportersList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.share);\n      }\n      // else{\n      //   others = others + item.share\n      // }     \n    })\n    data.push(exporterDataList.valueShareTop10)\n    return data;\n  }\n\n\n  const indPortLabel = () => {\n    let labels = [];\n    let tempIndianPortList = Object.assign(indianPortDataList)\n    tempIndianPortList.portsList.slice(0,10).forEach((item) => {\n      labels.push(item.port_name);\n    })\n    if(indianPortDataList.portsList.length > 10){\n      labels.push(\"Others\")\n    }  \n    return labels;\n  }\n\n  const indPortData = () => {\n    let data = [];\n    let others = 0;\n    indianPortDataList.portsList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.value_usd);\n      }\n      // else{\n      //   others = others + item.value_usd\n      // }     \n    })\n    data.push(indianPortDataList.totalValueUSDTop10)\n    return data;\n  }\n\n  const indianPortPie = () => {\n    let data = [];\n    let others = 0;\n    indianPortDataList.portsList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.share);\n      }\n      // else{\n      //   others = others + item.share\n      // }     \n    })\n    data.push(indianPortDataList.valueShareTop10)\n    return data;\n  }\n\n  const forPortLabel = () => {\n    let labels = [];\n    let tempForPortList = Object.assign(forPortDataList)\n    tempForPortList.portsList.slice(0,10).forEach((item) => {\n      labels.push(item.port_name);\n    })\n    if(forPortDataList.portsList.length > 10){\n      labels.push(\"Others\")\n    }   \n    return labels;\n  }\n\n  const forPortData = () => {\n    let data = [];\n    let others = 0;\n    forPortDataList.portsList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.value_usd);\n      }\n      // else{\n      //   others = others + item.value_usd\n      // }    \n    })\n    data.push(forPortDataList.totalValueUSDTop10)\n    return data;\n  }\n\n  const foreignPortPie = () => {\n    let data = [];\n    let others = 0;\n    forPortDataList.portsList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.share);\n      }\n      // else{\n      //   others = others + item.share\n      // }     \n    })\n    data.push(forPortDataList.valueShareTop10)\n    return data;\n  }\n\n\n  const hsCodeLabel = () => {\n    let labels = [];\n    let tempHsCodeList = Object.assign(hsCodeDataList)\n    tempHsCodeList.hscodesList.slice(0,10).forEach((item) => {\n      labels.push(item.hscode);\n    })\n    if(hsCodeDataList.hscodesList.length > 10){\n      labels.push(\"Others\")\n    }  \n    return labels;\n  }\n\n  const hsCodeData = () => {\n    let data = [];\n    let others = 0;\n    hsCodeDataList.hscodesList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.value_usd);\n      }\n      // else{\n      //   others = others + item.value_usd\n      // }     \n    })\n    data.push(hsCodeDataList.totalValueUSDTop10)\n    return data;\n  }\n\n  const hsCodePie = () => {\n    let data = [];\n    let others = 0;\n    hsCodeDataList.hscodesList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.share);\n      }\n      // else{\n      //   others = others + item.share\n      // }     \n    })\n    data.push(hsCodeDataList.valueShareTop10)\n    return data;\n  }\n\n  const countryLabel = () => {\n    let labels = [];\n    let tempCountryList = Object.assign(countryDataList)\n    tempCountryList.countriesList.slice(0,10).forEach((item) => {\n      labels.push(item.country_name);\n    })\n    if(countryDataList.countriesList.length > 10){\n      labels.push(\"Others\")\n    }  \n    return labels;\n  }\n\n  const countryData = () => {\n    let data = [];\n    let others = 0;\n    countryDataList.countriesList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.value_usd);\n      }\n      // else{\n      //   others = others + item.value_usd\n      // }     \n    })\n    data.push(countryDataList.totalValueUSDTop10)\n    return data;\n  }\n\n  const countryDataPie = () => {\n    let data = [];\n    let others = 0;\n    countryDataList.countriesList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.share);\n      }\n      // else{\n      //   others = others + item.share\n      // }     \n    })\n    data.push(countryDataList.valueShareTop10)\n    return data;\n  }\n\n\n  const cityLabel = () => {\n    let labels = [];\n    let tempcityList = Object.assign(cityDataList)\n    tempcityList.citiesList.slice(0,10).forEach((item) => {\n      labels.push(item.city_name);\n    })\n    if(cityDataList.citiesList.length > 10){\n      labels.push(\"Others\")\n    }  \n    return labels;\n  }\n\n  const cityData = () => {\n    let data = [];\n    let others = 0;\n    cityDataList.citiesList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.value_usd);\n      }\n      // else{\n      //   others = others + item.value_usd\n      // }     \n    })\n    data.push(cityDataList.totalValueUSDTop10)\n    return data;\n  }\n\n  const cityDataPie = () => {\n    let data = [];\n    let others = 0;\n    cityDataList.citiesList.forEach((item,index) => {\n      if(index < 10){\n        data.push(item.share);\n      }\n      // else{\n      //   others = others + item.share\n      // }     \n    })\n    data.push(cityDataList.valueShareTop10)\n    return data;\n  }\n\n  const setMaxMinDate = (text,tradeType) => {\n    let tempRow = tradeCountryList.filter((item) => item.shortcode.toLowerCase().includes(text.toLowerCase()))\n    let fromDate = \"\"\n    let toDate = \"\"\n    if(tradeType == \"IMPORT\") {\n      fromDate = moment(tempRow[0].importFrom).format('MM-DD-YYYY')\n      toDate = moment(tempRow[0].importUpto).format('MM-DD-YYYY') \n    }\n    else {\n      fromDate = moment(tempRow[0].exportFrom).format('MM-DD-YYYY')\n      toDate = moment(tempRow[0].exportUpto).format('MM-DD-YYYY')\n    }\n      \n      setMinDate(new Date(fromDate))\n      setMaxDate(new Date(toDate))    \n  }\n\n  const swalResponse = () => {\n    Swal.fire({\n      title: 'Search !',\n      text: \"Your Search Limit Exhausted\",\n      icon: 'error',\n      dangerMode: true,\n      confirmButtonColor: '#3085d6',\n    })  \n  }\n\n  const queryBuilder = (values, errors, touched, setFieldTouched, setFieldValue, Fragment) => {\n    return(\n    <FieldArray\n    name=\"queryBuilder\"\n        render={arrayHelpers => (\n          <Row>\n            {values.queryBuilder && values.queryBuilder.length > 0 ? (\n              values.queryBuilder.map((data, index) => (\n              <Fragment key={index}>\n              <div className=\"col-md-2 pr-0 pb-2\">\n                <div className=\"input-search\">\n                  <Field\n                    name={`queryBuilder[${index}].relation`}\n                    component=\"select\"\n                    className={`hero__form-input form-control custom-select ${touched.matchType && errors.matchType ? \"is-invalid\" : \"\"}`}\n                    autoComplete=\"off\"\n                    onChange={event => {\n                      if(props.queryPerDay > 0 ){       \n                        setFieldValue(`queryBuilder[${index}].relation`, event.target.value);\n                      }\n                      else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                        swalResponse()\n                      }\n                    }}\n                  >\n                    <option>Select Relation</option>\n                      <option value=\"AND\">AND</option>\n                    <option value=\"OR\">OR</option>\n                    <option value=\"NOT\">NOT</option>\n                  </Field>\n                </div>\n              </div>\n              <div className=\"col-md-2 pr-0 pb-2\">\n    \n                <div className=\"input-search\">\n                  <Field\n                    name={`queryBuilder[${index}].searchBy`}\n                    component=\"select\"\n                    className={`hero__form-input form-control custom-select ${touched.searchBy && errors.searchBy ? \"is-invalid\" : \"\"}`}\n                    autoComplete=\"off\"\n                    onChange={event => {\n                      if(props.queryPerDay > 0 ){       \n                        event.target.value == \"PRODUCT\" ? setFieldValue(`queryBuilder[${index}].matchType`, \"C\") : setFieldValue(`queryBuilder[${index}].matchType`, \"L\");\n                        setFieldValue(`queryBuilder[${index}].searchBy`, event.target.value);\n                      }\n                      else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                        swalResponse()\n                      }\n                    }}\n                  >\n                    <option>Select Type</option>\n                    <option value=\"HS_CODE\">HS Code</option>\n                    <option value=\"PRODUCT\">Product</option>\n                    <option value=\"IMPORTER\">Importer</option>\n                    <option value=\"EXPORTER\">Exporter</option>\n                  </Field>\n                </div>\n              </div>\n              <div className=\"col-md-2 pr-0 pb-3\">\n                <div className=\"input-search\">\n                  <Field\n                    name={`queryBuilder[${index}].matchType`}\n                    component=\"select\"\n                    className={`hero__form-input form-control custom-select ${touched.matchType && errors.matchType ? \"is-invalid\" : \"\"}`}\n                    autoComplete=\"off\"\n                    onChange={event => {\n                      if(props.queryPerDay > 0 ){       \n                        setFieldValue(`queryBuilder[${index}].matchType`, event.target.value);\n                      }\n                      else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                        swalResponse()\n                      }\n                    }}\n                  >\n                    <option>Select</option>\n                    { values.queryBuilder && values.queryBuilder.length > 0 && values.queryBuilder[index].hasOwnProperty(\"searchBy\") && values.queryBuilder[index].searchBy == \"PRODUCT\" ? <option value=\"C\">Contains</option> : null }\n                    <option value=\"L\">Like</option>\n                  </Field>\n                </div>\n              </div>\n\n              {data && data.searchValue.length > 0 ?\n              <div className=\"col-md-6 pr-0 pb-3\">\n                <div className=\"input-search\" >\n                <FormGroup >\n                  <TagsInput\n                    value={data.searchValue}                           \n                    name=\"searchValue\"\n                    separators = {[\"Enter\",\"Tab\"]}\n                    classNames={{tag: \"\", input: \"\"}}\n                    placeHolder=\"Enter search value\"\n                    disabled = {true}\n                    onBlur = {(e) => {handleBlur(e,setFieldValue)} } \n                  />\n                  \n                {errors.searchValue && touched.searchValue ? (\n                  <span className=\"errorMsg\">{errors.searchValue}</span>\n                  ) : null}\n                </FormGroup>   \n                </div>\n              </div> : null      \n              }\n          </Fragment> \n              ))\n            ) : null}\n          \n          </Row>\n        )}\n      />\n    )\n  }\n\n  const onDataRowClicked = (row,index) =>{\n\n    if(row.hasOwnProperty(\"importer_name\") && row.importer_name == \"OTHERS\"){\n      handleModal(importerDataList.importersList,importerColumns)\n    }\n    else if(row.hasOwnProperty(\"exporter_name\") && row.exporter_name == \"OTHERS\"){\n      handleModal(exporterDataList.exportersList,exporterColumns)\n    }\n    else if(row.hasOwnProperty(\"hscode\") && row.hscode == \"OTHERS\"){\n      handleModal(hsCodeDataList.hscodesList,hsCodeColumns)\n    }\n    else if(row.hasOwnProperty(\"country_name\") && row.country_name == \"OTHERS\"){\n      handleModal(countryDataList.countriesList,countryColumns)\n    }\n    else if(row.hasOwnProperty(\"city_name\") && row.city_name == \"OTHERS\"){\n      handleModal(cityDataList.citiesList,cityColumns)\n    }\n    else if(row.hasOwnProperty(\"port_name\") && row.port_name == \"OTHERS\" && row.country == 'India'){\n      handleModal(indianPortDataList.portsList,portColumns)\n    }\n    else if(row.hasOwnProperty(\"port_name\") && row.port_name == \"OTHERS\" && row.country == 'Foreign'){\n      handleModal(forPortDataList.portsList,portColumns)\n    }\n  }\n\n  const resetFilter = (data) => {\n    // setPreviousTotalRecordCount(0)\n    // setIsDownloaded(\"N\")\n    updateFilter(data)\n  }\n\n  const updateFilter = (data) => {\n\n    if (data.portOriginList) {\n      setPortOriginList(data.portOriginList);\n    }\n    if (data.portDestinationList) {\n      setPortDestinationList(data.portDestinationList);\n    }\n    if (data.hsCodeList) {\n      setHsCodeList(data.hsCodeList);\n    }\n    if (data.hsCode4DigitList) {\n      setHsCode4digitList(data.hsCode4DigitList);\n    }\n    if (data.importerList) {\n      setImporterList(data.importerList);\n    }\n    if (data.exporterList) {\n      setExporterList(data.exporterList);\n    }\n    if (data.cityOriginList) {\n      setCityOriginList(data.cityOriginList);\n    }\n    if (data.cityDestinationList) {\n      setCityDestinationList(data.cityDestinationList);\n    }\n    if(data.shipmentModeList){\n      setShipmentModeList(data.shipmentModeList);\n    }\n    if(data.stdUnitList){\n      setStdUnitList(data.stdUnitList);\n    }\n    \n\n    if (searchParams && searchParams.tradeType) {\n      let params = searchParams;\n      params.portOriginList = data.portOriginList;\n      params.portDestinationList = data.portDestinationList;\n      params.hsCodeList = data.hsCodeList;\n      params.importerList = data.importerList;\n      params.exporterList = data.exporterList;\n      params.cityOriginList = data.cityOriginList;\n      params.cityDestinationList = data.cityDestinationList;\n      params.hsCode4DigitList = data.hsCode4DigitList;\n      params.shipmentModeList = data.shipmentModeList;\n      params.stdUnitList = data.stdUnitList;\n      params.searchFlag = false\n\n      if (data.portOriginList) {\n        setPortOriginList(data.portOriginList);\n        params[\"portOriginList\"] = data.portOriginList;\n      }\n      if (data.portDestinationList) {\n        setPortDestinationList(data.portDestinationList);\n        params[\"portDestinationList\"] = data.portDestinationList;\n      }\n      if (data.hsCodeList) {\n        setHsCodeList(data.hsCodeList);\n        params[\"hsCodeList\"] = data.hsCodeList;\n      }\n      if (data.hsCode4DigitList) {\n        setHsCode4digitList(data.hsCode4DigitList);\n        params[\"hsCode4DigitList\"] = data.hsCode4DigitList;\n      }\n      if (data.importerList) {\n        setImporterList(data.importerList);\n        params[\"importerList\"] = data.importerList;\n      }\n      if (data.exporterList) {\n        setExporterList(data.exporterList);\n        params[\"exporterList\"] = data.exporterList;\n      }\n      if (data.cityOriginList) {\n        setCityOriginList(data.cityOriginList);\n        params[\"cityOriginList\"] = data.cityOriginList;\n      }\n      if (data.cityDestinationList) {\n        setCityDestinationList(data.cityDestinationList);\n        params[\"cityDestinationList\"] = data.cityDestinationList;\n      }\n      if (data.shipmentModeList) {\n        setShipmentModeList(data.shipmentModeList);\n        params[\"shipmentModeList\"] = data.shipmentModeList;\n      }\n      if (data.stdUnitList) {\n        setStdUnitList(data.stdUnitList);\n        params[\"stdUnitList\"] = data.stdUnitList;\n      }\n      setSearchParams(params);\n     \n\n      getImporterList(params);\n      getMonthWiseList(params);\n      getExporterList(params);\n      getIndianPortList(params);\n      getForeignPortList(params);\n      getHSCodeList(params);\n      getForeignCountryList(params);\n      getCityList(params);\n      getShipmentModeList(params);\n      getHSCode4digitList(params);\n      getStdUnitList(params);\n\n      \n    }\n    setToggle(false);\n  }\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row mb-4 mt-4\">\n          <div className=\"col-md-12 list-page mt-3 mb-4\">\n            <div className=\"search-top\">\n              <h5 >\n               Select Search Parameters\n              </h5>\n              <Formik\n                enableReinitialize={true}\n                initialValues={initialValues}\n                validationSchema={validateForm}\n                onSubmit={handleSearch}\n              >\n                {({ values, errors, setFieldValue, setFieldError, touched, isValid, handleSubmit, submitForm, setFieldTouched }) => {\n                  return (       \n                    <Form>\n                      <div className=\"row\">\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <Field\n                              name=\"tradeType\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.tradeType && errors.tradeType ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.tradeType}\n                              disabled = {true}\n                              onChange={event => {\n                                setFieldValue(\"tradeType\", event.target.value);\n                                setFieldValue(\"countryCode\", \"\");\n                                setFieldValue(\"fromDate\", \"\") ;\n                                setFieldValue(\"toDate\", \"\") ;\n                                getTradingCountryList(event.target.value == \"IMPORT\" ? 'I' : 'E')\n                              }}\n                            >\n                              <option>Select Trade</option>\n                              <option value=\"IMPORT\">Import</option>\n                              <option value=\"EXPORT\">Export</option>\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"dropdown bootstrap-select hero__form-input\">\n                             <Field\n                              name=\"countryCode\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.countryCode && errors.countryCode ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.countryCode}\n                              disabled = {true}\n                              onChange={event => {\n                                setFieldValue(\"countryCode\", event.target.value);\n                                setFieldValue(\"fromDate\", \"\") ;\n                                setFieldValue(\"toDate\", \"\") ;\n                                setMaxMinDate(event.target.value, values.tradeType)\n                              }}\n                            >\n                              <option>Select Country</option>\n                              {Object.keys(tradeCountryList).map((item,index) => (                          \n                                <option key = {index} value={tradeCountryList[item].shortcode}>{tradeCountryList[item].name}</option>\n                              ))}\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <DatePicker\n                              name=\"fromDate\"\n                              dateFormat=\"yyyy MMM dd  \"\n                              placeholderText=\"From\"\n                              peekPreviousMonth\n                              peekPreviousYear\n                              showMonthDropdown\n                              showYearDropdown\n                              disabled = {true}\n                              minDate={new Date(minDate)}\n                              maxDate={new Date(maxDate)}\n                              className=\"form-control\"\n                              dropdownMode=\"select\"\n                              onChange={(value) => {\n                                setFieldValue(\"fromDate\",value) ;\n                                setFieldTouched(\"fromDate\");\n                              }}\n                              selected={values.fromDate}\n                          />\n                            {errors.fromDate && touched.fromDate ? (\n                                  <span className=\"errorMsg\">{errors.fromDate}</span>\n                              ) : null}\n                          </div>\n                        </div>\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <DatePicker\n                              name=\"toDate\"\n                              dateFormat=\"yyyy MMM dd  \"\n                              placeholderText=\"To\"\n                              peekPreviousMonth\n                              peekPreviousYear\n                              showMonthDropdown\n                              showYearDropdown\n                              disabled = {true}\n                              minDate={new Date(minDate)}\n                              maxDate={new Date(maxDate)}\n                              className=\"form-control\"\n                              dropdownMode=\"select\"\n                              onChange={(value) => {\n                                setFieldValue(\"toDate\",value) ;\n                                setFieldTouched(\"toDate\");\n                              }}\n                              selected={values.toDate}\n                            />       \n                          {errors.toDate && touched.toDate ? (\n                                <span className=\"errorMsg\">{errors.toDate}</span>\n                            ) : null}               \n                          </div>\n                        </div>\n                        \n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <Field\n                              name=\"searchBy\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.searchBy && errors.searchBy ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.searchBy}\n                              disabled = {true}\n                              onChange={event => {\n                                setFieldValue(\"searchBy\", event.target.value);\n                              }}\n                            >\n                              <option>Select Type</option>\n                              <option value=\"HS_CODE\">HS Code</option>\n                              <option value=\"PRODUCT\">Product</option>\n                              <option value=\"IMPORTER\">Importer</option>\n                              <option value=\"EXPORTER\">Exporter</option>\n                            </Field>\n                          </div>\n                        </div>\n\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <Field\n                              name=\"matchType\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.matchType && errors.matchType ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.matchType}\n                              disabled = {true}\n                              onChange={event => {\n                                setFieldValue(\"matchType\", event.target.value);\n                              }}\n                            >\n                              <option>Select</option>\n                              <option value=\"C\">Contains</option>\n                              <option value=\"L\">Like</option>\n                            </Field>\n                          </div>\n                        </div>\n\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                           <FormGroup>\n                            <TagsInput\n                              value={values.searchValue}                           \n                              name=\"searchValue\"\n                              separators = {[\"Enter\",\"Tab\"]}\n                              classNames={{tag: \"\", input: \"\"}}\n                              placeHolder=\"Enter search value\"\n                              disabled = {true}\n                              onBlur = {(e) => {handleBlur(e,setFieldValue)} } \n                              onChange={(e) => {\n                                setSearchValue(e);\n                                setFieldValue(\"searchValue\", e);\n                              \n                              }}\n                            />\n                         {errors.searchValue && touched.searchValue ? (\n                            <span className=\"errorMsg\">{errors.searchValue}</span>\n                            ) : null}\n                          </FormGroup>\n                          </div>\n                        </div>\n                        </div>\n\n                        {queryBuilder(values, errors, touched, setFieldTouched, setFieldValue, Fragment)}\n                       \n                        \n                       <div className=\"row\">\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          \n                          <Link className=\"btn btn-primary\" to={{ \n                                pathname: \"/list\", \n                                state: {search_id : search_id , \n                                  workspace_id : props.location.state ? props.location.state.workspace_id : \"\",\n                                  workspace_name : props.location.state ? props.location.state.workspace_name : \"\",\n                                  workspace_desc : props.location.state ? props.location.state.workspace_desc : \"\",\n                                  workspaceId : props.location.state ? props.location.state.workspaceId : \"\",\n                                  columnKeys : props.location.state ? props.location.state.columnKeys : \"\" \n                                }\n                                }}>\n                            Back to List\n                          </Link>\n                          \n                        </div>\n                      </div>\n                    </Form>\n                  )\n                }\n                }\n              </Formik>\n            </div>\n          </div>\n        </div>\n        \n        {searchParams && searchParams.tradeType ? (\n          <>\n            <div className=\"row mb-4\">    \n              <div className=\"col-lg-2 col-md-3 offset-md-1\">\n                <div className=\"card\">\n                  <div className=\"card-body bg-soft-success\">\n                    <div className=\"avatar\">\n                      <span className=\"avatar-title bg-soft-success rounded\">\n                        <i className=\"icon ion-md-filing text-primary font-size-24\"></i>\n                      </span>\n                    </div>\n                    <div className=\"list-in\">\n                      <p className=\"text-muted mt-0 mb-0\">Importer</p>\n                      <h4 className=\"mt-0 mb-0\">{importerDataList.importersList && importerDataList.importersList.length}</h4>\n                    </div>\n                  </div>\n                  {pendingImport && (\n                    <div className=\"loaderBox\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-2 col-md-3\">\n                <div className=\"card\">\n                  <div className=\"card-body bg-soft-primary\">\n                    <div className=\"avatar\">\n                      <span className=\"avatar-title bg-soft-primary rounded\">\n                        <i className=\"icon ion-md-business text-primary font-size-24\"></i>\n                      </span>\n                    </div>\n                    <div className=\"list-in\">\n                      <p className=\"text-muted mt-0 mb-0\">Exporter</p>\n                      <h4 className=\"mt-0 mb-0\">{exporterDataList.exportersList && exporterDataList.exportersList.length}</h4>\n                    </div>\n                  </div>\n                  {pendingExport && (\n                    <div className=\"loaderBox\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-2 col-md-2\">\n                <div className=\"card\">\n                  <div className=\"card-body bg-soft-primary\">\n                    <div className=\"avatar\">\n                      <span className=\"avatar-title bg-soft-primary rounded\">\n                        <i className=\"icon ion-ios-barcode text-primary font-size-24\"></i>\n                      </span>\n                    </div>\n                    <div className=\"list-in\">\n                      <p className=\"text-muted mt-0 mb-0\">&nbsp;&nbsp;&nbsp;HSCODE&nbsp;&nbsp;&nbsp;</p>\n                      <h4 className=\"mt-0 mb-0\">{hsCodeDataList.hscodesList && hsCodeDataList.hscodesList.length}</h4>\n                    </div>\n                  </div>\n                  {pendingHSCode && (\n                    <div className=\"loaderBox\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-2 col-md-3\">\n                <div className=\"card\">\n                  <div className=\"card-body bg-soft-success\">\n                    <div className=\"avatar\">\n                      <span className=\"avatar-title bg-soft-success rounded\">\n                        <i className=\"icon ion-md-flag text-success font-size-24\"></i>\n                      </span>\n                    </div>\n                    <div className=\"list-in\">\n                      <p className=\"text-muted mt-0 mb-0\">Foreign Ports</p>\n                      <h4 className=\"mt-0 mb-0\">{forPortDataList.portsList && forPortDataList.portsList.length}</h4>\n                    </div>\n                  </div>\n                  {pendingForPort && (\n                    <div className=\"loaderBox\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-2 col-md-3\">\n                <div className=\"card\">\n                  <div className=\"card-body bg-soft-primary\">\n                    <div className=\"avatar\">\n                      <span className=\"avatar-title bg-soft-primary rounded\">\n                        <i className=\"icon ion-ios-business text-primary font-size-24\"></i>\n                      </span>\n                    </div>\n                    <div className=\"list-in\">\n                      <p className=\"text-muted mt-0 mb-0\">Indian Ports</p>\n                      <h4 className=\"mt-0 mb-0\">{indianPortDataList.portsList && indianPortDataList.portsList.length}</h4>\n                    </div>\n                  </div>\n                  {pendingIndPort && (\n                    <div className=\"loaderBox\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <Draggable>\n                <div class=\"ad-butt\">\n                  <button className=\"btn btn-primary ad-butt-button\" onClick={() => setToggle(!toggle)}><i className=\"icon ion-md-search text-light font-size-35\"></i></button>\n                </div>\n            </Draggable>\n\n            {monthWiseDataList && monthWiseDataList.length > 0 ?\n            <>     \n              <h4>Month Wise Analysis</h4>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  <DataTable\n                    className=\"table table-striped table-hover\"\n                    columns={monthWiseColumns}\n                    data={monthWiseDataList}\n                    // noHeader\n                    defaultSortField=\"id\"\n                    defaultSortAsc={false}\n                    // pagination\n                    conditionalRowStyles = {conditionalRowStyles}\n                    onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                    onRowMouseEnter={(row, e) => \n                      showTooltip(row, e) \n                    }\n                    onRowClicked = {onDataRowClicked}\n                    dense\n                    highlightOnHover\n                    progressPending={pendingImport}\n                    progressComponent={<Loader />}\n                  />\n                  {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n                </div>\n                <div className=\"col-md-6\">\n                  {!pendingImport ? (\n                    <Tabs defaultIndex={0}>\n                      <TabList>\n                        {/* <Tab>Pie</Tab> */}\n                        <Tab>Bar</Tab>\n                        <Tab>Line</Tab>\n                      </TabList>\n\n                      {/* <TabPanel>\n                        <GraphPI barTitle={'Top 10 importers'} labels={importerLabel()} data={importerDataPie()} />\n                      </TabPanel> */}\n                      <TabPanel>\n                        <GraphBar barTitle={'Month Wise Analysis'} labels={monthWiseLabel()} data={MonthWiseData()} dataLabel=\"Total value (USD)\" colorCode = \"245,138,16\" xAxixLabel = \"Month\"/>\n                      </TabPanel>\n                      <TabPanel>\n                        <GraphLine barTitle={'Month Wise Analysis'} labels={monthWiseLabel()} data={MonthWiseData()} colorCode = \"245,138,16\" xAxixLabel = \"Month\"/>\n                      </TabPanel>\n                    </Tabs>\n                  ) : (\n                    <div className=\"loaderBlock\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>      \n              </div>\n            </> : null }\n            {importerDataList.importersList && importerDataList.importersList.length > 0 ?\n            <>     \n              <h4>Top 10 Importers</h4>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  {!pendingImport ? (\n                    <Tabs defaultIndex={0}>\n                      <TabList>\n                        <Tab>Pie</Tab>\n                        <Tab>Bar</Tab>\n                        {/* <Tab>Line</Tab> */}\n                      </TabList>\n\n                      <TabPanel>\n                        <GraphPI barTitle={'Top 10 importers'} labels={importerLabel()} data={importerDataPie()} />\n                      </TabPanel>\n                      <TabPanel>\n                        <GraphBar barTitle={'Top 10 importers'} labels={importerLabel()} data={importerData()} dataLabel=\"Total value (USD)\" />\n                      </TabPanel>\n                      {/* <TabPanel>\n                        <GraphLine barTitle={'Top 10 importers'} labels={importerLabel()} data={importerData()} />\n                      </TabPanel> */}\n                    </Tabs>\n                  ) : (\n                    <div className=\"loaderBlock\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"col-md-6\">\n                  <DataTable\n                    className=\"table table-striped table-hover\"\n                    columns={importerColumns}\n                    data={importerDataLT}\n                    // noHeader\n                    defaultSortField=\"id\"\n                    defaultSortAsc={false}\n                    // pagination\n                    conditionalRowStyles = {conditionalRowStyles}\n                    onRowClicked = {onDataRowClicked}\n                    dense\n                    highlightOnHover\n                    progressPending={pendingImport}\n                    progressComponent={<Loader />}\n                    onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                    onRowMouseEnter={(row, e) => \n                      showTooltip(row, e) \n                    }\n                  />\n                  {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n                </div>\n              </div>\n            </> : null }\n            {exporterDataList.exportersList && exporterDataList.exportersList.length > 0 ?\n            <>     \n              <h4>Top 10 Exporters</h4>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  <DataTable\n                    className=\"table table-striped table-hover\"\n                    columns={exporterColumns}\n                    data={exporterDataLT}\n                    // noHeader\n                    defaultSortField=\"id\"\n                    defaultSortAsc={false}\n                    conditionalRowStyles = {conditionalRowStyles}\n                    onRowClicked = {onDataRowClicked}\n                    highlightOnHover\n                    dense\n                    progressPending={pendingExport}\n                    progressComponent={<Loader />}\n                    onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                    onRowMouseEnter={(row, e) => \n                      showTooltip(row, e) \n                    }\n                  />\n                  {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n\n                </div>\n                <div className=\"col-md-6\">\n                  {!pendingExport ? (\n                    <Tabs defaultIndex={1}>\n                      <TabList>\n                        <Tab>Pie</Tab>\n                        <Tab>Bar</Tab>\n                        {/* <Tab>Line</Tab> */}\n                      </TabList>\n\n                      <TabPanel>\n                        <GraphPI barTitle={'Top 10 exporters'} labels={exporterLabel()} data={exporterDataPie()} />\n                      </TabPanel>\n                      <TabPanel>\n                        <GraphBar barTitle={'Top 10 exporters'} labels={exporterLabel()} data={exporterData()} dataLabel=\"Total value (USD)\" />\n                      </TabPanel>\n                      {/* <TabPanel>\n                        <GraphLine barTitle={'Top 10 exporters'} labels={exporterLabel()} data={exporterData()} />\n                      </TabPanel> */}\n                    </Tabs>\n                  ) : (\n                    <div className=\"loaderBlock\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </> : null }\n\n            {indianPortDataList.portsList && indianPortDataList.portsList.length > 0 ?\n            <> \n              <h4>Top 10 Indian ports</h4>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  {!pendingIndPort ? (\n                    <Tabs defaultIndex={2}>\n                      <TabList>\n                        <Tab>Pie</Tab>\n                        <Tab>Bar</Tab>\n                        {/* <Tab>Line</Tab> */}\n                      </TabList>\n\n                      <TabPanel>\n                        <GraphPI barTitle={'Top 10 indian ports'} labels={indPortLabel()} data={indianPortPie()} />\n                      </TabPanel>\n                      <TabPanel>\n                        <GraphBar barTitle={'Top 10 indian ports'} labels={indPortLabel()} data={indPortData()} dataLabel=\"Total value (USD)\"/>\n                      </TabPanel>\n                      {/* <TabPanel>\n                        <GraphLine barTitle={'Top 10 indian ports'} labels={indPortLabel()} data={indPortData()} />\n                      </TabPanel> */}\n                    </Tabs>\n                  ) : (\n                    <div className=\"loaderBlock\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"col-md-6\">\n                  <DataTable\n                    className=\"table table-striped table-hover\"\n                    columns={portColumns}\n                    data={indianPortDataLT}\n                    // noHeader\n                    defaultSortField=\"id\"\n                    defaultSortAsc={false}\n                    conditionalRowStyles = {conditionalRowStyles}\n                    highlightOnHover\n                    onRowClicked = {onDataRowClicked}\n                    dense\n                    progressPending={pendingIndPort}\n                    progressComponent={<Loader />}\n                    onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                    onRowMouseEnter={(row, e) => \n                      showTooltip(row, e) \n                    }\n                  />\n                  {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n                </div>\n              </div>\n            </> : null }\n\n            {forPortDataList.portsList && forPortDataList.portsList.length > 0 ?\n            <>\n              <h4>Top 10 Foreign Ports</h4>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  <DataTable\n                    className=\"table table-striped table-hover\"\n                    columns={portColumns}\n                    data={forPortDataLT}\n                    // noHeader\n                    defaultSortField=\"id\"\n                    defaultSortAsc={false}\n                    conditionalRowStyles = {conditionalRowStyles}\n                    onRowClicked = {onDataRowClicked}\n                    highlightOnHover\n                    dense\n                    progressPending={pendingForPort}\n                    progressComponent={<Loader />}\n                    onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                    onRowMouseEnter={(row, e) => \n                      showTooltip(row, e) \n                    }\n                  />\n                  {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n                </div>\n                <div className=\"col-md-6\">\n                  {!pendingForPort ? (\n                    <Tabs defaultIndex={0}>\n                      <TabList>\n                        <Tab>Pie</Tab>\n                        <Tab>Bar</Tab>\n                        {/* <Tab>Line</Tab> */}\n                      </TabList>\n\n                      <TabPanel>\n                        <GraphPI barTitle={'Top 10 foreign ports'} labels={forPortLabel()} data={foreignPortPie()} />\n                      </TabPanel>\n                      <TabPanel>\n                        <GraphBar barTitle={'Top 10 foreign ports'} labels={forPortLabel()} data={forPortData()} dataLabel=\"Total value (USD)\"/>\n                      </TabPanel>\n                      {/* <TabPanel>\n                        <GraphLine barTitle={'Top 10 foreign ports'} labels={forPortLabel()} data={forPortData()} />\n                      </TabPanel> */}\n                    </Tabs>\n                  ) : (\n                    <div className=\"loaderBlock\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </> : null }\n\n            {hsCodeDataList.hscodesList && hsCodeDataList.hscodesList.length > 0 ?\n            <>\n              <h4>Top 10 HS Codes</h4>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  {!pendingHSCode ? (\n                    <Tabs defaultIndex={1}>\n                      <TabList>\n                        <Tab>Pie</Tab>\n                        <Tab>Bar</Tab>\n                        {/* <Tab>Line</Tab> */}\n                      </TabList>\n\n                      <TabPanel>\n                        <GraphPI barTitle={'Top 10 HS Codes'} labels={hsCodeLabel()} data={hsCodePie()} />\n                      </TabPanel>\n                      <TabPanel>\n                        <GraphBar barTitle={'Top 10 HS Codes'} labels={hsCodeLabel()} data={hsCodeData()} dataLabel=\"Total value (USD)\"/>\n                      </TabPanel>\n                      {/* <TabPanel>\n                        <GraphLine barTitle={'Top 10 HS Codes'} labels={hsCodeLabel()} data={hsCodeData()} />\n                      </TabPanel> */}\n                    </Tabs>\n                  ) : (\n                    <div className=\"loaderBlock\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"col-md-6\">\n                  <DataTable\n                    className=\"table table-striped table-hover\"\n                    columns={hsCodeColumns}\n                    data={hsCodeDataLT}\n                    // noHeader\n                    defaultSortField=\"id\"\n                    defaultSortAsc={false}\n                    conditionalRowStyles = {conditionalRowStyles}\n                    onRowClicked = {onDataRowClicked}\n                    highlightOnHover\n                    dense\n                    progressPending={pendingHSCode}\n                    progressComponent={<Loader />}\n                    onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                    onRowMouseEnter={(row, e) => \n                      showTooltip(row, e) \n                    }\n                  />\n                  {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n                </div>\n              </div>\n            </> : null }\n\n            {countryDataList.countriesList && countryDataList.countriesList.length > 0 ?\n            <>\n              <h4>Top 10 Countries</h4>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  <DataTable\n                    className=\"table table-striped table-hover\"\n                    columns={countryColumns}\n                    data={countryDataLT}\n                    defaultSortField=\"id\"\n                    defaultSortAsc={false}\n                    conditionalRowStyles = {conditionalRowStyles}\n                    onRowClicked = {onDataRowClicked}\n                    highlightOnHover\n                    dense\n                    progressPending={pendingCountry}\n                    progressComponent={<Loader />}\n                    onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                    onRowMouseEnter={(row, e) => \n                      showTooltip(row, e) \n                    }\n                  />\n                  {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n                </div>\n                <div className=\"col-md-6\">\n                  {!pendingCountry ? (\n                    <Tabs defaultIndex={2}>\n                      <TabList>\n                        <Tab>Pie</Tab>\n                        <Tab>Bar</Tab>\n                        {/* <Tab>Line</Tab> */}\n                      </TabList>\n\n                      <TabPanel>\n                        <GraphPI barTitle={'Top 10 countries'} labels={countryLabel()} data={countryDataPie()} />\n                      </TabPanel>\n                      <TabPanel>\n                        <GraphBar barTitle={'Top 10 countries'} labels={countryLabel()} data={countryData()} dataLabel=\"Total value (USD)\"/>\n                      </TabPanel>\n                      {/* <TabPanel>\n                        <GraphLine barTitle={'Top 10 countries'} labels={countryLabel()} data={countryData()} />\n                      </TabPanel> */}\n                    </Tabs>\n                  ) : (\n                    <div className=\"loaderBlock\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </> : null }\n\n            {cityDataList.citiesList && cityDataList.citiesList.length > 0 ?\n            <>\n              <h4>Top 10 Cities</h4>\n              <div className=\"row mb-4\">\n                <div className=\"col-md-6\">\n                  {!pendingCity ? (\n                    <Tabs defaultIndex={0}>\n                      <TabList>\n                        <Tab>Pie</Tab>\n                        <Tab>Bar</Tab>\n                        {/* <Tab>Line</Tab> */}\n                      </TabList>\n\n                      <TabPanel>\n                        <GraphPI barTitle={'Top 10 Cities'} labels={cityLabel()} data={cityDataPie()} />\n                      </TabPanel>\n                      <TabPanel>\n                        <GraphBar barTitle={'Top 10 Cities'} labels={cityLabel()} data={cityData()} dataLabel=\"Total value (USD)\"/>\n                      </TabPanel>\n                      {/* <TabPanel>\n                        <GraphLine barTitle={'Top 10 Cities'} labels={cityLabel()} data={cityData()} />\n                      </TabPanel> */}\n                    </Tabs>\n                  ) : (\n                    <div className=\"loaderBlock\">\n                      <div className=\"loader\"></div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"col-md-6\">\n                  <DataTable\n                    className=\"table table-striped table-hover\"\n                    columns={cityColumns}\n                    data={cityDataLT}\n                    // noHeader\n                    defaultSortField=\"id\"\n                    defaultSortAsc={false}\n                    conditionalRowStyles = {conditionalRowStyles}\n                    onRowClicked = {onDataRowClicked}\n                    highlightOnHover\n                    dense\n                    progressPending={pendingCity}\n                    progressComponent={<Loader />}\n                    onRowMouseLeave = {(row, e)=> setTooltipContent(\"\") }\n                    onRowMouseEnter={(row, e) => \n                      showTooltip(row, e) \n                    }\n                  />\n                  {tooltipContent && (                  \n                    <span\n                     style={{\n                      position: \"fixed\",\n                      background: \"#000000\",\n                      color: \"#FFFFFF\",\n                      fontSize: \"14px\",\n                      padding:{\n                        top: \"5px\",\n                        left: \"5px\",\n                        right: \"5px\",\n                        bottom: \"5px\",\n                      },\n                      top: tooltipPosition.top,\n                      left: tooltipPosition.left,\n                     }}\n                    >\n                       {tooltipContent}\n                    </span>\n\n                  )}\n                </div>\n              </div>\n            </> : null }\n          </>\n        ) : null}\n        \n        {toggle && <AdvanceSearch toggleFromChild={setToggle}\n          importerDataList={importerDataArray}\n          exporterDataList={exporterDataArray}\n          portOriginDataList={portOriginDataArray}\n          portDestinationDataList={portDestinationDataArray}\n          countryOriginList={countryOriginList}\n          countryDestinationList={countryDestinationList}\n          hsCodeDataList={hsCodeDataArray}\n          shipmentModeDataList={shipmentModeDataArray}\n          shipmentModeList={shipmentModeList}\n          type={searchParams.tradeType}\n          updateFilter={updateFilter}\n          portOriginList={portOriginList}\n          portDestinationList={portDestinationList}\n          hsCodeList={hsCodeList}\n          importerList={importerList}\n          exporterList={exporterList}\n          cityOriginList={cityOriginList}\n          cityDestinationList={cityDestinationList}\n          hsCode4digitDataList={hsCode4digitDataArray}\n          hsCode4DigitList={hsCode4DigitList}\n          fetchSearchQuery={fetchSearchQuery}\n          resetFilter = {resetFilter}\n          stdUnitList = {stdUnitList}\n          stdUnitDataList = {stdUnitDataArray}\n          importerForExport = {importerForExport}\n          exporterForImport = {exporterForImport}\n\n        />}\n      </div>\n      <div>\n          { showModal ? \n          <Modal \n              show={showModal}\n              onHide={handleModalClose} \n              dialogClassName={\"modal-xl\"}\n              >             \n              <Modal.Header closeButton > Details </Modal.Header>\n              <Modal.Title >  </Modal.Title>\n\n                  <Modal.Body >\n                  <div>\n                  <AnalysisTable  \n                    columnList = {newModalColumn}\n                    dataList = {newModalData}\n                  />\n                  </div>\n                  </Modal.Body>\n                      \n            </Modal>\n          : null}\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loader.loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadingStart: () => dispatch(loaderStart()),\n    loadingStop: () => dispatch(loaderStop()),\n  };\n};\n\nexport default withRouter (connect( mapStateToProps, mapDispatchToProps)(Analysis));\n"],"sourceRoot":""}