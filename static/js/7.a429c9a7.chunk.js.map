{"version":3,"sources":["pages/list1.js"],"names":["initialValues","tradeType","searchBy","searchValue","countryCode","fromDate","toDate","matchType","dateRange","searchFlag","queryBuilder","SearchQueryCount","isMainSearch","scrollToRef","ref","window","scrollTo","current","offsetTop","validateForm","Yup","shape","required","test","value","checkGreaterStartEndTimes","this","parent","checkGreaterTimes","withRouter","connect","state","loading","loader","download_count","data","subscriptionId","dataAccess_count","totalWorkspace","subUserCount","queryPerDay","downloadArray","countryList","dataAccessInMonth","download_count_subUser","dataAccessUpto","maxDownload","dispatch","loadingStart","loaderStart","loadingStop","loaderStop","updateSubscriptionCount","updateDownloadArrayCount","setDloadCountSubuser","setSearchQuery","props","userId","localStorage","getItem","user","loggedUser","JSON","parse","userId_new","firstname","lastname","email","uplineId","userid","history","useHistory","search_id","location","searchTypeValue","search_type","workspace_id","workspace_name","workspace_desc","workspaceId","newSearch","gridRef","useRef","toggle","setToggle","useState","searchResult","setSearchResult","limit","setLimit","page","setPage","totalRecord","setTotalRecord","searchLoading","setSearchLoading","searchParams","setSearchParams","importerList","setImporterList","importerDataList","setImporterDataList","exporterList","setExporterList","exporterDataList","setExporterDataList","portOriginList","setPortOriginList","portOriginDataList","setPortOriginDataList","portDestinationDataList","setPortDestinationDataList","portDestinationList","setPortDestinationList","countryOriginList","setCountryOriginList","countryDestinationList","setCountryDestinationList","hsCodeList","setHsCodeList","hsCodeDataList","setHsCodeDataList","cityOriginList","setCityOriginList","cityDestinationList","setCityDestinationList","searchId","setSearchId","orderByColumn","setOrderByColumn","orderByMode","setOrderByMode","hscodeLoading","isHscodeLoading","portDestLoading","isPortDestLoading","coLoading","isCoLoading","importerLoading","isImporterLoading","exporterLoading","isExporterLoading","totalRecordLoading","isTotalRecordLoading","shipmentModeDataList","setShipmentModeDataList","shipmentModeList","setShipmentModeList","hsCode4DigitList","setHsCode4digitList","hsCode4digitDataList","setHsCode4digitDataList","filteredColumn","setFilteredColumn","suggestions","setSuggestions","queryBuilderSuggestions","setQueryBuilderSuggestions","isDownloaded","setIsDownloaded","noDataErrorMsg","setNoDataErrorMsg","isSearchClicked","setIsSearchClicked","previousTotalRecordCount","setPreviousTotalRecordCount","stdUnitDataList","setStdUnitDataList","stdUnitList","setStdUnitList","setCountryCode","importerForExport","setImporterForExport","exporterForImport","setExporterForImport","returnSearchId","setReturnSearchId","consumptionType","setConsumptionType","consumptionTypeDataList","setConsumptionTypeDataList","incotermList","setIncotermList","incotermListData","setIncotermListData","notifyPartyList","setNotifyPartyList","notifyPartyListData","setNotifyPartyListData","sTitleRef","sDescRef","workspaceRef","sWorkspaceRef","showModal","setShowModal","setTradeType","sTitleError","isSTitleError","sDescError","isSDescError","sNewWsError","isNewWsError","wsError","isWsError","workspaceList","setWorkspaceList","tradeCountryList","setTradeCountryList","multiTradeCountryList","setMultiTradeCountryList","selectedTradeCountry","setSelectedTradeCountry","setSearchValue","queryBuilderSearchValue","setQueryBuilderSearchValue","showNewWorkspaceInput","setshowNewWorkspaceInput","minDate","setMinDate","Date","maxDate","setMaxDate","filteredArray","setFilteredArray","countryWeightage","setCountryWeightage","filterCountryList","setFilterCountryList","selectedFilterCountryList","setSelectedFilterCountryList","toggleModal","UpdateSubscription","params","AxiosUser","method","url","stringify","headers","then","res","console","log","catch","err","useEffect","LoginCheck","setWorkspace","val","Swal","fire","title","text","icon","dangerMode","showCancelButton","confirmButtonColor","cancelButtonColor","isConfirm","saveQuery","postData","AxiosACT","errorMsg","getPaginationSearchData","searchType","getTradingCountryList","handleChangeLimit","dataKey","handleSearch","values","arguments","length","undefined","moment","format","minQuantity","maxQuantity","minValue","maxValue","minUnitPrice","maxUnitPrice","consumptionTypeList","descriptionList","conditionProductDescription","lp","setItem","getSearchData","exportToCSV","Math","round","Axios","exportDataSet","countryCodes","map","code","toUpperCase","tempTradeType","includes","toLowerCase","expForeignList","impForeignList","i","filtered","obj","key","push","downloadXLS","confirmButtonText","exportSelectedToCSV","checkedRowID","item","index","subItem","subIndex","id","dloadType","prevDownloadArray","newIDArray","remainingDload","remainingDload_subUser","html","fileType","fileExtension","fileName","wb","Sheets","XLSX","table_to_sheet","document","getElementById","header","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","UpdateDownloadTracher","downloadSearch","tempSearchResult","rangeQuantityStart","rangeQuantityEnd","rangeValueUsdStart","rangeValueUsdEnd","rangeUnitPriceUsdStart","rangeUnitPriceUsdEnd","incoterm","notifyParty","productDesc","conditionProductDesc","async","getTotalCount","objColumns","Object","keys","x","countryRes","tempOptions","countryWiseCount","_ref","ctry_code","ctry_name","shipment_count","label","getImporterList","getExporterList","getPortOriginList","getPortDestinationList","getHSCodeList","getIndianCityList","getForeignCountryList","getHSCode4digitList","getShipmentModeList","getStdUnitList","searchQuery","columnKey","formattedOptions","distinctColumnValuesList","_ref2","column_name","records_count","e","getConsumptionTypeDataList","apiResponse","_ref3","getIncotermListDataList","_ref4","getNotifyPartyListDataList","searchID","updateSearchCount","setTimeout","totalRecords","totalDownloadRecords","importList","importersList","forEach","specificItem","importer_name","exportList","exportersList","exporter_name","portsList","port_name","hsList","hscodesList","hscode","fcList","countriesList","country_name","icList","citiesList","city_name","ship_mode","std_unit","updateFilter","handleSaveSearch","parseInt","fetchSearchQuery","getSuggestionList","innitialParams","newSuggestionList","QueryBuilderNewSuggestionList","suggestionList","listSuggestion","SelectMenuButton","_jsx","components","MenuList","children","AxiosMaster","multiCountryList","shortcode","name","assign","hasChild","filter","queryBuilderSuggestionList","queryList","sParams","userSearchQuery","shipModeList","newitem","newindex","tempArray","fetchTradingCountryListOnInnitialize","selectedCountryList","tempRow","some","importFrom","importUpto","exportFrom","exportUpto","setDate","setMaxMinDate","selectedCountries","fromDates","toDates","country","find","min","max","removeItem","errors","touched","setFieldTouched","setFieldValue","Fragment","FieldArray","render","arrayHelpers","_Fragment","_jsxs","className","Field","component","autoComplete","onChange","event","target","swalResponse","hasOwnProperty","FormGroup","Creatable","placeholder","options","isMulti","isOptionDisabled","noOptionsMessage","onInputChange","newValue","selectedOption","itemList","defaultValue","onClick","remove","relation","Formik","enableReinitialize","validationSchema","onSubmit","checkValidErr","errMsg","subitem","resetForm","_ref5","setFieldError","isValid","handleSubmit","submitForm","Form","MultiSelect","selectedValues","option","labelledBy","tempmaxMin","tempMaxDate","diff","newMaxDate","newDate","d","subtract","fromdate","dateDiff","tempFromdate","add","DatePicker","dateFormat","placeholderText","peekPreviousMonth","peekPreviousYear","showMonthDropdown","showYearDropdown","dropdownMode","selected","newQuery","isQueryBuilder","resetSearch","disabled","preventDefault","src","require","default","Draggable","class","DataTableExport","newColumnsKeys","columnKeys","DataTableImport","AdvanceSearch","toggleFromChild","resetFilter","incotermDataList","notifyPartyDataList","hidden","DloadTemplateXLS","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","handleWorkspaceChange","ws","Footer","Button","variant","getNewWorkspaceId"],"mappings":"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","file":"static/js/7.a429c9a7.chunk.js","sourcesContent":["import React, { useState, useRef, useCallback, useEffect, Fragment } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\n// import { DatePicker, Space } from 'antd';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css'\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\nimport { MultiSelect } from \"react-multi-select-component\";\n// import beData from \"../assets/data/IMP-BE2.json\";\nimport moment from 'moment';\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport Axios from '../shared/Axios';\nimport { Field, Formik, Form, FieldArray } from 'formik';\nimport { Button, Modal, FormGroup } from 'react-bootstrap';\nimport * as Yup from \"yup\";\nimport DataTableImport from '../components/DataTableImport';\nimport DataTableExport from '../components/DataTableExport';\nimport AdvanceSearch from '../components/AdvanceSearch';\nimport Swal from 'sweetalert2';\nimport AxiosACT from \"../shared/AxiosACT\";\nimport AxiosMaster from \"../shared/AxiosMaster\";\nimport AxiosUser from \"../shared/AxiosUser\";\nimport Select, { components } from 'react-select';\nimport { DropDownTreeComponent, ColumnsDirective, ColumnDirective, Filter, Sort, Reorder, Inject, ITreeData } from '@syncfusion/ej2-react-dropdowns';\nimport Creatable from 'react-select/creatable';\nimport * as ReactDOM from 'react-dom';\n// import { TagsInput } from \"react-tag-input-component\";\n// import ReactTags from \"react-tag-autocomplete\";\nimport {\n  checkGreaterTimes,\n  checkGreaterStartEndTimes\n} from \"../shared/validationFunctions\";\nimport Draggable from 'react-draggable';\nimport { loaderStart, loaderStop } from \"../store/actions/loader\";\nimport { updateSubscriptionCount, updateDownloadArrayCount, setDloadCountSubuser, setSearchQuery } from \"../store/actions/data\"\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport DloadTemplateXLS from '../components/DloadTemplateXLS'\nimport { testJson } from '../shared/JSONString'\nimport LoginCheck from '../shared/LoginCheck';\n\nlet initialValues = {\n  tradeType: \"\",\n  searchBy: \"\",\n  searchValue: \"\",\n  countryCode: \"\",\n  fromDate: \"\",\n  toDate: \"\",\n  matchType: \"\",\n  dateRange: \"\",\n  searchFlag: false,\n  queryBuilder: [],\n  SearchQueryCount: 0,\n  isMainSearch: false\n};\n\nlet treeSettings = { autoCheck: true };\n\nconst dateFormat = \"YYYY-MM-DD\";\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)\n// const columnOptions = ['Date', 'HSCODE', 'Product Description', 'Value', 'Quantity', 'Unit', 'Port Of Destination', 'Foreign Country', 'Indian Company Name', 'Foreign Company Name']\n\n\n\nlet defaultCountry = []\n\nconst validateForm = Yup.object().shape({\n  tradeType: Yup.string().required(\"Please select trade type\"),\n  searchBy: Yup.string().required(\"This field is required\"),\n  matchType: Yup.string().required(\"This field is required\"),\n  dateRange: Yup.string().required(\"This field is required\"),\n\n  //   searchValue: Yup.mixed().when(['searchBy'], {\n  //     is: (searchBy) => (searchBy == 'HS_CODE'),\n  //     then: Yup.array().of(Yup.string()\n  //     .matches(/^[0-9]*$/, function() {\n  //       return \"Enter valid number\"\n  //     }))\n  //     .required('Required'),\n  //     otherwise: Yup.array().of(Yup.string().matches(/^[A-Za-z0-9-_\\s]*$/, function() {\n  //       return \"Enter valid input\"\n  //     })).required('Required')\n  // }),\n  // countryCode: Yup.array().of(Yup.string().required(\"This field is required\")),    \n  fromDate: Yup.date().required(\"This field is required\")\n    .test(\n      \"checkGreaterStartEndTimes\",\n      \"From date should be less than To date\",\n      function (value) {\n        if (value) {\n          return checkGreaterStartEndTimes(value, this.parent.toDate);\n        }\n        return true;\n      }\n    ),\n  toDate: Yup.date().required(\"This field is required\")\n    .test(\n      \"checkGreaterStartEndTimes\",\n      \"To date should be greater than From date\",\n      function (value) {\n        if (value) {\n          return checkGreaterStartEndTimes(this.parent.fromDate, value);\n        }\n        return true;\n      }\n    )\n    .test(\n      \"checkGreaterTimes\",\n      \"To date should be less than 3 years\",\n      function (value) {\n        if (value) {\n          return checkGreaterTimes(this.parent.fromDate, value);\n        }\n        return true;\n      }\n    ),\n});\n\nconst tempOptions = [\n  { label: \"Option 1\", value: \"1\" },\n  { label: \"Option 2\", value: \"2\" },\n  { label: \"Option 3\", value: \"3\" },\n];\n\n\nconst List = (props) => {\n\n  const userId = localStorage.getItem(\"userToken\");\n  const user = localStorage.getItem(\"user\");\n  const loggedUser = user ? JSON.parse(user) : {};\n  const userName = `${loggedUser.firstname} ${loggedUser.lastname}`;\n  const userEmail = loggedUser.email;\n  const userId_new = loggedUser.uplineId > 0 ? loggedUser.uplineId : loggedUser.userid\n\n  const history = useHistory();\n  const search_id = props.location.state ? props.location.state.search_id : null;\n\n  // console.log(\"props ==== \", props)\n  const searchTypeValue = props.location.state && props.location.state.search_type ? props.location.state.search_type : \"\";\n  const workspace_id = props.location.state && props.location.state.workspace_id ? props.location.state.workspace_id : \"\";\n  const workspace_name = props.location.state ? props.location.state.workspace_name : \"\";\n  const workspace_desc = props.location.state ? props.location.state.workspace_desc : \"\";\n  const workspaceId = props.location.state ? props.location.state.workspaceId : \"\";\n  const newSearch = [{ \"value\": props && props.location.state && props.location.state.searchValue, \"label\": props && props.location.state && props.location.state.searchValue }];\n\n\n  const gridRef = useRef();\n\n  const [toggle, setToggle] = useState(false);\n  const [searchResult, setSearchResult] = useState([]);\n  const [limit, setLimit] = useState(20);\n  const [page, setPage] = useState(1);\n  const [totalRecord, setTotalRecord] = useState(0);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [searchParams, setSearchParams] = useState(initialValues.searchValue);\n  const [importerList, setImporterList] = useState([]);\n  const [importerDataList, setImporterDataList] = useState([]);\n  const [exporterList, setExporterList] = useState([]);\n  const [exporterDataList, setExporterDataList] = useState([]);\n  const [portOriginList, setPortOriginList] = useState([]);\n  const [portOriginDataList, setPortOriginDataList] = useState([]);\n  const [portDestinationDataList, setPortDestinationDataList] = useState([]);\n  const [portDestinationList, setPortDestinationList] = useState([]);\n  const [countryOriginList, setCountryOriginList] = useState([]);\n  const [countryDestinationList, setCountryDestinationList] = useState([]);\n  const [hsCodeList, setHsCodeList] = useState([]);\n  const [hsCodeDataList, setHsCodeDataList] = useState([]);\n  const [cityOriginList, setCityOriginList] = useState([]);\n  const [cityDestinationList, setCityDestinationList] = useState([]);\n  const [searchId, setSearchId] = useState();\n  const [orderByColumn, setOrderByColumn] = useState(\"\");\n  const [orderByMode, setOrderByMode] = useState(\"desc\");\n  const [hscodeLoading, isHscodeLoading] = useState(false);\n  const [portDestLoading, isPortDestLoading] = useState(false);\n  const [coLoading, isCoLoading] = useState(false);\n  const [importerLoading, isImporterLoading] = useState(false);\n  const [exporterLoading, isExporterLoading] = useState(false);\n  const [totalRecordLoading, isTotalRecordLoading] = useState(false);\n\n  const [shipmentModeDataList, setShipmentModeDataList] = useState([]);\n  const [shipmentModeList, setShipmentModeList] = useState([]);\n  const [hsCode4DigitList, setHsCode4digitList] = useState([])\n  const [hsCode4digitDataList, setHsCode4digitDataList] = useState([])\n  const [filteredColumn, setFilteredColumn] = useState([])\n  const [suggestions, setSuggestions] = useState([])\n  const [queryBuilderSuggestions, setQueryBuilderSuggestions] = useState([])\n  const [isDownloaded, setIsDownloaded] = useState(\"\");\n  const [noDataErrorMsg, setNoDataErrorMsg] = useState(false);\n  const [isSearchClicked, setIsSearchClicked] = useState(true);\n  const [previousTotalRecordCount, setPreviousTotalRecordCount] = useState(0);\n  const [stdUnitDataList, setStdUnitDataList] = useState([]);\n  const [stdUnitList, setStdUnitList] = useState([]);\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [importerForExport, setImporterForExport] = useState(\"\");\n  const [exporterForImport, setExporterForImport] = useState(\"\");\n  const [returnSearchId, setReturnSearchId] = useState([]);\n\n  const [consumptionType, setConsumptionType] = useState([]);\n  const [consumptionTypeDataList, setConsumptionTypeDataList] = useState([]);\n  const [incotermList, setIncotermList] = useState([]);\n  const [incotermListData, setIncotermListData] = useState([]);\n  const [notifyPartyList, setNotifyPartyList] = useState([]);\n  const [notifyPartyListData, setNotifyPartyListData] = useState([]);\n  // const [fieldArray , setFieldArray] = useState([])\n\n\n\n  const sTitleRef = useRef();\n  const sDescRef = useRef();\n  const workspaceRef = useRef();\n  const sWorkspaceRef = useRef();\n  const [showModal, setShowModal] = useState(false);\n  const [tradeType, setTradeType] = useState(\"\");\n  const [sTitleError, isSTitleError] = useState(\"\");\n  const [sDescError, isSDescError] = useState(\"\");\n  const [sNewWsError, isNewWsError] = useState(\"\");\n  const [wsError, isWsError] = useState(\"\");\n  const [workspaceList, setWorkspaceList] = useState([]);\n  const [tradeCountryList, setTradeCountryList] = useState([]);\n  const [multiTradeCountryList, setMultiTradeCountryList] = useState([]);\n  const [selectedTradeCountry, setSelectedTradeCountry] = useState([])\n  const [searchValue, setSearchValue] = useState([]);\n  const [queryBuilderSearchValue, setQueryBuilderSearchValue] = useState([]);\n  const [showNewWorkspaceInput, setshowNewWorkspaceInput] = useState(false);\n  const [minDate, setMinDate] = useState(new Date());\n  const [maxDate, setMaxDate] = useState(new Date());\n  const [filteredArray, setFilteredArray] = useState([]);\n  const [countryWeightage, setCountryWeightage] = useState(1);\n\n  /* For country filter array after search */\n  const [filterCountryList, setFilterCountryList] = useState([]);\n  const [selectedFilterCountryList, setSelectedFilterCountryList] = useState([]);\n\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n    isSTitleError(\"\");\n    isSDescError(\"\");\n    isNewWsError(\"\");\n    isWsError(\"\")\n  }\n\n\n\n  const UpdateSubscription = (params) => {\n\n    AxiosUser({\n      method: \"PUT\",\n      url: `user-management/user-subscription/update/${props.subscriptionId}`,\n      data: JSON.stringify(params),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        console.log(\"user\", res.data);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        let errorMsg = \"Somethhing went wrong, please try again.\"\n      });\n\n  }\n\n  useEffect(() => {\n    LoginCheck(history)\n  }, [props.loading, searchValue, workspaceList, searchLoading])\n\n  const UpdateUser = (params) => {\n\n    AxiosUser({\n      method: \"PUT\",\n      url: `user-management/user/${userId}`,\n      data: JSON.stringify(params),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        console.log(\"user\", res.data);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        let errorMsg = \"Somethhing went wrong, please try again.\"\n      });\n\n  }\n\n  const UpdateDownloadTracher = (prevDownloadArray) => {\n\n    let DownloadArray = props.downloadArray\n\n    const params = {\n      \"userId\": userId_new,\n      \"downloadedRecords\": prevDownloadArray\n    }\n\n    AxiosACT({\n      method: \"POST\",\n      url: \"/activity-management/download-tracker/update\",\n      data: JSON.stringify(params),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        console.log(\"user\", res.data);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        let errorMsg = \"Somethhing went wrong, please try again.\"\n      });\n\n  }\n\n  const setWorkspace = (val) => {\n    if (props.totalWorkspace > 0) {\n      Swal.fire({\n        title: 'Create Workspace !',\n        text: `Available Limit ${props.totalWorkspace}. \\n Are you sure you want to Create New Workspace ?`,\n        icon: 'warning',\n        dangerMode: true,\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n      }).then((isConfirm) => {\n        if (isConfirm.value) {\n          setShowModal(val)\n        }\n      })\n    }\n    else {\n      Swal.fire({\n        title: 'Create Workspace !',\n        text: \"Your Workspace Limit Exhausted\",\n        icon: 'error',\n        dangerMode: true,\n        confirmButtonColor: '#3085d6',\n      }).then((isConfirm) => { })\n    }\n  }\n\n\n  const saveQuery = () => {\n    const postData = {\n      \"workspace_id\": workspace_id,\n      \"search_id\": searchId,\n      \"name\": workspace_name,\n      \"description\": workspace_desc,\n      \"is_active\": \"Y\",\n      \"id\": workspaceId\n    }\n    AxiosACT({\n      method: \"POST\",\n      url: `/activity-management/workspace/savesearch`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        Swal.fire({\n          title: 'Success',\n          text: \"Search query saved successfully\",\n          icon: 'success',\n        })\n      })\n      .catch(err => {\n        let errorMsg = \"Somethhing went wrong, please try again.\"\n        if (err.data.errorMsg) {\n          errorMsg = err.data.errorMsg;\n        }\n        Swal.fire({\n          title: 'Oops!',\n          text: errorMsg,\n          icon: 'error',\n        })\n      });\n  }\n\n  const handleWorkspaceChange = (e) => {\n    if (e.target.value == \"newWorkspace\") {\n      setshowNewWorkspaceInput(true)\n    }\n    else setshowNewWorkspaceInput(false)\n  }\n\n  useEffect(() => {\n    return () => {\n      initialValues = {}\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (searchParams && searchParams.tradeType) {\n      getPaginationSearchData(searchParams);\n    }\n    if (props && props.location.state && props.location.state.searchValue) {\n      setSearchValue(newSearch)\n    };\n\n    initialValues = {\n      ...initialValues,\n      tradeType: props && props.location.state && props.location.state.tradeType ? props.location.state.tradeType : \"\",\n      matchType: \"\",\n      searchBy: props && props.location.state && props.location.state.searchType ? props.location.state.searchType : \"\",\n      searchValue: props && props.location.state && props.location.state.searchType,\n      countryCode: props && props.location.state && props.location.state.countryCode,\n      fromDate: \"\",\n      toDate: \"\",\n      dateRange: \"\",\n      queryBuilder: []\n    };\n    if (props && props.location.state && props.location.state.tradeType) {\n      getTradingCountryList(props && props.location.state && props.location.state.tradeType == \"IMPORT\" ? \"I\" : \"E\")\n    }\n\n  }, [page, limit, orderByColumn, orderByMode])\n\n\n  const handleChangeLimit = dataKey => {\n    setPage(1);\n    setLimit(dataKey);\n  };\n\n\n\n  const mainSearch = (values) => {\n\n    if (values.searchValue && values.searchValue.length > 0) {\n      setIsSearchClicked(true)\n      setPortOriginList([])\n      setPortDestinationList([])\n      setHsCodeList([])\n      setHsCode4digitList([])\n      setImporterList([])\n      setExporterList([])\n      setCityOriginList([])\n      setCityDestinationList([])\n      setShipmentModeList([])\n      setStdUnitList([])\n      values.isMainSearch = true\n      // console.log(\"Submit values ==== \", values)\n      let checkValidErr = false\n      let errMsg = \"\"\n      if (values.searchBy == \"HS_CODE\") {\n        values.searchValue.map((item, index) => {\n          if (item.length < 2) {\n            checkValidErr = true\n            errMsg = \"Search Values should be greater than or equal to 2 digits\"\n          }\n        })\n      }\n      else {\n        values.searchValue.map((item, index) => {\n          if (item.length < 2) {\n            checkValidErr = true\n            errMsg = \"Search Values should be greater than or equal to 2 digits\"\n          }\n        })\n      }\n\n      if (values.queryBuilder.length > 0) {\n        values.queryBuilder.map((item, index) => {\n          if (item.searchBy == \"HS_CODE\") {\n            item.searchValue.length > 0 && item.searchValue.map((subitem, index) => {\n              if (subitem.length < 4) {\n                checkValidErr = true\n                errMsg = \"Search Values should be greater than or equal to 4 digits\"\n              }\n            })\n          }\n          else {\n            item.searchValue.length > 0 && item.searchValue.map((subitem, index) => {\n              if (subitem.length < 2) {\n                checkValidErr = true\n                errMsg = \"Search Values should be greater than or equal to 2 digits\"\n              }\n            })\n          }\n        })\n      }\n\n      if (checkValidErr == true) {\n        Swal.fire({\n          title: 'Alert !',\n          text: errMsg,\n          icon: 'error',\n          dangerMode: true,\n          confirmButtonColor: '#3085d6',\n        })\n      }\n      else {\n        props.loadingStart()\n        handleSearch(values)\n      }\n\n    }\n    else {\n      Swal.fire({\n        title: 'Alert !',\n        text: \"Enter Search Values\",\n        icon: 'error',\n        dangerMode: true,\n        confirmButtonColor: '#3085d6',\n      })\n    }\n\n  }\n\n  const handleSearch = (values, countryList = [], searchType = \"TRADE\") => {\n    setIsDownloaded(\"N\")\n\n    props.loadingStart()\n    var params = [];\n    params[\"searchType\"] = searchType;\n    params[\"tradeType\"] = values.tradeType;\n    params[\"searchBy\"] = values.searchBy;\n    params[\"searchValue\"] = values.searchValue;\n    params[\"countryCode\"] = values.countryCode;;\n    params[\"fromDate\"] = moment(values.fromDate).format(\"YYYY-MM-DD\");\n    params[\"toDate\"] = moment(values.toDate).format(\"YYYY-MM-DD\");\n    params[\"matchType\"] = values.matchType;\n    params[\"searchFlag\"] = values.searchFlag;\n    params[\"queryBuilder\"] = values.queryBuilder\n\n    if (values.portOriginList) {\n      setPortOriginList(values.portOriginList);\n      params[\"portOriginList\"] = values.portOriginList;\n    }\n    if (values.portDestinationList) {\n      setPortDestinationList(values.portDestinationList);\n      params[\"portDestinationList\"] = values.portDestinationList;\n    }\n    if (values.hsCodeList) {\n      setHsCodeList(values.hsCodeList);\n      params[\"hsCodeList\"] = values.hsCodeList;\n    }\n    if (values.hsCode4DigitList) {\n      setHsCode4digitList(values.hsCode4DigitList);\n      params[\"hsCode4DigitList\"] = values.hsCode4DigitList;\n    }\n    if (values.importerList) {\n      setImporterList(values.importerList);\n      params[\"importerList\"] = values.importerList;\n    }\n    if (values.exporterList) {\n      setExporterList(values.exporterList);\n      params[\"exporterList\"] = values.exporterList;\n    }\n    if (values.cityOriginList) {\n      setCityOriginList(values.cityOriginList);\n      params[\"cityOriginList\"] = values.cityOriginList;\n    }\n    if (values.cityDestinationList) {\n      setCityDestinationList(values.cityDestinationList);\n      params[\"cityDestinationList\"] = values.cityDestinationList;\n    }\n    if (values.shipmentModeList) {\n      setShipmentModeList(values.shipmentModeList);\n      params[\"shipmentModeList\"] = values.shipmentModeList;\n    }\n    if (values.stdUnitList) {\n      setStdUnitList(values.stdUnitList);\n      params[\"stdUnitList\"] = values.stdUnitList;\n    }\n\n    /* code add start on 23-04-2025 */\n\n    if (values.minQuantity) {\n      params[\"rangeQuantityStart\"] = values.minQuantity;\n    }\n    if (values.maxQuantity) {\n      params[\"rangeQuantityEnd\"] = values.maxQuantity;\n    }\n    if (values.minValue) {\n      params[\"rangeValueUsdStart\"] = values.minValue;\n    }\n    if (values.maxValue) {\n      params[\"rangeValueUsdEnd\"] = values.maxValue;\n    }\n    if (values.minUnitPrice) {\n      params[\"rangeUnitPriceUsdStart\"] = values.minUnitPrice;\n    }\n    if (values.maxUnitPrice) {\n      params[\"rangeUnitPriceUsdEnd\"] = values.maxUnitPrice;\n    }\n    if (values.consumptionTypeList) {\n      setConsumptionType(values.consumptionTypeList);\n      params[\"consumptionType\"] = values.consumptionTypeList;\n    }\n    if (values.incotermList) {\n      setIncotermList(values.incotermList);\n      params[\"incoterm\"] = values.incotermList;\n    }\n    if (values.notifyPartyList) {\n      setNotifyPartyList(values.notifyPartyList);\n      params[\"notifyParty\"] = values.notifyPartyList;\n    }\n    if (values.descriptionList) {\n      params[\"conditionProductDesc\"] = values.conditionProductDescription;\n      params[\"productDesc\"] = values.descriptionList;\n    }\n\n    /* code end on 23-04-2025 */\n\n    params[\"isMainSearch\"] = values.isMainSearch;\n\n    setSearchParams(params);\n    let lp = {\n      \"tradeType\": values.tradeType, \"searchBy\": values.searchBy, \"searchValue\": values.searchValue, \"countryCode\": values.countryCode,\n      \"fromDate\": moment(values.fromDate).format(\"YYYY-MM-DD\"), \"toDate\": moment(values.toDate).format(\"YYYY-MM-DD\"), \"matchType\": values.matchType\n    }\n    localStorage.setItem(\"searchParam\", JSON.stringify(lp));\n\n    if (searchId != \"\") {\n      setFilteredColumn([])\n      getSearchData(params, countryList);\n\n      // commented 05.04.2024\n\n      // getImporterList(params);\n      // getExporterList(params);\n      // getPortOriginList(params);\n      // getPortDestinationList(params);\n      // getHSCodeList(params);\n      // getIndianCityList(params);\n      // getForeignCountryList(params);\n      // getHSCode4digitList(params);\n      // getShipmentModeList(params);\n      // getStdUnitList(params);\n    }\n    else {\n      if (props.queryPerDay > 0) {\n        getSearchData(params);\n\n        // commented 05.04.2024\n\n        // getImporterList(params);\n        // getExporterList(params);\n        // getPortOriginList(params);\n        // getPortDestinationList(params);\n        // getHSCodeList(params);\n        // getIndianCityList(params);\n        // getForeignCountryList(params);\n        // getHSCode4digitList(params);\n        // getShipmentModeList(params);\n        // getStdUnitList(params);\n      }\n      else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n        props.loadingStop()\n        Swal.fire({\n          title: 'Search !',\n          text: \"Your Search Limit Exhausted\",\n          icon: 'error',\n          dangerMode: true,\n          confirmButtonColor: '#3085d6',\n        }).then((isConfirm) => {\n          // getImporterList(params);\n          // getExporterList(params);\n          // getPortOriginList(params);\n          // getPortDestinationList(params);\n          // getHSCodeList(params);\n          // getIndianCityList(params);\n          // getForeignCountryList(params);\n          // getHSCode4digitList(params);\n          // getShipmentModeList(params);\n        })\n      }\n    }\n\n  }\n\n\n  const resetSearch = (setFieldValue, values) => {\n    setSearchParams([]);\n    setSearchResult([]);\n    setSearchValue([]);\n    setQueryBuilderSearchValue([])\n    setFieldValue(\"fromDate\", \"\")\n    setFieldValue(\"toDate\", \"\")\n    setFieldValue(\"searchValue\", []);\n    setFieldValue(\"countryCode\", \"\");\n    setFieldValue(\"matchType\", \"\");\n    setFieldValue(\"searchBy\", \"\");\n    setFieldValue(\"tradeType\", \"\");\n    setFieldValue(\"dateRange\", \"\");\n    setFilteredColumn([]);\n    setTotalRecord(0);\n    values.tradeType = \"\"\n    values.searchBy = \"\"\n    values.matchType = \"\"\n    values.countryCode = \"\"\n    values.searchValue = \"\"\n    values.toDate = \"\"\n    values.fromDate = \"\"\n    values.dateRange = \"\"\n\n    setImporterDataList([]);\n    setExporterDataList([]);\n    setPortOriginDataList([]);\n    setPortDestinationDataList([]);\n    setHsCodeDataList([]);\n    setHsCode4digitDataList([]);\n    setCountryOriginList([]);\n    setCountryDestinationList([]);\n    setShipmentModeDataList([]);\n    setStdUnitDataList([]);\n\n    localStorage.removeItem(\"searchParam\");\n    setSearchId(\"\");\n    setCountryCode(\"\")\n    console.log(\"values === \", values)\n    //  window.resetFilter()\n  }\n\n\n  const exportToCSV = () => {\n    if (totalRecord * countryWeightage <= props.maxDownload) {\n      if (searchParams && searchParams.tradeType) {\n        const postData = {\n          \"searchType\": \"TRADE\",\n          \"tradeType\": searchParams.tradeType,\n          \"fromDate\": searchParams.fromDate,\n          \"toDate\": searchParams.toDate,\n          \"searchBy\": searchParams.searchBy,\n          \"searchValue\": searchParams.searchValue,\n          \"countryCode\": searchParams.countryCode,\n          \"pageNumber\": 0,\n          \"numberOfRecords\": Math.round(props.maxDownload / countryWeightage),\n          \"searchId\": \"\",\n          \"hsCodeList\": hsCodeList,\n          \"exporterList\": exporterList,\n          \"importerList\": importerList,\n          \"cityOriginList\": cityOriginList,\n          \"cityDestinationList\": cityDestinationList,\n          \"portOriginList\": portOriginList,\n          \"portDestinationList\": portDestinationList,\n          \"orderByColumn\": orderByColumn,\n          \"orderByMode\": orderByMode,\n          \"matchType\": searchParams.matchType,\n          \"hsCode4DigitList\": hsCode4DigitList,\n          \"queryBuilder\": searchParams.queryBuilder,\n          \"shipModeList\": shipmentModeList,\n          \"stdUnitList\": stdUnitList\n\n        }\n        Axios({\n          method: \"POST\",\n          url: `search-management/search`,\n          data: JSON.stringify(postData),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        })\n          .then(res => {\n            let exportDataSet = [];\n            // if (searchParams.tradeType.toLowerCase() === \"export\" && searchParams.countryCode.toUpperCase() != \"IND\" && searchParams.countryCode.toUpperCase() != \"SEZ\") {\n            //   exportDataSet = res.data.expForeignList\n            // }\n            // else if (searchParams.tradeType.toLowerCase() === \"export\" && searchParams.countryCode.toUpperCase() === \"IND\") {\n            //   exportDataSet = res.data.expIndList\n            // }\n            // else if (searchParams.tradeType.toLowerCase() === \"import\" && searchParams.countryCode.toUpperCase() != \"IND\" && searchParams.countryCode.toUpperCase() != \"SEZ\") {\n            //   exportDataSet = res.data.impForeignList\n            // }\n            // else if (searchParams.tradeType.toLowerCase() === \"import\" && searchParams.countryCode.toUpperCase() === \"IND\") {\n            //   exportDataSet = res.data.impIndList\n            // }\n            // else if (searchParams.tradeType.toLowerCase() === \"import\" && searchParams.countryCode.toUpperCase() === \"SEZ\") {\n            //   exportDataSet = res.data.impIndList\n            // }\n            // else if (searchParams.tradeType.toLowerCase() === \"export\" && searchParams.countryCode.toUpperCase() === \"SEZ\") {\n            //   exportDataSet = res.data.expIndList\n            // }\n            const countryCodes = searchParams.countryCode.map(code => code.toUpperCase());\n            const isIND = countryCodes.includes(\"IND\");\n            const isSEZ = countryCodes.includes(\"SEZ\");\n            const isForeign = !isIND && !isSEZ;\n\n            const tempTradeType = searchParams.tradeType.toLowerCase();\n\n            // if (tempTradeType === \"export\" && isForeign) {\n            //   exportDataSet = res.data.expForeignList;\n            // } else if (tempTradeType === \"export\" && isIND) {\n            //   exportDataSet = res.data.expIndList;\n            // } else if (tempTradeType === \"export\" && isSEZ) {\n            //   exportDataSet = res.data.expIndList;\n            // } else if (tempTradeType === \"import\" && isForeign) {\n            //   exportDataSet = res.data.impForeignList;\n            // } else if (tempTradeType === \"import\" && isIND) {\n            //   exportDataSet = res.data.impIndList;\n            // } else if (tempTradeType === \"import\" && isSEZ) {\n            //   exportDataSet = res.data.impIndList;\n            // }\n            // else {\n            //   exportDataSet = []\n            // }\n\n            /* change on 24-04-2025 */\n            if (tempTradeType === \"export\") {\n              exportDataSet = res.data.expForeignList;\n            } else if (tempTradeType === \"import\") {\n              exportDataSet = res.data.impForeignList;\n            } else {\n              exportDataSet = []\n            }\n            /* change on 24-04-2025 */\n\n            let filteredArray = []\n            const d = new Date();\n            for (let i = 0; i < exportDataSet.length; i++) {\n              let filtered = {};\n              let obj = exportDataSet[i];\n              // if(testJson.includes(obj[\"id\"])){\n              for (let key in obj) {\n                if (typeof (obj[key] == \"object\")) {\n                  let item = obj[key];\n                  if (item != null) {\n                    filtered[key] = obj[key];\n                  }\n                }\n              }\n              // }\n              // else{ console.log(\"Download values Not found ========= \", obj[\"id\"])}\n\n              filteredArray.push(filtered);\n            }\n            setFilteredArray(filteredArray)\n            // setTimeout(downloadXLS(searchParams,totalRecord,1), 5000)\n            downloadXLS(searchParams, 1, filteredArray)\n\n\n          })\n          .catch(err => {\n            console.log(\"Err == \", err);\n            setSearchLoading(false);\n          });\n      } else {\n        Swal.fire({\n          title: 'Alert!',\n          text: 'Please Search data first, then export',\n          icon: 'error',\n          confirmButtonText: 'OK'\n        })\n      }\n    }\n    else {\n      Swal.fire({\n        title: 'Alert!',\n        text: `You cannot download more than ${Math.round(props.maxDownload / countryWeightage)} records in a single search. Please refine your search criteria.`,\n        icon: 'error',\n        confirmButtonText: 'OK'\n      })\n    }\n  };\n\n  const exportSelectedToCSV = (checkedRowID) => {\n    let remainingDload = props.download_count - checkedRowID.length\n    let exportDataSet = [];\n    let filteredArray = []\n\n    searchResult.map((item, index) => {\n      checkedRowID.map((subItem, subIndex) => {\n        if (item.id == subItem) {\n          exportDataSet.push(item)\n        }\n      })\n    })\n\n    for (let i = 0; i < exportDataSet.length; i++) {\n      let filtered = {};\n      let obj = exportDataSet[i];\n      for (let key in obj) {\n        if (typeof (obj[key] == \"object\")) {\n          let item = obj[key];\n          if (item != null) {\n            filtered[key] = obj[key];\n          }\n        }\n      }\n      filteredArray.push(filtered);\n    }\n    setFilteredArray(filteredArray)\n    downloadXLS(searchParams, 2, filteredArray)\n\n  };\n\n  const downloadXLS = (searchParams, dloadType, filteredArray) => {\n\n    let prevDownloadArray = []\n    let newIDArray = []\n    prevDownloadArray = JSON.parse(JSON.stringify(props.downloadArray))\n\n\n    for (let i = 0; i < filteredArray.length; i++) {\n\n      let obj = filteredArray[i];\n      if (!prevDownloadArray.includes(obj[\"id\"])) {\n        newIDArray.push(obj[\"id\"]);\n        prevDownloadArray.push(obj[\"id\"])\n      }\n      else { console.log(\"Download values found ========= \", obj[\"id\"]) }\n    }\n\n    let remainingDload = props.download_count - newIDArray.length * countryWeightage\n    let remainingDload_subUser = props.download_count_subUser - filteredArray.length * countryWeightage\n    console.log(\"remainingDload ======= \", remainingDload)\n    if (remainingDload > 0) {\n      if ((loggedUser.uplineId > 0 && remainingDload_subUser > 0) || (loggedUser.uplineId == 0)) {\n        Swal.fire({\n          title: 'Download!',\n          html: `One row is equal to <b>${countryWeightage}</b> points. <br>Available Download <b>${loggedUser.uplineId > 0 ? props.download_count_subUser : props.download_count}</b>. <br> Total Record to Download <b>${loggedUser.uplineId > 0 ? filteredArray.length : newIDArray.length}</b>. \n        <br> Total Points to deduct <b>${loggedUser.uplineId > 0 ? filteredArray.length * countryWeightage : newIDArray.length * countryWeightage}</b>.<br> Remaining Download <b>${loggedUser.uplineId > 0 ? remainingDload_subUser : remainingDload}</b>. <br> Are you sure you want to Download ?`,\n          icon: 'warning',\n          dangerMode: true,\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n        }).then((isConfirm) => {\n          if (isConfirm.value) {\n\n            const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n            const fileExtension = \".xlsx\";\n            const fileName = searchParams.tradeType + \"_\" + searchParams.countryCode + \"_\" + searchParams.fromDate + \"_\" + searchParams.toDate;\n            // const ws = XLSX.utils.json_to_sheet(filteredArray);\n\n            const ws = XLSX.utils.table_to_sheet(document.getElementById(\"reportXLS\"), { header: 1 });\n\n            const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n            const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n            const data = new Blob([excelBuffer], { type: fileType });\n            FileSaver.saveAs(data, fileName + fileExtension);\n            setSearchLoading(false);\n\n            loggedUser.uplineId > 0 ?\n              props.setDloadCountSubuser({ download_count_subUser: remainingDload_subUser }) :\n              props.updateSubscriptionCount({\n                download_count: remainingDload,\n                subscriptionId: props.subscriptionId,\n                dataAccess_count: props.dataAccess_count,\n                subUserCount: props.subUserCount,\n                totalWorkspace: props.totalWorkspace,\n                queryPerDay: props.queryPerDay\n              })\n\n            if (newIDArray.length > 0) {\n              props.updateDownloadArrayCount(\n                {\n                  downloadArray: prevDownloadArray\n                })\n            }\n\n            UpdateSubscription({ \"downloadLimit\": remainingDload })\n            if (loggedUser.uplineId > 0) {\n              UpdateUser({ \"downloadLimit\": remainingDload_subUser })\n            }\n            UpdateDownloadTracher(prevDownloadArray)\n            downloadSearch(searchId, filteredArray.length)\n          }\n\n        })\n      }\n      else {\n        Swal.fire({\n          title: 'Download!',\n          text: \"Your Download Limit Exhausted\",\n          icon: 'error',\n          dangerMode: true,\n          confirmButtonColor: '#3085d6',\n        }).then((isConfirm) => { })\n      }\n    }\n    else {\n      Swal.fire({\n        title: 'Download!',\n        text: \"Your Download Limit Exhausted\",\n        icon: 'error',\n        dangerMode: true,\n        confirmButtonColor: '#3085d6',\n      }).then((isConfirm) => { })\n    }\n\n\n  }\n\n  const getSearchData = (params, countryList = []) => {\n    console.log(\"params ---------- \", params)\n    scrollToRef(gridRef);\n    setSearchLoading(true);\n    isTotalRecordLoading(true)\n    // let updatedCountryList = tradeCountryList && tradeCountryList.length == 0 ? countryList : tradeCountryList\n    // let selectedCountry = updatedCountryList.filter((item) => item.shortcode ==  (countryCode ? countryCode : params.countryCode))\n    //  console.log(\"params ======= \", countryCode)\n\n    params[\"tradeType\"] == \"E\" || params[\"tradeType\"] == \"EXPORT\" ? setCountryWeightage(1) : setCountryWeightage(1)\n\n    let tempSearchResult = []\n    // \"searchId\": searchId,\n    const postData = {\n      \"searchType\": params.searchType,\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      //\"pageNumber\": page - 1,\n      \"pageNumber\": 0,\n      \"numberOfRecords\": limit,\n      \"hsCodeList\": params.hsCodeList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"orderByColumn\": orderByColumn,\n      \"orderByMode\": orderByMode,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"matchType\": params.matchType,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n\n    }\n    console.log(\"params.returnSearchId === \", workspace_id)\n    if (params.returnSearchId) {\n      postData[\"searchId\"] = params.returnSearchId\n    }\n    if (search_id && (workspace_id == undefined || workspace_id == \"\")) {\n      if (!params.isMainSearch) {\n        postData[\"searchId\"] = search_id\n      }\n    }\n\n    Axios({\n      method: \"POST\",\n      url: `search-management/search`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(async (res) => {\n        props.setSearchQuery(postData);\n        // if (params.tradeType.toLowerCase() === \"export\" && params.countryCode.toUpperCase() != \"IND\" && params.countryCode.toUpperCase() != \"SEZ\") {\n        //   tempSearchResult = res.data.expForeignList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"export\" && params.countryCode.toUpperCase() === \"IND\") {\n        //   tempSearchResult = res.data.expIndList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"import\" && params.countryCode.toUpperCase() != \"IND\" && params.countryCode.toUpperCase() != \"SEZ\") {\n        //   tempSearchResult = res.data.impForeignList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"import\" && params.countryCode.toUpperCase() === \"IND\") {\n        //   tempSearchResult = res.data.impIndList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"export\" && params.countryCode.toUpperCase() === \"SEZ\") {\n        //   tempSearchResult = res.data.expIndList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"import\" && params.countryCode.toUpperCase() === \"SEZ\") {\n        //   tempSearchResult = res.data.impIndList\n        // }\n        const countryCodes = params.countryCode.map(code => code.toUpperCase());\n        const isIND = countryCodes.includes(\"IND\");\n        const isSEZ = countryCodes.includes(\"SEZ\");\n        const isForeign = !isIND && !isSEZ;\n\n        const tempTradeType = params.tradeType.toLowerCase();\n\n        // if (tempTradeType === \"export\" && isForeign) {\n        //   tempSearchResult = res.data.expForeignList;\n        // } else if (tempTradeType === \"export\" && isIND) {\n        //   tempSearchResult = res.data.expIndList;\n        // } else if (tempTradeType === \"export\" && isSEZ) {\n        //   tempSearchResult = res.data.expIndList;\n        // } else if (tempTradeType === \"import\" && isForeign) {\n        //   tempSearchResult = res.data.impForeignList;\n        // } else if (tempTradeType === \"import\" && isIND) {\n        //   tempSearchResult = res.data.impIndList;\n        // } else if (tempTradeType === \"import\" && isSEZ) {\n        //   tempSearchResult = res.data.impIndList;\n        // } else {\n        //   tempSearchResult = []\n        // }\n\n        /* change on 24-04-2025 */\n        if (tempTradeType === \"export\") {\n          tempSearchResult = res.data.expForeignList;\n        } else if (tempTradeType === \"import\") {\n          tempSearchResult = res.data.impForeignList;\n        } else {\n          tempSearchResult = []\n        }\n        /* change on 24-04-2025 */\n\n        if (tempSearchResult && tempSearchResult.length > 0) {\n\n          setSearchResult(tempSearchResult);\n          setNoDataErrorMsg(false)\n          getTotalCount(params, res.data.searchId);\n          // console.log(\"props.location.state.columnKeys\", props.location.state)\n          let filteredColumn = []\n          let objColumns = Object.keys(tempSearchResult[0]);\n          for (var x in objColumns) {\n            //  console.log(\"objColumns ==== \", objColumns)\n            if (tempSearchResult[0][objColumns[x]] != null) {\n              filteredColumn.push(objColumns[x]);\n            }\n          }\n          setFilteredColumn(filteredColumn)\n\n          setSearchId(res.data.searchId)\n          if (params.searchFlag == true && orderByColumn == \"\") {\n            props.updateSubscriptionCount({\n              download_count: props.download_count,\n              subscriptionId: props.subscriptionId,\n              dataAccess_count: props.dataAccess_count,\n              totalWorkspace: props.totalWorkspace,\n              subUserCount: props.subUserCount,\n              queryPerDay: props.queryPerDay - 1\n            })\n            UpdateSubscription({ \"queryPerDay\": props.queryPerDay - 1 })\n          }\n\n\n          /* After search set country Filter array */\n          Axios({\n            method: \"POST\",\n            url: `search-management/countrywisecount`,\n            data: JSON.stringify(postData),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          })\n            .then(countryRes => {\n              let tempdata = countryRes.data;\n              let tempOptions = tempdata.countryWiseCount.map(({ ctry_code, ctry_name, shipment_count }) => ({\n                label: `${ctry_name} (${shipment_count})`,\n                value: ctry_code\n              }));\n              // console.log(\"Country Res data , >>>>>>>>>>> \", tempOptions);\n              setFilterCountryList(tempOptions);\n            })\n\n\n          //Added here on 18.04.2024\n\n          getImporterList(params);\n          getExporterList(params);\n          getPortOriginList(params);\n          getPortDestinationList(params);\n          getHSCodeList(params);\n          getIndianCityList(params);\n          getForeignCountryList(params);\n          getHSCode4digitList(params);\n          getShipmentModeList(params);\n          getStdUnitList(params);\n          setSearchLoading(false);\n\n          /* After search set consumptionType Data array for advance search*/\n          await getConsumptionTypeDataList(postData);\n          /* After search set Incoterm list Data array for advance search*/\n          await getIncotermListDataList(postData);\n          /* After search set Notify Party list Data array for advance search*/\n          await getNotifyPartyListDataList(postData);\n        }\n        else {\n          setSearchResult([]);\n          setSearchLoading(false);\n          setTotalRecord(0)\n          setFilteredColumn([])\n          setNoDataErrorMsg(true)\n        }\n        props.loadingStop()\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setSearchId(\"\")\n        setSearchResult([]);\n        setSearchLoading(false);\n        setFilteredColumn([])\n        props.loadingStop()\n      });\n  }\n\n  const getPaginationSearchData = (params) => {\n    // console.log(\"params ---------- \", params)\n    scrollToRef(gridRef);\n    setSearchLoading(true);\n    isTotalRecordLoading(true)\n    let tempSearchResult = []\n    // \"searchId\": searchId,\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"searchId\": searchId,\n      \"hsCodeList\": params.hsCodeList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"orderByColumn\": orderByColumn,\n      \"orderByMode\": orderByMode,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"matchType\": params.matchType,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n\n    }\n\n    Axios({\n      method: \"POST\",\n      url: `search-management/search`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        // if (params.tradeType.toLowerCase() === \"export\" && params.countryCode.toUpperCase() != \"IND\" && params.countryCode.toUpperCase() != \"SEZ\") {\n        //   tempSearchResult = res.data.expForeignList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"export\" && params.countryCode.toUpperCase() === \"IND\") {\n        //   tempSearchResult = res.data.expIndList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"import\" && params.countryCode.toUpperCase() != \"IND\" && params.countryCode.toUpperCase() != \"SEZ\") {\n        //   tempSearchResult = res.data.impForeignList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"import\" && params.countryCode.toUpperCase() === \"IND\") {\n        //   tempSearchResult = res.data.impIndList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"export\" && params.countryCode.toUpperCase() === \"SEZ\") {\n        //   tempSearchResult = res.data.expIndList\n        // }\n        // else if (params.tradeType.toLowerCase() === \"import\" && params.countryCode.toUpperCase() === \"SEZ\") {\n        //   tempSearchResult = res.data.impIndList\n        // }\n        const countryCodes = params.countryCode.map(code => code.toUpperCase());\n        const isIND = countryCodes.includes(\"IND\");\n        const isSEZ = countryCodes.includes(\"SEZ\");\n        const isForeign = !isIND && !isSEZ;\n\n        const tempTradeType = params.tradeType.toLowerCase();\n\n        // if (tempTradeType === \"export\" && isForeign) {\n        //   tempSearchResult = res.data.expForeignList;\n        // } else if (tempTradeType === \"export\" && isIND) {\n        //   tempSearchResult = res.data.expIndList;\n        // } else if (tempTradeType === \"export\" && isSEZ) {\n        //   tempSearchResult = res.data.expIndList;\n        // } else if (tempTradeType === \"import\" && isForeign) {\n        //   tempSearchResult = res.data.impForeignList;\n        // } else if (tempTradeType === \"import\" && isIND) {\n        //   tempSearchResult = res.data.impIndList;\n        // } else if (tempTradeType === \"import\" && isSEZ) {\n        //   tempSearchResult = res.data.impIndList;\n        // }\n        // else {\n        //   tempSearchResult = []\n        // }\n\n        /* change on 24-04-2025 */\n        if (tempTradeType === \"export\") {\n          tempSearchResult = res.data.expForeignList;\n        } else if (tempTradeType === \"import\") {\n          tempSearchResult = res.data.impForeignList;\n        } else {\n          tempSearchResult = []\n        }\n        /* change on 24-04-2025 */\n\n        if (tempSearchResult && tempSearchResult.length > 0) {\n\n          setSearchResult(tempSearchResult);\n          setNoDataErrorMsg(false)\n          getTotalCount(params, res.data.searchId);\n          let filteredColumn = []\n          let objColumns = Object.keys(tempSearchResult[0]);\n          for (var x in objColumns) {\n            if (tempSearchResult[0][objColumns[x]] != null) {\n              filteredColumn.push(objColumns[x]);\n            }\n          }\n          setFilteredColumn(filteredColumn)\n          setSearchId(res.data.searchId)\n          // if(params.searchFlag == true && orderByColumn == \"\"){\n          //   props.updateSubscriptionCount({\n          //     download_count: props.download_count,\n          //     subscriptionId: props.subscriptionId,\n          //     dataAccess_count: props.dataAccess_count,\n          //     totalWorkspace: props.totalWorkspace,\n          //     subUserCount: props.subUserCount,\n          //     queryPerDay: props.queryPerDay - 1\n          //   })\n          //   UpdateSubscription({\"queryPerDay\": props.queryPerDay - 1})\n          // }\n          setSearchLoading(false);\n        }\n        else {\n          setSearchResult([]);\n          setSearchLoading(false);\n          setTotalRecord(0)\n          setFilteredColumn([])\n          setNoDataErrorMsg(true)\n        }\n        props.loadingStop()\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setSearchId(\"\")\n        setSearchResult([]);\n        setSearchLoading(false);\n        setFilteredColumn([])\n        props.loadingStop()\n      });\n  }\n\n\n  const getTotalCount = (params, searchID) => {\n    // console.log(\"params 2---------- \", params)\n    isTotalRecordLoading(true)\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"searchId\": searchID,\n      \"hsCodeList\": params.hsCodeList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"matchType\": params.matchType,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/searchcount`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        setTotalRecord(res.data);\n        updateSearchCount(res.data, searchID)\n        setTimeout(isTotalRecordLoading(false), 1000)\n\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setTotalRecord(0);\n        setNoDataErrorMsg(true)\n      });\n  }\n\n  const updateSearchCount = (totalRecords, searchID) => {\n    // console.log(\"params 2---------- \", params)\n    const postData = {\n      \"totalRecords\": totalRecords,\n    }\n    Axios({\n      method: \"PUT\",\n      url: `/search-management/updatesearchcount/${searchID}`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        console.log(\"Res\", res.data)\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setTotalRecord(0);\n      });\n  }\n\n  const downloadSearch = (searchID, totalDownloadRecords) => {\n    // if(isDownloaded != \"Y\") {\n    Axios({\n      method: \"PUT\",\n      url: `/search-management/downloadsearch?searchId=${searchID}&recordsDownloaded=${totalDownloadRecords}`,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        console.log(\"Res\", res.data)\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n      });\n\n    // if(search_id){\n    //   Axios({\n    //     method: \"PUT\",\n    //     url: `/search-management/downloadsearch?searchId=${search_id}`,\n    //     headers: {\n    //       \"Content-Type\": \"application/json\"\n    //     }\n    //   })\n    //     .then(res => {\n    //       console.log(\"Res\", res.data)\n    //     })\n    //     .catch(err => {\n    //       console.log(\"Err\", err);\n    //     });\n    // }\n    // } \n\n  }\n\n\n  const getImporterList = (params) => {\n    isImporterLoading(true);\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listimporters`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let importList = [];\n        if (res.data.importersList) {\n          res.data.importersList.forEach((item) => {\n            let specificItem = { \"value\": item.importer_name, \"label\": item.importer_name + \" [\" + item.shipment_count + \"]\" };\n            importList.push(specificItem);\n          })\n        }\n        setImporterDataList(importList);\n        isImporterLoading(false);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setImporterDataList([]);\n        isImporterLoading(false);\n      });\n  }\n\n  const getExporterList = (params) => {\n    isExporterLoading(true);\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listexporters`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let exportList = [];\n        if (res.data.exportersList) {\n          res.data.exportersList.forEach((item) => {\n            let specificItem = { \"value\": item.exporter_name, \"label\": item.exporter_name + \" [\" + item.shipment_count + \"]\" };\n            exportList.push(specificItem);\n          })\n        }\n        setExporterDataList(exportList);\n        isExporterLoading(false);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setExporterDataList([]);\n        isExporterLoading(false);\n      });\n  }\n\n  const getPortOriginList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n\n\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listindianports`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let portsList = [];\n        if (res.data.portsList) {\n          res.data.portsList.forEach((item) => {\n            let specificItem = { \"value\": item.port_name, \"label\": item.port_name + \" [\" + item.shipment_count + \"]\" };\n            portsList.push(specificItem);\n          })\n        }\n        setPortOriginDataList(portsList);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setPortOriginDataList([]);\n      });\n  }\n\n  const getPortDestinationList = (params) => {\n    isPortDestLoading(true);\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listforeignports`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let portsList = [];\n        if (res.data.portsList) {\n          res.data.portsList.forEach((item) => {\n            let specificItem = { \"value\": item.port_name, \"label\": item.port_name + \"[\" + item.shipment_count + \"]\" };\n            portsList.push(specificItem);\n          })\n        }\n        setPortDestinationDataList(portsList);\n        isPortDestLoading(false);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setPortDestinationDataList([]);\n        isPortDestLoading(false);\n      });\n  }\n\n  const getHSCodeList = (params) => {\n    isHscodeLoading(true);\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": moment(params.fromDate).format(\"YYYY-MM-DD\"),\n      \"toDate\": moment(params.toDate).format(\"YYYY-MM-DD\"),\n      \"searchBy\": params.searchBy ? params.searchBy : \"HS_CODE\",\n      \"searchValue\": params.searchValue ? params.searchValue : [\"2\"],\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType ? params.matchType : \"L\",\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listhscodes`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let hsList = [];\n        if (res.data.hscodesList) {\n          res.data.hscodesList.forEach((item) => {\n            let specificItem = { \"value\": item.hscode, \"label\": item.hscode + \" [\" + item.shipment_count + \"]\" };\n            hsList.push(specificItem);\n          })\n        }\n        setHsCodeDataList(hsList);\n        isHscodeLoading(false);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setHsCodeDataList([]);\n        isHscodeLoading(false);\n      });\n  }\n\n  const getHSCode4digitList = (params) => {\n    isHscodeLoading(true);\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listhscodes4digit`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let hsList = [];\n        if (res.data.hscodesList) {\n          res.data.hscodesList.forEach((item) => {\n            let specificItem = { \"value\": item.hscode, \"label\": item.hscode + \" [\" + item.shipment_count + \"]\" };\n            hsList.push(specificItem);\n          })\n        }\n        setHsCode4digitDataList(hsList);\n        isHscodeLoading(false);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        setHsCode4digitDataList([]);\n        isHscodeLoading(false);\n      });\n  }\n\n\n  const getForeignCountryList = (params) => {\n    isCoLoading(true);\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listforeigncountries`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let fcList = [];\n        if (res.data.countriesList) {\n          res.data.countriesList.forEach((item) => {\n            let specificItem = { \"value\": item.country_name, \"label\": item.country_name + \" [\" + item.shipment_count + \"]\" };\n            fcList.push(specificItem);\n          })\n        }\n        setCountryOriginList(fcList);\n        setTimeout(isCoLoading(false), 1000)\n          ;\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setCountryOriginList([]);\n        isCoLoading(false);\n      });\n  }\n\n  const getIndianCityList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listindiancities`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let icList = [];\n        if (res.data.citiesList) {\n          res.data.citiesList.forEach((item) => {\n            let specificItem = { \"value\": item.city_name, \"label\": item.city_name + \" [\" + item.shipment_count + \"]\" };\n            icList.push(specificItem);\n          })\n        }\n        setCountryDestinationList(icList);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setCountryDestinationList([]);\n      });\n  }\n\n  const getShipmentModeList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/listshipmentmode`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let icList = [];\n        if (res.data.shipmentModeList) {\n          res.data.shipmentModeList.forEach((item) => {\n            let specificItem = { \"value\": item.ship_mode, \"label\": item.ship_mode };\n            icList.push(specificItem);\n          })\n        }\n        setShipmentModeDataList(icList);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setShipmentModeDataList([]);\n      });\n  }\n\n  const getStdUnitList = (params) => {\n    const postData = {\n      \"searchType\": \"TRADE\",\n      \"tradeType\": params.tradeType,\n      \"fromDate\": params.fromDate,\n      \"toDate\": params.toDate,\n      \"searchBy\": params.searchBy,\n      \"searchValue\": params.searchValue,\n      \"countryCode\": params.countryCode,\n      \"pageNumber\": page - 1,\n      \"numberOfRecords\": limit,\n      \"matchType\": params.matchType,\n      \"portOriginList\": params.portOriginList,\n      \"portDestinationList\": params.portDestinationList,\n      \"hsCodeList\": params.hsCodeList,\n      \"hsCode4DigitList\": params.hsCode4DigitList,\n      \"exporterList\": params.exporterList,\n      \"importerList\": params.importerList,\n      \"cityOriginList\": params.cityOriginList,\n      \"cityDestinationList\": params.cityDestinationList,\n      \"searchId\": searchId,\n      \"queryBuilder\": params.queryBuilder,\n      \"shipModeList\": params.shipmentModeList,\n      \"stdUnitList\": params.stdUnitList,\n      \"rangeQuantityStart\": params.rangeQuantityStart,\n      \"rangeQuantityEnd\": params.rangeQuantityEnd,\n      \"consumptionType\": params.consumptionType,\n      \"rangeValueUsdStart\": params.rangeValueUsdStart,\n      \"rangeValueUsdEnd\": params.rangeValueUsdEnd,\n      \"rangeUnitPriceUsdStart\": params.rangeUnitPriceUsdStart,\n      \"rangeUnitPriceUsdEnd\": params.rangeUnitPriceUsdEnd,\n      \"incoterm\": params.incoterm,\n      \"notifyParty\": params.notifyParty,\n      \"productDesc\": params.productDesc,\n      \"conditionProductDesc\": params.conditionProductDesc\n    }\n    Axios({\n      method: \"POST\",\n      url: `/search-management/liststdunit`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        let icList = [];\n        if (res.data.stdUnitList) {\n          res.data.stdUnitList.forEach((item) => {\n            let specificItem = { \"value\": item.std_unit, \"label\": item.std_unit };\n            icList.push(specificItem);\n          })\n        }\n        setStdUnitDataList(icList);\n      })\n      .catch(err => {\n        console.log(\"Err\");\n        setStdUnitDataList([]);\n      });\n  }\n\n  const resetFilter = (data) => {\n    setPreviousTotalRecordCount(0)\n    setIsDownloaded(\"N\")\n    updateFilter(data)\n  }\n\n  const updateFilter = (data) => {\n\n    if (data.portOriginList) {\n      setPortOriginList(data.portOriginList);\n    }\n    if (data.portDestinationList) {\n      setPortDestinationList(data.portDestinationList);\n    }\n    if (data.hsCodeList) {\n      setHsCodeList(data.hsCodeList);\n    }\n    if (data.hsCode4DigitList) {\n      setHsCode4digitList(data.hsCode4DigitList);\n    }\n    if (data.importerList) {\n      setImporterList(data.importerList);\n    }\n    if (data.exporterList) {\n      setExporterList(data.exporterList);\n    }\n    if (data.cityOriginList) {\n      setCityOriginList(data.cityOriginList);\n    }\n    if (data.cityDestinationList) {\n      setCityDestinationList(data.cityDestinationList);\n    }\n    if (data.shipmentModeList) {\n      setShipmentModeList(data.shipmentModeList);\n    }\n    if (data.stdUnitList) {\n      setStdUnitList(data.stdUnitList);\n    }\n    if (data.returnSearchId) {\n      setReturnSearchId(data.returnSearchId);\n    }\n    if (data.consumptionTypeList) {\n      setConsumptionType(data.consumptionTypeList);\n    }\n    if (data.incotermList) {\n      setIncotermList(data.incotermList);\n    }\n    if (data.notifyPartyList) {\n      setNotifyPartyList(data.notifyPartyList);\n    }\n\n\n    if (searchParams && searchParams.tradeType) {\n      let params = searchParams;\n      params.searchType = \"ADVANCE\";\n      params.portOriginList = data.portOriginList;\n      params.portDestinationList = data.portDestinationList;\n      params.hsCodeList = data.hsCodeList;\n      params.importerList = data.importerList;\n      params.exporterList = data.exporterList;\n      params.cityOriginList = data.cityOriginList;\n      params.cityDestinationList = data.cityDestinationList;\n      params.hsCode4DigitList = data.hsCode4DigitList;\n      params.shipmentModeList = data.shipmentModeList;\n      params.stdUnitList = data.stdUnitList;\n      params.searchFlag = false\n\n      // getIndividualRecordCount(params)\n\n      if (data.portOriginList) {\n        // setPortOriginList(data.portOriginList);\n        params[\"portOriginList\"] = data.portOriginList;\n      }\n      if (data.portDestinationList) {\n        // setPortDestinationList(data.portDestinationList);\n        params[\"portDestinationList\"] = data.portDestinationList;\n      }\n      if (data.hsCodeList) {\n        // setHsCodeList(data.hsCodeList);\n        params[\"hsCodeList\"] = data.hsCodeList;\n      }\n      if (data.hsCode4DigitList) {\n        // setHsCode4digitList(data.hsCode4DigitList);\n        params[\"hsCode4DigitList\"] = data.hsCode4DigitList;\n      }\n      if (data.importerList) {\n        // setImporterList(data.importerList);\n        params[\"importerList\"] = data.importerList;\n      }\n      if (data.exporterList) {\n        // setExporterList(data.exporterList);\n        params[\"exporterList\"] = data.exporterList;\n      }\n      if (data.cityOriginList) {\n        // setCityOriginList(data.cityOriginList);\n        params[\"cityOriginList\"] = data.cityOriginList;\n      }\n      if (data.cityDestinationList) {\n        // setCityDestinationList(data.cityDestinationList);\n        params[\"cityDestinationList\"] = data.cityDestinationList;\n      }\n      if (data.shipmentModeList) {\n        // setShipmentModeList(data.shipmentModeList);\n        params[\"shipModeList\"] = data.shipmentModeList;\n      }\n      if (data.stdUnitList) {\n        // setStdUnitList(data.stdUnitList);\n        params[\"stdUnitList\"] = data.stdUnitList;\n      }\n      if (data.minQuantity) {\n        params[\"rangeQuantityStart\"] = data.minQuantity;\n      }\n      if (data.maxQuantity) {\n        params[\"rangeQuantityEnd\"] = data.maxQuantity;\n      }\n      if (data.minValue) {\n        params[\"rangeValueUsdStart\"] = data.minValue;\n      }\n      if (data.maxValue) {\n        params[\"rangeValueUsdEnd\"] = data.maxValue;\n      }\n      if (data.minUnitPrice) {\n        params[\"rangeUnitPriceUsdStart\"] = data.minUnitPrice;\n      }\n      if (data.maxUnitPrice) {\n        params[\"rangeUnitPriceUsdEnd\"] = data.maxUnitPrice;\n      }\n      if (data.consumptionTypeList) {\n        params[\"consumptionType\"] = data.consumptionTypeList;\n      }\n      if (data.incotermList) {\n        params[\"incoterm\"] = data.incotermList;\n      }\n      if (data.notifyPartyList) {\n        params[\"notifyParty\"] = data.notifyPartyList;\n      }\n      if (data.descriptionList) {\n        params[\"conditionProductDesc\"] = data.conditionProductDescription;\n        params[\"productDesc\"] = data.descriptionList;\n      }\n      if (data.returnSearchId) {\n        params[\"returnSearchId\"] = data.returnSearchId;\n      }\n      setSearchParams(params);\n      getSearchData(params);\n\n      // commented 05.04.2024\n\n      //  getImporterList(params);\n      //  getExporterList(params);\n      //  getPortOriginList(params);\n      //  getPortDestinationList(params);\n      //  getHSCodeList(params);\n      //  getIndianCityList(params);\n      //  getForeignCountryList(params);\n      //  getHSCode4digitList(params);\n      // //  getIndividualRecordCount(params)\n      //  getShipmentModeList(params);\n      //  getStdUnitList(params);\n\n\n    }\n    setToggle(false);\n  }\n\n  const getNewWorkspaceId = () => {\n    if (workspaceRef.current.value && workspaceRef.current.value == \"newWorkspace\") {\n      if (!workspaceRef.current.value || !sWorkspaceRef.current.value || !sTitleRef.current.value || !sDescRef.current.value) {\n        if (!workspaceRef.current.value) {\n          isWsError(\"Please select workspace name\");\n        } else isWsError(\"\")\n\n        if (!sWorkspaceRef.current.value) {\n          isNewWsError(\"Please enter workspace name\");\n        } else isNewWsError(\"\")\n\n        if (!sTitleRef.current.value) {\n          isSTitleError(\"Please enter title\");\n        } else isSTitleError(\"\")\n\n        if (!sDescRef.current.value) {\n          isSDescError(\"Please enter description\");\n        } else isSDescError(\"\");\n      }\n      else {\n        const postData = {\n          \"name\": sWorkspaceRef.current.value,\n          \"is_active\": \"Y\",\n        }\n        AxiosACT({\n          method: \"POST\",\n          url: `/activity-management/workspace`,\n          data: JSON.stringify(postData),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        })\n          .then(res => {\n            handleSaveSearch(res.data)\n          })\n          .catch(err => {\n            console.log(\"Err\", err);\n          });\n      }\n    }\n    else {\n      if (!workspaceRef.current.value || !sTitleRef.current.value || !sDescRef.current.value) {\n        if (!workspaceRef.current.value || workspaceRef.current.value == \"--select--\") {\n          isWsError(\"Please enter workspace name\");\n        } else isWsError(\"\")\n\n        if (!sTitleRef.current.value) {\n          isSTitleError(\"Please enter title\");\n        } else isSTitleError(\"\")\n\n        if (!sDescRef.current.value) {\n          isSDescError(\"Please enter description\");\n        } else isSDescError(\"\");\n      }\n      else {\n        handleSaveSearch()\n      }\n    }\n  }\n\n  const handleSaveSearch = (id) => {\n    const postData = {\n      \"workspace_id\": workspaceRef.current.value == \"newWorkspace\" ? id : parseInt(workspaceRef.current.value),\n      \"search_id\": searchId,\n      \"name\": sTitleRef.current.value,\n      \"description\": sDescRef.current.value,\n      \"is_active\": \"Y\",\n    }\n    AxiosACT({\n      method: \"POST\",\n      url: `/activity-management/workspace/savesearch`,\n      data: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        props.updateSubscriptionCount({\n          download_count: props.download_count,\n          subscriptionId: props.subscriptionId,\n          dataAccess_count: props.dataAccess_count,\n          totalWorkspace: props.totalWorkspace - 1,\n          subUserCount: props.subUserCount,\n          queryPerDay: props.queryPerDay\n        })\n        UpdateSubscription({ \"totalWorkspace\": props.totalWorkspace - 1 })\n        Swal.fire({\n          title: 'Success',\n          text: \"Search query saved successfully\",\n          icon: 'success',\n        })\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        let errorMsg = \"Somethhing went wrong, please try again.\"\n        if (err.data.errorMsg) {\n          errorMsg = err.data.errorMsg;\n        }\n        Swal.fire({\n          title: 'Oops!',\n          text: errorMsg,\n          icon: 'error',\n        })\n      });\n    toggleModal();\n\n  }\n\n  const getWorkspaceList = () => {\n\n    AxiosACT({\n      method: \"GET\",\n      url: `/activity-management/workspace/list?userId=${userId}`\n    })\n      .then(res => {\n        setWorkspaceList(res.data.workspaceList);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n      });\n  }\n\n  useEffect(() => {\n    getWorkspaceList();\n    fetchSearchQuery();\n  }, [])\n\n\n  const getSuggestionList = (value, innitialParams, index) => {\n    if (value && value.length >= 2) {\n      let newSuggestionList = []\n      let QueryBuilderNewSuggestionList = [[], [], []]\n      const postData = {\n        \"tradeType\": innitialParams.tradeType,\n        \"fromDate\": innitialParams.fromDate,\n        \"toDate\": innitialParams.toDate,\n        \"searchBy\": index == \"\" ? innitialParams.searchBy : innitialParams.queryBuilder[index - 1].searchBy,\n        \"searchValue\": value,\n        \"countryCode\": innitialParams.countryCode,\n        \"matchType\": index == \"\" ? innitialParams.matchType : innitialParams.queryBuilder[index - 1].matchType,\n      }\n      Axios({\n        method: \"POST\",\n        url: `/search-management/suggestionlist`,\n        data: JSON.stringify(postData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          if (res.data.suggestionList) {\n            res.data.suggestionList.map((item) => {\n              let specificItem = { \"value\": item.listSuggestion, \"label\": item.listSuggestion };\n              newSuggestionList.push(specificItem);\n            })\n            if (index == \"\") {\n              setSuggestions(newSuggestionList)\n            }\n            else {\n              QueryBuilderNewSuggestionList[index - 1] = newSuggestionList\n              console.log(\"query builder ========== \", QueryBuilderNewSuggestionList)\n              setQueryBuilderSuggestions(QueryBuilderNewSuggestionList)\n            }\n\n          }\n        })\n        .catch(err => {\n          // let newValue =  { \"listSuggestion\": newVal, \"shipmentCount\": 0}    \n          // setSuggestions(newValue)\n        });\n    }\n\n  }\n\n\n  const addnewOption = () => { }\n  const SelectMenuButton = (props) => {\n    return (\n      <components.MenuList  {...props}>\n        {props.children}\n        {/* <button onClick={()=> addnewOption()}>Add new element</button> */}\n      </components.MenuList >\n    )\n  }\n\n  const getTradingCountryList = (params) => {\n    setTradeType(params)\n\n    AxiosMaster({\n      method: \"GET\",\n      url: `masterdata-management/countrylistbytrade/${params}`,\n    })\n      .then(res => {\n        let countryList = [],\n          multiCountryList = [];\n        if (res.data.countryList) {\n          res.data.countryList.forEach((item) => {\n            multiCountryList.push({ \"value\": item.shortcode, \"label\": item.name });\n            let specificItem = Object.assign(item, { hasChild: false })\n            countryList.push(specificItem);\n          })\n          // }\n          countryList = res.data.countryList.length > 0 && props.countryList.length > 0 && res.data.countryList.filter((item) => {\n            return props.countryList.includes(item.shortcode)\n          })\n\n          setTradeCountryList(countryList);\n          setMultiTradeCountryList(multiCountryList);\n        }\n      })\n      .catch(err => {\n        setTradeCountryList([])\n      });\n  }\n\n  const fetchSearchQuery = () => {\n    console.log(\"Search Id on list 1 page>>>> \", search_id)\n    if (search_id) {\n      let newSuggestionList = []\n      let queryBuilderSuggestionList = []\n      Axios({\n        method: \"GET\",\n        url: `/search-management/search/details`,\n        params: { searchId: search_id }\n      })\n        .then(res => {\n          if (res.data.queryList) {\n            let sParams = res.data.queryList[0].userSearchQuery;\n            initialValues = {\n              ...initialValues,\n              tradeType: sParams.tradeType,\n              matchType: sParams.matchType,\n              searchBy: sParams.searchBy,\n              searchValue: sParams.searchValue,\n              countryCode: sParams.countryCode,\n              fromDate: sParams.fromDate ? new Date(sParams.fromDate) : \"\",\n              toDate: sParams.toDate ? new Date(sParams.toDate) : \"\",\n              dateRange: search_id ? \"6\" : \"\",\n              queryBuilder: sParams.queryBuilder ? sParams.queryBuilder : [],\n              cityDestinationList: sParams.cityDestinationList,\n              cityOriginList: sParams.cityOriginList,\n              exporterList: sParams.exporterList,\n              hsCode4DigitList: sParams.hsCode4DigitList,\n              hsCodeList: sParams.hsCodeList,\n              importerList: sParams.importerList,\n              portDestinationList: sParams.portDestinationList,\n              portOriginList: sParams.portOriginList,\n              shipmentModeList: sParams.shipModeList ? sParams.shipModeList : [],\n              stdUnitList: sParams.stdUnitList ? sParams.stdUnitList : [],\n              minQuantity: sParams.rangeQuantityStart ? sParams.rangeQuantityStart : null,\n              maxQuantity: sParams.rangeQuantityEnd ? sParams.rangeQuantityEnd : null,\n              consumptionTypeList: sParams.consumptionType ? sParams.consumptionType : [],\n              minValue: sParams.rangeValueUsdStart ? sParams.rangeValueUsdStart : null,\n              maxValue: sParams.rangeValueUsdEnd ? sParams.rangeValueUsdEnd : null,\n              minUnitPrice: sParams.rangeUnitPriceUsdStart ? sParams.rangeUnitPriceUsdStart : null,\n              maxUnitPrice: sParams.rangeUnitPriceUsdEnd ? sParams.rangeUnitPriceUsdEnd : null,\n              incotermList: sParams.incoterm ? sParams.incoterm : [],\n              notifyPartyList: sParams.notifyParty ? sParams.notifyParty : []\n            };\n            setCountryCode(sParams.countryCode)\n\n            sParams.searchValue.map((item, index) => {\n              let specificItem = { \"value\": item, \"label\": item };\n              newSuggestionList.push(specificItem);\n            })\n            setSearchValue(newSuggestionList)\n            if (sParams.queryBuilder && sParams.queryBuilder.length > 0) {\n\n              sParams.queryBuilder.map((newitem, newindex) => {\n                let tempArray = []\n                newitem.searchValue.map((item, index) => {\n                  let specificItem = { \"value\": item, \"label\": item };\n                  tempArray.push(specificItem);\n                })\n                queryBuilderSuggestionList[newindex] = tempArray\n              })\n            }\n            setQueryBuilderSearchValue(queryBuilderSuggestionList)\n            console.log(\"initialValues Start ======= \", initialValues)\n\n            setIsDownloaded(res.data.queryList[0].isDownloaded)\n            setPreviousTotalRecordCount(res.data.queryList[0].totalRecords)\n            sParams.tradeType == \"IMPORT\" ? fetchTradingCountryListOnInnitialize(\"I\", sParams.countryCode, sParams.tradeType, initialValues) : fetchTradingCountryListOnInnitialize(\"E\", sParams.countryCode, sParams.tradeType, initialValues)\n          }\n        })\n        .catch(err => {\n          console.log(\"Err\", err);\n        });\n    }\n  }\n\n  const fetchTradingCountryListOnInnitialize = (params, countryCode, tradeType, initialValues) => {\n    setTradeType(params)\n    AxiosMaster({\n      method: \"GET\",\n      url: `masterdata-management/countrylistbytrade/${params}`,\n    })\n      .then(res => {\n        let countryList = [],\n          multiCountryList = [],\n          selectedCountryList = [];\n        if (res.data.countryList) {\n\n          res.data.countryList.forEach((item) => {\n            multiCountryList.push({ \"value\": item.shortcode, \"label\": item.name });\n            let specificItem = Object.assign(item, { hasChild: false })\n            countryList.push(specificItem);\n          })\n\n          countryList = res.data.countryList.length > 0 && props.countryList.length > 0 && res.data.countryList.filter((item) => {\n            return props.countryList.includes(item.shortcode)\n          });\n\n\n          setTradeCountryList(countryList);\n          setMultiTradeCountryList(multiCountryList);\n\n          // let tempRow = countryList && countryList.filter((item) => item.shortcode.toLowerCase().includes(countryCode.toLowerCase()))\n          const tempRow = countryList.filter((item) =>\n            countryCode.some((code) => item.shortcode.toLowerCase() === code.toLowerCase())\n          );\n\n          tempRow.forEach((item) => {\n            selectedCountryList.push({ \"value\": item.shortcode, \"label\": item.name });\n          })\n          setSelectedTradeCountry(selectedCountryList);\n\n\n          setImporterForExport(tempRow[0].importerForExport)\n          setExporterForImport(tempRow[0].exporterForImport)\n\n          setDate(countryCode, tradeType, res.data.countryList);\n          if (searchTypeValue !== \"\") {\n            handleSearch(initialValues, countryList, searchTypeValue);\n          } else {\n            handleSearch(initialValues, countryList);\n          }\n\n        }\n      }\n      )\n      .catch(err => {\n        setTradeCountryList([])\n      });\n  }\n\n  // function setDate(text, tradeType, tradeCountryList) {\n  //   // isLoading(true)\n  //   let tempRow = tradeCountryList && tradeCountryList.filter((item) => item.shortcode.toLowerCase().includes(text.toLowerCase()));\n  //   console.log(\"Temp Row On setDate >>> \", tempRow)\n  //   let fromDate = \"\"\n  //   let toDate = \"\"\n\n  //   if (tradeType == \"I\") {\n  //     fromDate = moment(tempRow[0].importFrom).format('MM-DD-YYYY')\n  //     toDate = moment(tempRow[0].importUpto).format('MM-DD-YYYY')\n  //   }\n  //   else {\n  //     fromDate = moment(tempRow[0].exportFrom).format('MM-DD-YYYY')\n  //     toDate = moment(tempRow[0].exportUpto).format('MM-DD-YYYY')\n  //   }\n\n  //   setMinDate(new Date(fromDate))\n  //   setMaxDate(new Date(toDate))\n\n  //   return new Date(toDate)\n  // }\n\n  function setDate(text, tradeType, tradeCountryList) {\n    // text is now an array like [\"Ind\", \"Afg\"]\n    const tempRow = tradeCountryList.filter((item) =>\n      text.some((code) => item.shortcode.toLowerCase() === code.toLowerCase())\n    );\n    console.log(\"Temp Row On setDate >>> \", tempRow);\n\n    if (!tempRow.length) return;\n\n    let fromDate = \"\";\n    let toDate = \"\";\n\n    if (tradeType === \"I\") {\n      fromDate = moment(tempRow[0].importFrom).format(\"MM-DD-YYYY\");\n      toDate = moment(tempRow[0].importUpto).format(\"MM-DD-YYYY\");\n    } else {\n      fromDate = moment(tempRow[0].exportFrom).format(\"MM-DD-YYYY\");\n      toDate = moment(tempRow[0].exportUpto).format(\"MM-DD-YYYY\");\n    }\n\n    setMinDate(new Date(fromDate));\n    setMaxDate(new Date(toDate));\n\n    return new Date(toDate);\n  }\n\n\n\n  // function setMaxMinDate(text) {\n  //   // isLoading(true)\n  //   let tempRow = tradeCountryList && tradeCountryList.filter((item) => item.shortcode.toLowerCase().includes(text.toLowerCase()))\n  //   let fromDate = \"\"\n  //   let toDate = \"\"\n  //   let countrywiseFromDate = \"\"\n  //   console.log(\"tradeType === \", tradeType)\n  //   try {\n  //     if (tradeType == \"I\") {\n  //       countrywiseFromDate = moment(tempRow[0].importFrom).format('MM-DD-YYYY')\n  //       fromDate = moment(tempRow[0].importFrom).format('MM-DD-YYYY')\n  //       toDate = moment(tempRow[0].importUpto).format('MM-DD-YYYY')\n  //     }\n  //     else {\n  //       countrywiseFromDate = moment(tempRow[0].exportFrom).format('MM-DD-YYYY')\n  //       fromDate = moment(tempRow[0].exportFrom).format('MM-DD-YYYY')\n  //       toDate = moment(tempRow[0].exportUpto).format('MM-DD-YYYY')\n  //     }\n\n  //     setMinDate(new Date(fromDate))\n  //     setMaxDate(new Date(toDate))\n\n  //     return new Date(toDate)\n  //   }\n  //   catch {\n  //     props.loadingStop()\n  //     Swal.fire({\n  //       title: 'Error !',\n  //       text: \"Please select country\",\n  //       icon: 'error',\n  //       dangerMode: true,\n  //       confirmButtonColor: '#3085d6',\n  //     })\n  //     return \"\"\n  //   }\n\n  // }\n\n  function setMaxMinDate(selectedCountries, tradeType) {\n    if (!selectedCountries || selectedCountries.length === 0) {\n      Swal.fire({\n        title: 'Error !',\n        text: \"Please select at least one country\",\n        icon: 'error',\n        confirmButtonColor: '#3085d6',\n      });\n      return;\n    }\n\n    let fromDates = [];\n    let toDates = [];\n\n    selectedCountries.forEach(country => {\n      let tempRow = tradeCountryList.find(item => item.shortcode.toLowerCase() === country.value.toLowerCase());\n\n      if (tempRow) {\n        if (tradeType === \"I\") {\n          fromDates.push(moment(tempRow.importFrom).toDate());\n          toDates.push(moment(tempRow.importUpto).toDate());\n        } else {\n          fromDates.push(moment(tempRow.exportFrom).toDate());\n          toDates.push(moment(tempRow.exportUpto).toDate());\n        }\n      }\n    });\n\n    if (fromDates.length > 0 && toDates.length > 0) {\n      let minDate = new Date(Math.min(...fromDates));\n      let maxDate = new Date(Math.max(...toDates));\n\n      console.log(\"Min Date >>>>\", minDate);\n      console.log(\"Max Date >>> \", maxDate);\n\n      setMinDate(minDate);\n      setMaxDate(maxDate);\n\n      return maxDate;\n    }\n  }\n\n  function setExporterImporter(text, setFieldValue) {\n\n    let tempRow = tradeCountryList && tradeCountryList.filter((item) => item.shortcode.toLowerCase().includes(text.toLowerCase()))\n\n    setFieldValue(\"importerForExport\", tempRow[0].importerForExport)\n    setFieldValue(\"exporterForImport\", tempRow[0].exporterForImport)\n    setImporterForExport(tempRow[0].importerForExport)\n    setExporterForImport(tempRow[0].exporterForImport)\n  }\n\n  useEffect(() => {\n    return () => {\n      localStorage.removeItem(\"searchParam\")\n    }\n  }, []);\n\n  async function getConsumptionTypeDataList(searchQuery) {\n    try {\n      const tempTradeType = searchQuery.tradeType.toLowerCase();\n      let columnKey = tempTradeType == \"export\" ? `export_purpose` : `import_purpose`;\n      searchQuery[\"columnName\"] = columnKey;\n\n      // console.log(\"Check colum filter request >>> \", updatedPayload)\n      Axios({\n        method: \"POST\",\n        url: `/search-management/listdistinctcolumnvalue`,\n        data: JSON.stringify(searchQuery),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(\"Column value >>> \", res.data.distinctColumnValuesList);\n          let apiResponse = res.data.distinctColumnValuesList;\n          let formattedOptions = apiResponse.map(({ column_name, records_count }) => ({\n            label: `${column_name} (${records_count})`,\n            value: column_name\n          }));\n\n          setConsumptionTypeDataList(formattedOptions);\n        })\n    } catch (e) {\n      console.log(e);\n      setConsumptionTypeDataList([]);\n    }\n  }\n\n  async function getIncotermListDataList(searchQuery) {\n    try {\n      searchQuery[\"columnName\"] = 'incoterm';\n\n      // console.log(\"Check colum filter request >>> \", updatedPayload)\n      Axios({\n        method: \"POST\",\n        url: `/search-management/listdistinctcolumnvalue`,\n        data: JSON.stringify(searchQuery),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(\"Column value >>> \", res.data.distinctColumnValuesList);\n          let apiResponse = res.data.distinctColumnValuesList;\n          if (apiResponse && apiResponse.length > 0) {\n            let formattedOptions = apiResponse.map(({ column_name, records_count }) => ({\n              label: `${column_name} (${records_count})`,\n              value: column_name\n            }));\n\n            setIncotermListData(formattedOptions);\n          } else {\n            setIncotermListData([]);\n          }\n        })\n    } catch (e) {\n      console.log(e);\n      setIncotermListData([]);\n    }\n  }\n\n  async function getNotifyPartyListDataList(searchQuery) {\n    try {\n      searchQuery[\"columnName\"] = 'notify_party_name';\n\n      // console.log(\"Check colum filter request >>> \", updatedPayload)\n      Axios({\n        method: \"POST\",\n        url: `/search-management/listdistinctcolumnvalue`,\n        data: JSON.stringify(searchQuery),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => {\n          // console.log(\"Column value >>> \", res.data.distinctColumnValuesList);\n          let apiResponse = res.data.distinctColumnValuesList;\n          let formattedOptions = apiResponse.map(({ column_name, records_count }) => ({\n            label: `${column_name} (${records_count})`,\n            value: column_name\n          }));\n\n          setNotifyPartyListData(formattedOptions);\n        })\n    } catch (e) {\n      console.log(e);\n      setNotifyPartyListData([]);\n    }\n  }\n\n\n  const queryBuilder = (values, errors, touched, setFieldTouched, setFieldValue, Fragment) => {\n    return (\n      <FieldArray\n        name=\"queryBuilder\"\n        render={arrayHelpers => (\n          <>\n            {values.queryBuilder && values.queryBuilder.length > 0 ? (\n              values.queryBuilder.map((data, index) => (\n                <Fragment key={index}>\n                  <div className=\"col-md-2 pr-0 pb-2\">\n                    <div className=\"input-search\">\n                      <Field\n                        name={`queryBuilder[${index}].relation`}\n                        component=\"select\"\n                        className={`hero__form-input form-control custom-select ${touched.matchType && errors.matchType ? \"is-invalid\" : \"\"}`}\n                        autoComplete=\"off\"\n                        onChange={event => {\n                          if (props.queryPerDay > 0) {\n                            setFieldValue(`queryBuilder[${index}].relation`, event.target.value);\n                            setIsSearchClicked(false)\n                          }\n                          else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                            swalResponse()\n                          }\n                        }}\n                      >\n                        <option value=\"\">Select Relation</option>\n                        <option value=\"AND\">AND</option>\n                        {/* <option value=\"OR\">OR</option>\n                   <option value=\"NOT\">NOT</option> */}\n                      </Field>\n                    </div>\n                  </div>\n                  <div className=\"col-md-2 pr-0 pb-2\">\n\n                    <div className=\"input-search\">\n                      <Field\n                        name={`queryBuilder[${index}].searchBy`}\n                        component=\"select\"\n                        className={`hero__form-input form-control custom-select ${touched.searchBy && errors.searchBy ? \"is-invalid\" : \"\"}`}\n                        autoComplete=\"off\"\n                        onChange={event => {\n                          if (props.queryPerDay > 0) {\n                            event.target.value == \"PRODUCT\" ? setFieldValue(`queryBuilder[${index}].matchType`, \"C\") : setFieldValue(`queryBuilder[${index}].matchType`, \"L\");\n                            setFieldValue(`queryBuilder[${index}].searchBy`, event.target.value);\n                            setIsSearchClicked(false)\n                            queryBuilderSearchValue.length = 1\n                          }\n                          else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                            swalResponse()\n                          }\n                        }}\n                      >\n                        <option value=\"\">Select Type</option>\n                        <option value=\"HS_CODE\">HS Code</option>\n                        <option value=\"PRODUCT\">Product</option>\n                        {(values.tradeType == \"EXPORT\" && importerForExport == \"Y\") || values.tradeType == \"IMPORT\" ? <option value=\"IMPORTER\">Importer</option> : null}\n                        {(values.tradeType == \"IMPORT\" && exporterForImport == \"Y\" || values.tradeType == \"EXPORT\") ? <option value=\"EXPORTER\">Exporter</option> : null}\n                      </Field>\n                    </div>\n                  </div>\n                  <div className=\"col-md-2 pr-0 pb-2\">\n                    <div className=\"input-search\">\n                      <Field\n                        name={`queryBuilder[${index}].matchType`}\n                        component=\"select\"\n                        className={`hero__form-input form-control custom-select ${touched.matchType && errors.matchType ? \"is-invalid\" : \"\"}`}\n                        autoComplete=\"off\"\n                        onChange={event => {\n                          if (props.queryPerDay > 0) {\n                            setFieldValue(`queryBuilder[${index}].matchType`, event.target.value);\n                            queryBuilderSearchValue.length = 1\n                            setIsSearchClicked(false)\n                          }\n                          else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                            swalResponse()\n                          }\n                        }}\n                      >\n                        <option value=\"\">Select</option>\n                        {values.queryBuilder && values.queryBuilder.length > 0 && values.queryBuilder[index].hasOwnProperty(\"searchBy\") && values.queryBuilder[index].searchBy == \"PRODUCT\" ? <><option value=\"C\">Contains</option><option value=\"D\">Does Not Contains</option> </> : null}\n                        <option value=\"L\">Like</option>\n                      </Field>\n                    </div>\n                  </div>\n                  {queryBuilderSearchValue && queryBuilderSearchValue.length > 0 ?\n                    <div className=\"col-md-4 pr-0 pb-3\">\n                      <div className=\"input-search\" >\n                        <FormGroup >\n                          <Creatable\n                            placeholder=\"Select an individual\"\n                            name={`queryBuilder[${index}].searchValue`}\n                            options={queryBuilderSuggestions[index]}\n                            isMulti\n                            isOptionDisabled={() => values.queryBuilder[index].searchValue && values.queryBuilder[index].searchValue.length >= 10}\n                            noOptionsMessage={() => \"name not found\"}\n                            components={{ MenuList: SelectMenuButton }}\n                            onInputChange={(newValue) => props.queryPerDay > 0 ? getSuggestionList(newValue, values, index + 1) : null}\n                            onChange={(selectedOption) => {\n                              if (props.queryPerDay > 0) {\n                                let itemList = [];\n                                setIsSearchClicked(false)\n                                selectedOption.forEach((item) => {\n                                  itemList.push(item.value);\n                                });\n                                setFieldValue(`queryBuilder[${index}].searchValue`, itemList);\n                              }\n                              else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                swalResponse()\n                              }\n                            }}\n                            defaultValue={queryBuilderSearchValue[index]}\n                          />\n\n                          {errors.searchValue && touched.searchValue ? (\n                            <span className=\"errorMsg\">{errors.searchValue}</span>\n                          ) : null}\n                        </FormGroup>\n                      </div>\n                    </div> : null\n                  }\n                  {/* {console.log(\"values --- \", values)} */}\n                  <div className=\"col-md-2 pr-0 pb-2\">\n                    {values.searchBy != \"HS_CODE_2\" ?\n                      (<button\n                        type=\"button\" className=\"btn btn-warning\"\n                        onClick={() => arrayHelpers.remove(index)}\n                      >\n                        -\n                      </button>)\n                      :\n                      values.queryBuilder.length > 1 ?\n                        (<button\n                          type=\"button\" className=\"btn btn-warning\"\n                          onClick={() => arrayHelpers.remove(index)}\n                        >\n                          -\n                        </button>)\n                        : null\n                    }\n                    &nbsp;&nbsp;\n                    {values.queryBuilder.length < 3 ?\n                      <button\n                        type=\"button\" className=\"btn btn-warning\"\n                        onClick={() => arrayHelpers.push({ relation: \"\", searchBy: \"\", matchType: \"\", searchValue: \"\" })}\n                      >\n                        +\n                      </button> : null}\n                  </div>\n                </Fragment>\n              ))\n            ) : (\n              <div className=\"col-md-2 pr-0 pb-3\">\n                {workspace_id ? null :\n                  <button type=\"reset\" className=\"btn btn-warning\"\n                    onClick={() => arrayHelpers.push({ relation: \"\", searchBy: \"\", matchType: \"\", searchValue: \"\" })}>ADD</button>\n                }\n              </div>\n            )}\n\n          </>\n        )}\n      />\n    )\n  }\n\n  const swalResponse = () => {\n    Swal.fire({\n      title: 'Search !',\n      text: \"Your Search Limit Exhausted\",\n      icon: 'error',\n      dangerMode: true,\n      confirmButtonColor: '#3085d6',\n    })\n  }\n\n  return (\n    <>\n      <div className=\"container-fluid\" >\n        <div className=\"row\">\n          <div className=\"col-md-12 list-page mt-3\">\n            <div className=\"search-top\">\n              <h5>\n                Select Search Parameters\n              </h5>\n              <Formik\n                enableReinitialize={true}\n                initialValues={initialValues}\n                validationSchema={validateForm}\n                onSubmit={mainSearch}\n                resetForm\n              >\n                {({ values, errors, setFieldValue, setFieldError, touched, isValid, handleSubmit, submitForm, setFieldTouched, resetForm }) => {\n\n                  return (\n                    <Form>\n\n                      <div className=\"row\">\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <Field\n                              name=\"tradeType\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.tradeType && errors.tradeType ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.tradeType}\n                              onChange={event => {\n                                if (props.queryPerDay > 0) {\n                                  setFieldValue(\"tradeType\", event.target.value);\n                                  setFieldValue(\"countryCode\", \"\");\n                                  setFieldValue(\"fromDate\", \"\");\n                                  setFieldValue(\"toDate\", \"\");\n                                  setFieldValue(\"dateRange\", \"\");\n                                  setIsSearchClicked(false)\n                                  setSearchResult([])\n                                  setFilteredColumn([])\n                                  setOrderByColumn(\"\")\n                                  setOrderByMode(\"desc\")\n                                  getTradingCountryList(event.target.value == \"IMPORT\" ? 'I' : 'E')\n                                }\n                                else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                  swalResponse()\n                                }\n                              }}\n                            >\n                              <option value=\"\">Select Trade</option>\n                              <option value=\"IMPORT\">Import</option>\n                              <option value=\"EXPORT\">Export</option>\n                            </Field>\n                            {errors.tradeType && touched.tradeType ? (\n                              <span className=\"errorMsg\">{errors.tradeType}</span>\n                            ) : null}\n                          </div>\n                        </div>\n                        <div className=\"col-md-3 pr-0 pb-3\" >\n                          {/* <div className=\"dropdown bootstrap-select hero__form-input  form-control custom-select-multi\" > */}\n                          {/* <Field\n                              name=\"countryCode\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.countryCode && errors.countryCode ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.countryCode}\n                              isMulti\n                              \n                              onChange={event => {\n                                if(props.queryPerDay > 0 ){       \n                                  setFieldValue(\"countryCode\", event.target.value);\n                                  setFieldValue(\"fromDate\", \"\") ;\n                                  setFieldValue(\"toDate\", \"\") ;\n                                  setFieldValue(\"dateRange\", \"\") ;\n                                  setMaxMinDate(event.target.value, values.tradeType)\n                                  setIsSearchClicked(false)\n                                  setSearchResult([])\n                                  setFilteredColumn([])\n                                  setOrderByColumn(\"\")\n                                  setOrderByMode(\"desc\")\n                                  setCountryCode(event.target.value)\n                                  setExporterImporter(event.target.value, setFieldValue)\n                                }\n                                else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                  swalResponse()\n                                }                                \n                              }}\n                            >\n                              <option value = \"\" >Select Country</option>\n                              {Object.keys(tradeCountryList).map((item,index) => (                          \n                                <option key = {index} value={tradeCountryList[item].shortcode}>{tradeCountryList[item].name}</option>\n                              ))}\n                            </Field>\n                            {errors.countryCode && touched.countryCode ? (\n                                  <span className=\"errorMsg\">{errors.countryCode}</span>\n                            ) : null} */}\n                          {/* <Select\n                              defaultValue={defaultCountry}\n                              isMulti\n                              placeholder = 'Select Country'\n                              name=\"countryCode\"\n                              options={  Object.keys(tradeCountryList).map((item,index) => (      \n                                 { label: tradeCountryList[item].name, value: tradeCountryList[item].shortcode }                                                 \n                              ))}\n                              className={`dropdown bootstrap-select hero__form-input ${touched.countryCode && errors.countryCode ? \"is-invalid\" : \"\"}`}\n                              classNamePrefix=\"select\"\n                              onChange={(selectedOption) => {\n                                let itemList = [];\n                                selectedOption.forEach((item)=>{\n                                  itemList.push(item.value);\n                                });\n                                setFieldValue(\"countryCode\", itemList);\n                              }}\n                            /> */}\n\n                          {/* <DropDownTreeComponent id=\"dropdowntree\"\n                            fields={ { \n                                      dataSource: tradeCountryList,\n                                      value: 'shortcode',\n                                      text: 'name',\n                                      parentValue: \"pid\",\n                                      hasChildren: 'hasChild'           \n                                    }} \n                            showCheckBox={true} \n                            treeSettings={treeSettings} \n                            showSelectAll={true}\n                            selectAllText={\"Check All\"} \n                            unSelectAllText={\"UnCheck All\"}       \n                            value = {countryCode}\n                            change={(selectedOption) => {                            \n                              setFieldValue(\"countryCode\", selectedOption.value);\n                            }}\n                            /> */}\n                          <MultiSelect\n                            options={multiTradeCountryList}\n                            value={selectedTradeCountry}\n                            onChange={(selectedOption) => {\n                              setSelectedTradeCountry(selectedOption);\n                              const selectedValues = selectedOption.map(option => option.value);\n                              console.log(\"selectedValues >>> \", selectedValues)\n                              setFieldValue(\"countryCode\", selectedValues);\n                              setFieldValue(\"fromDate\", \"\");\n                              setFieldValue(\"toDate\", \"\");\n                              setFieldValue(\"dateRange\", \"\");\n                              setMaxMinDate(selectedOption, values.tradeType);\n                            }}\n                            labelledBy=\"Select\"\n                          />\n\n                          {errors.countryCode && touched.countryCode ? (\n                            <span className=\"errorMsg\">{errors.countryCode}</span>\n                          ) : null}\n                          {/* </div> */}\n                        </div>\n                        <div className=\"col-md-2 pr-0 pb-3\">\n                          <div className=\"dropdown bootstrap-select hero__form-input\">\n                            <Field\n                              name=\"dateRange\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.dateRange && errors.dateRange ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.dateRange}\n                              onChange={event => {\n\n                                if (props.queryPerDay > 0) {\n                                  props.loadingStart()\n                                  setIsSearchClicked(false)\n                                  setFieldValue(\"dateRange\", event.target.value);\n                                  let tempmaxMin = setMaxMinDate(selectedTradeCountry, values.tradeType);\n                                  let tempMaxDate = moment(tempmaxMin).diff(moment(props.dataAccessUpto), 'days') > 0 ? props.dataAccessUpto : tempmaxMin\n                                  let newMaxDate = \"\"\n\n                                  if (values.countryCode.includes(\"IND\") || values.countryCode.includes(\"SEZ\")) {\n                                    const newDate = moment().diff(moment(tempMaxDate), 'days') > 0 ? tempMaxDate : new Date();\n                                    const d = new Date(newDate);\n                                    d.setDate(1);\n                                    newMaxDate = moment(d).subtract(1, 'days');\n                                  } else {\n                                    newMaxDate = moment().diff(moment(tempMaxDate), 'days') > 0 ? tempMaxDate : new Date();\n                                  }\n\n\n\n                                  let fromdate = \"\"\n                                  let dateDiff = \"\"\n                                  let tempFromdate = \"\"\n\n                                  if (newMaxDate != \"\") {\n                                    switch (event.target.value) {\n                                      case \"1\":\n\n                                        fromdate = new Date(newMaxDate);\n                                        fromdate.setDate(1)\n\n\n\n                                        dateDiff = moment(fromdate).diff(moment(props.dataAccessInMonth), 'days')\n                                        if (dateDiff >= 0) {\n                                          setFieldValue(\"fromDate\", new Date(fromdate))\n                                        }\n                                        else {\n                                          setFieldValue(\"fromDate\", new Date(props.dataAccessInMonth))\n                                        }\n                                        setFieldValue(\"toDate\", new Date(newMaxDate))\n                                        props.loadingStop()\n                                        break;\n                                      case \"2\":\n\n                                        tempFromdate = moment(newMaxDate).subtract(3, 'months').add(5, \"days\").format(\"YYYY-MM-DD\")\n                                        fromdate = new Date(tempFromdate);\n                                        fromdate.setDate(1)\n\n\n\n                                        dateDiff = moment(fromdate).diff(moment(props.dataAccessInMonth), 'days')\n                                        if (dateDiff >= 0) {\n                                          setFieldValue(\"fromDate\", new Date(fromdate))\n                                        }\n                                        else {\n                                          setFieldValue(\"fromDate\", new Date(props.dataAccessInMonth))\n                                        }\n                                        setFieldValue(\"toDate\", new Date(newMaxDate))\n                                        props.loadingStop()\n                                        break;\n\n                                      case \"3\":\n\n                                        tempFromdate = moment(newMaxDate).subtract(6, 'months').add(5, \"days\").format(\"YYYY-MM-DD\")\n                                        fromdate = new Date(tempFromdate);\n                                        fromdate.setDate(1)\n\n\n\n                                        dateDiff = moment(fromdate).diff(moment(props.dataAccessInMonth), 'days')\n                                        if (dateDiff >= 0) {\n                                          setFieldValue(\"fromDate\", new Date(fromdate))\n                                        }\n                                        else {\n                                          setFieldValue(\"fromDate\", new Date(props.dataAccessInMonth))\n                                        }\n                                        setFieldValue(\"toDate\", new Date(newMaxDate))\n                                        props.loadingStop()\n                                        break;\n                                      case \"4\":\n                                        tempFromdate = moment(newMaxDate).subtract(12, 'months').add(5, \"days\").format(\"YYYY-MM-DD\")\n                                        fromdate = new Date(tempFromdate);\n                                        fromdate.setDate(1)\n                                        dateDiff = moment(fromdate).diff(moment(props.dataAccessInMonth), 'days')\n                                        if (dateDiff >= 0) {\n                                          setFieldValue(\"fromDate\", new Date(fromdate))\n                                        }\n                                        else {\n                                          setFieldValue(\"fromDate\", new Date(props.dataAccessInMonth))\n                                        }\n                                        setFieldValue(\"toDate\", new Date(newMaxDate))\n                                        props.loadingStop()\n                                        break;\n                                      default:\n                                        setFieldValue(\"toDate\", \"\")\n                                        setFieldValue(\"fromDate\", \"\")\n                                        props.loadingStop()\n                                    }\n                                  }\n                                }\n                                else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                  swalResponse()\n                                }\n                              }}\n                            >\n                              <option value=\"\"> Chose Month Range</option>\n                              <option value=\"1\">LAST 1 MONTH</option>\n                              <option value=\"2\">LAST 3 MONTHS</option>\n                              <option value=\"3\">LAST 6 MONTHS</option>\n                              <option value=\"4\">LAST 1 YEAR</option>\n                              <option value=\"6\">CUSTOM</option>\n                            </Field>\n                            {errors.dateRange && touched.dateRange ? (\n                              <span className=\"errorMsg\">{errors.dateRange}</span>\n                            ) : null}\n                          </div>\n                        </div>\n                        <div className=\"col-md-2 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <DatePicker\n                              name=\"fromDate\"\n                              dateFormat=\"yyyy MMM dd  \"\n                              placeholderText=\"From\"\n                              peekPreviousMonth\n                              peekPreviousYear\n                              showMonthDropdown\n                              showYearDropdown\n                              minDate={moment(minDate).diff(moment(props.dataAccessInMonth), 'days') > 0 ? new Date(minDate) : new Date(props.dataAccessInMonth)}\n                              // maxDate={new Date(maxDate)}\n                              maxDate={(props.dataAccessUpto == null || props.dataAccessUpto == \"\") ? new Date(maxDate) : moment(props.dataAccessUpto).diff(moment(maxDate), 'days') > 0 ? new Date(maxDate) : new Date(props.dataAccessUpto)}\n                              className=\"form-control\"\n                              dropdownMode=\"select\"\n                              onChange={(value) => {\n                                if (props.queryPerDay > 0) {\n                                  setFieldValue(\"fromDate\", value);\n                                  setFieldTouched(\"fromDate\");\n                                  setFieldValue(\"dateRange\", 6)\n                                  setIsSearchClicked(false)\n                                }\n                                else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                  swalResponse()\n                                }\n                              }}\n                              selected={values.fromDate}\n                            />\n                            {errors.fromDate && touched.fromDate ? (\n                              <span className=\"errorMsg\">{errors.fromDate}</span>\n                            ) : null}\n                          </div>\n                        </div>\n                        <div className=\"col-md-2 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <DatePicker\n                              name=\"toDate\"\n                              dateFormat=\"yyyy MMM dd  \"\n                              placeholderText=\"To\"\n                              peekPreviousMonth\n                              peekPreviousYear\n                              showMonthDropdown\n                              showYearDropdown\n                              //  minDate= {moment(minDate)} \n                              minDate={moment(minDate).diff(moment(props.dataAccessInMonth), 'days') > 0 ? new Date(minDate) : new Date(props.dataAccessInMonth)}\n                              maxDate={(props.dataAccessUpto == null || props.dataAccessUpto == \"\") ? new Date(maxDate) : moment(props.dataAccessUpto).diff(moment(maxDate), 'days') > 0 ? new Date(maxDate) : new Date(props.dataAccessUpto)}\n                              className=\"form-control\"\n                              dropdownMode=\"select\"\n                              onChange={(value) => {\n                                if (props.queryPerDay > 0) {\n                                  setFieldValue(\"toDate\", value);\n                                  setFieldTouched(\"toDate\");\n                                  setFieldValue(\"dateRange\", 6)\n                                  setIsSearchClicked(false)\n                                }\n                                else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                  swalResponse()\n                                }\n                              }}\n                              selected={values.toDate}\n                            />\n                            {errors.toDate && touched.toDate ? (\n                              <span className=\"errorMsg\">{errors.toDate}</span>\n                            ) : null}\n                          </div>\n                        </div>\n\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <Field\n                              name=\"searchBy\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.searchBy && errors.searchBy ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.searchBy}\n                              onChange={event => {\n                                if (props.queryPerDay > 0) {\n                                  event.target.value == \"PRODUCT\" ? setFieldValue(\"matchType\", \"C\") : setFieldValue(\"matchType\", \"L\");\n                                  searchValue.length = 1\n                                  setFieldValue(\"searchBy\", event.target.value);\n                                  setIsSearchClicked(false)\n                                }\n                                else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                  swalResponse()\n                                }\n                              }}\n                            >\n                              <option value=\"\">Select Type</option>\n                              <option value=\"HS_CODE_2\">HS Code 2 digit</option>\n                              <option value=\"HS_CODE\">HS Code</option>\n                              <option value=\"PRODUCT\">Product</option>\n                              {(values.tradeType == \"EXPORT\" && importerForExport == \"Y\") || values.tradeType == \"IMPORT\" ? <option value=\"IMPORTER\">Importer</option> : null}\n                              {(values.tradeType == \"IMPORT\" && exporterForImport == \"Y\" || values.tradeType == \"EXPORT\") ? <option value=\"EXPORTER\">Exporter</option> : null}\n                            </Field>\n                            {errors.searchBy && touched.searchBy ? (\n                              <span className=\"errorMsg\">{errors.searchBy}</span>\n                            ) : null}\n                          </div>\n                        </div>\n                        <div className=\"col-md-3 pr-0 pb-3\">\n                          <div className=\"input-search\">\n                            <Field\n                              name=\"matchType\"\n                              component=\"select\"\n                              className={`hero__form-input form-control custom-select ${touched.matchType && errors.matchType ? \"is-invalid\" : \"\"}`}\n                              autoComplete=\"off\"\n                              value={values.matchType}\n                              onChange={event => {\n                                if (props.queryPerDay > 0) {\n                                  setFieldValue(\"matchType\", event.target.value);\n                                  searchValue.length = 1\n                                  setIsSearchClicked(false)\n                                }\n                                else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                  swalResponse()\n                                }\n                              }}\n                            >\n                              <option value=\"\">Select</option>\n                              {values.searchBy == \"PRODUCT\" ? <><option value=\"C\">Contains</option><option value=\"D\">Does Not Contains</option> </> : null}\n                              <option value=\"L\">Like</option>\n                            </Field>\n                            {errors.matchType && touched.matchType ? (\n                              <span className=\"errorMsg\">{errors.matchType}</span>\n                            ) : null}\n                          </div>\n                        </div>\n                        {searchValue && searchValue.length > 0 ?\n                          <div className=\"col-md-4 pr-0 pb-3\">\n                            <div className=\"input-search\" >\n                              <FormGroup >\n                                <Creatable\n                                  placeholder={values.searchBy == \"HS_CODE\" ? \"Enter min 4 digit\" : \"Enter min 2 chars\"}\n                                  name=\"searchValue\"\n                                  options={suggestions}\n                                  isMulti\n                                  isOptionDisabled={() => values.searchValue && values.searchValue.length >= 10}\n                                  noOptionsMessage={() => \"name not found\"}\n                                  components={{ MenuList: SelectMenuButton }}\n                                  onInputChange={(newValue) => props.queryPerDay > 0 ? getSuggestionList(newValue, values, \"\") : null}\n                                  onChange={(selectedOption) => {\n\n                                    if (props.queryPerDay > 0) {\n                                      let itemList = [];\n                                      let newQuery = []\n                                      let isQueryBuilder = false\n                                      setIsSearchClicked(false)\n                                      selectedOption.forEach((item) => {\n                                        itemList.push(item.value);\n                                        if (values.searchBy == \"HS_CODE_2\") {\n                                          isQueryBuilder = true\n                                        }\n                                      });\n                                      if (isQueryBuilder == true) {\n                                        newQuery[0] = { relation: \"\", searchBy: \"\", matchType: \"\", searchValue: \"\" }\n                                        setFieldValue(\"queryBuilder\", newQuery)\n                                      }\n                                      setFieldValue(\"searchValue\", itemList);\n                                    }\n                                    else if (props.queryPerDay <= 0 && props.queryPerDay != null) {\n                                      swalResponse()\n                                    }\n                                  }}\n                                  defaultValue={searchValue}\n                                />\n\n                                {errors.searchValue && touched.searchValue ? (\n                                  <span className=\"errorMsg\">{errors.searchValue}</span>\n                                ) : null}\n                              </FormGroup>\n                            </div>\n                          </div> : null\n                        }\n\n                      </div>\n\n                      <div className=\"row\">\n                        {queryBuilder(values, errors, touched, setFieldTouched, setFieldValue, Fragment)}\n                      </div>\n\n                      {workspace_id ? null :\n                        <div className=\"row\">\n                          <div className=\"col-md-2 pr-0 pb-3\">\n                            <button type=\"reset\" className=\"btn btn-warning\"\n                              onClick={(event) => {\n                                resetSearch(setFieldValue, values);\n                              }}>Reset</button> &nbsp;\n                            <button type=\"submit\"\n                              disabled={isSearchClicked}\n                              onClick={(event) => {\n                                event.preventDefault();\n                                setSearchId(\"\");\n                                setFieldValue(\"searchFlag\", true);\n                                handleSubmit();\n                              }} className=\"btn btn-primary\">Search</button>\n                          </div>\n                        </div>\n                      }\n                    </Form>\n                  )\n                }\n                }\n              </Formik>\n            </div>\n\n            {searchParams && searchParams.tradeType && searchResult.length > 0 ? (\n              <div className=\"row searchCountBlk\">\n                <div className=\"col-md-12 text-center\">\n\n                  <h3>Search Result of {searchParams.tradeType.toLowerCase()} data from&nbsp;\n                    {moment(searchParams.fromDate).format(\"DD-MMM-YYYY\")} to {moment(searchParams.toDate).format('DD-MMM-YYYY')}</h3>\n\n                </div>\n                {noDataErrorMsg == false ?\n                  <>\n                    <div className=\"col-lg-2 col-md-2 offset-md-1\">\n                      <div className=\"card\">\n                        <div className=\"card-body bg-soft-primary\">\n                          <div className=\"avatar\">\n                            <span className=\"avatar-title bg-soft-primary rounded\">\n                              <i className=\"icon ion-ios-barcode text-primary font-size-24\"></i>\n                            </span>\n                          </div>\n                          <div className=\"list-in\">\n                            <p className=\"text-muted mt-0 mb-0\">HSCODE</p>\n                            <h4 className=\"mt-0 mb-0\">{hsCodeDataList.length}</h4>\n                          </div>\n                        </div>\n                        {hscodeLoading && (\n                          <div className=\"loaderBox\">\n                            <div className=\"loader\"></div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"col-lg-2 col-md-2\">\n                      <div className=\"card\">\n                        <div className=\"card-body bg-soft-success\">\n                          <div className=\"avatar\">\n                            <span className=\"avatar-title bg-soft-success rounded\">\n                              <i className=\"icon ion-md-filing text-primary font-size-24\"></i>\n                            </span>\n                          </div>\n                          <div className=\"list-in\">\n                            <p className=\"text-muted mt-0 mb-0\">Total Shipment</p>\n                            <h4 className=\"mt-0 mb-0\">{totalRecord}</h4>\n                          </div>\n                        </div>\n                        {totalRecordLoading && (\n                          <div className=\"loaderBox\">\n                            <div className=\"loader\"></div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"col-lg-2 col-md-2\">\n                      <div className=\"card\">\n                        <div className=\"card-body bg-soft-primary\">\n                          <div className=\"avatar\">\n                            <span className=\"avatar-title bg-soft-primary rounded\">\n                              <i className=\"icon ion-md-business text-primary font-size-24\"></i>\n                            </span>\n                          </div>\n                          <div className=\"list-in\">\n                            <p className=\"text-muted mt-0 mb-0\"> {tradeType == \"E\" ? \"Country Of Destination\" : \"Country Of Origin\"}</p>\n                            <h4 className=\"mt-0 mb-0\">{countryOriginList.length}</h4>\n                          </div>\n                        </div>\n                        {portDestLoading && (\n                          <div className=\"loaderBox\">\n                            <div className=\"loader\"></div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    {(searchParams.tradeType == \"IMPORT\" && exporterForImport == \"Y\" || searchParams.tradeType == \"EXPORT\") ?\n                      <div className=\"col-lg-2 col-md-2\">\n                        <div className=\"card\">\n                          <div className=\"card-body bg-soft-success\">\n                            <div className=\"avatar\">\n                              <span className=\"avatar-title bg-soft-success rounded\">\n                                <i className=\"icon ion-md-filing text-primary font-size-24\"></i>\n                              </span>\n                            </div>\n                            <div className=\"list-in\">\n                              <p className=\"text-muted mt-0 mb-0\">Exporter</p>\n                              <h4 className=\"mt-0 mb-0\">{exporterDataList && exporterDataList.length}</h4>\n                            </div>\n                          </div>\n                          {exporterLoading && (\n                            <div className=\"loaderBox\">\n                              <div className=\"loader\"></div>\n                            </div>\n                          )}\n                        </div>\n                      </div> : null}\n                    {(searchParams.tradeType == \"EXPORT\" && importerForExport == \"Y\") || searchParams.tradeType == \"IMPORT\" ?\n                      <div className=\"col-lg-2 col-md-2\">\n                        <div className=\"card\">\n                          <div className=\"card-body bg-soft-primary\">\n                            <div className=\"avatar\">\n                              <span className=\"avatar-title bg-soft-primary rounded\">\n                                <i className=\"icon ion-ios-business text-primary font-size-24\"></i>\n                              </span>\n                            </div>\n                            <div className=\"list-in\">\n                              <p className=\"text-muted mt-0 mb-0\">Importer</p>\n                              <h4 className=\"mt-0 mb-0\">{importerDataList && importerDataList.length}</h4>\n                              {/* <h4 className=\"mt-0 mb-0\">{searchParams.tradeType = \"IMPORT\" ? importerDataList.length : exporterDataList.length}</h4> */}\n                            </div>\n                          </div>\n                          {importerLoading && (\n                            <div className=\"loaderBox\">\n                              <div className=\"loader\"></div>\n                            </div>\n                          )}\n                        </div>\n                      </div> : null}\n                  </>\n                  :\n                  <div className=\"col-lg-12 col-md-12 text-center\">\n                    <p>&nbsp;</p>\n                    <p>&nbsp;</p>\n                    <img src={require('../assets/image/Error.png').default}></img>\n                    <h4><p>Sorry we couldn't find any matches.</p></h4>\n                    <h2>Please Try Again</h2>\n                  </div>\n                }\n              </div>\n            ) : null}\n\n            <Draggable>\n              <div class=\"ad-butt\">\n                <button className=\"btn btn-primary ad-butt-button\" onClick={() => setToggle(!toggle)}><i className=\"icon ion-md-search text-light font-size-35\"></i></button>\n              </div>\n            </Draggable>\n\n\n            <div ref={gridRef}></div>\n            {/* {console.log(\"Search Result >>> \", searchResult)}\n            {console.log(\"Filtered Column >>> \", filteredColumn)}\n            {console.log(\"Trade Type >>>> \", tradeType)} */}\n            {filteredColumn.length > 0 ? (\n              tradeType === 'E' ? (\n                <DataTableExport\n                  exportToCSV={exportToCSV}\n                  searchResult={searchResult}\n                  limit={limit}\n                  page={page}\n                  setPage={setPage}\n                  handleChangeLimit={handleChangeLimit}\n                  totalRecord={totalRecord}\n                  searchLoading={searchLoading}\n                  setOrderByColumn={setOrderByColumn}\n                  setOrderByMode={setOrderByMode}\n                  orderByColumn={orderByColumn}\n                  orderByMode={orderByMode}\n                  setWorkspace={setWorkspace}\n                  showModal={showModal}\n                  filteredColumn={filteredColumn}\n                  saveQuery={saveQuery}\n                  search_id={searchId ? searchId : search_id}\n                  state={props.location.state}\n                  exportSelectedToCSV={exportSelectedToCSV}\n                  importerDataList={importerDataList}\n                  countryCode={countryCode}\n                  newColumnsKeys={props.location.state && props.location.state.columnKeys ? props.location.state.columnKeys : []}\n                  importerForExport={importerForExport}\n                  exporterForImport={exporterForImport}\n                  filterCountryList={filterCountryList}\n                />\n              ) : (\n                <DataTableImport\n                  exportToCSV={exportToCSV}\n                  searchResult={searchResult}\n                  limit={limit}\n                  page={page}\n                  setPage={setPage}\n                  handleChangeLimit={handleChangeLimit}\n                  totalRecord={totalRecord}\n                  searchLoading={searchLoading}\n                  setOrderByColumn={setOrderByColumn}\n                  setOrderByMode={setOrderByMode}\n                  orderByColumn={orderByColumn}\n                  orderByMode={orderByMode}\n                  setWorkspace={setWorkspace}\n                  showModal={showModal}\n                  filteredColumn={filteredColumn}\n                  saveQuery={saveQuery}\n                  search_id={searchId ? searchId : search_id}\n                  state={props.location.state}\n                  exportSelectedToCSV={exportSelectedToCSV}\n                  importerDataList={importerDataList}\n                  countryCode={countryCode}\n                  newColumnsKeys={props.location.state && props.location.state.columnKeys ? props.location.state.columnKeys : []}\n                  importerForExport={importerForExport}\n                  exporterForImport={exporterForImport}\n                  filterCountryList={filterCountryList}\n                />\n              )) : noDataErrorMsg ? <div><h2>No records found</h2></div> : null}\n          </div>\n        </div>\n\n        {toggle && <AdvanceSearch toggleFromChild={setToggle}\n          importerDataList={importerDataList}\n          exporterDataList={exporterDataList}\n          portOriginDataList={portOriginDataList}\n          portDestinationDataList={portDestinationDataList}\n          countryOriginList={countryOriginList}\n          countryDestinationList={countryDestinationList}\n          hsCodeDataList={hsCodeDataList}\n          shipmentModeDataList={shipmentModeDataList}\n          shipmentModeList={shipmentModeList}\n          type={searchParams.tradeType}\n          countryCode={searchParams.countryCode}\n          updateFilter={updateFilter}\n          portOriginList={portOriginList}\n          portDestinationList={portDestinationList}\n          hsCodeList={hsCodeList}\n          importerList={importerList}\n          exporterList={exporterList}\n          cityOriginList={cityOriginList}\n          cityDestinationList={cityDestinationList}\n          hsCode4digitDataList={hsCode4digitDataList}\n          hsCode4DigitList={hsCode4DigitList}\n          fetchSearchQuery={fetchSearchQuery}\n          resetFilter={resetFilter}\n          stdUnitList={stdUnitList}\n          stdUnitDataList={stdUnitDataList}\n          searchId={searchId}\n          importerForExport={importerForExport}\n          exporterForImport={exporterForImport}\n          consumptionType={consumptionType}\n          consumptionTypeDataList={consumptionTypeDataList}\n          incotermList={incotermList}\n          incotermDataList={incotermListData}\n          notifyPartyList={notifyPartyList}\n          notifyPartyDataList={notifyPartyListData}\n        />\n        }\n      </div>\n      <div id=\"reportXLS\" hidden={true}>\n        {filteredArray && filteredArray.length > 0 ? <DloadTemplateXLS filteredArray={filteredArray} tradeType={tradeType} countryCode={countryCode} /> : null}\n      </div>\n\n      <Modal\n        show={showModal}\n        onHide={toggleModal}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Save search</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <label>Workspace:</label>\n              <select className=\"form-control\" ref={workspaceRef}\n                onChange={(e) => { handleWorkspaceChange(e) }}>\n                <option >--select--</option>\n                <option value=\"newWorkspace\">Create New Workspace</option>\n                {workspaceList.map((ws, index) => {\n                  return (\n                    <option key={index} value={ws.id}>{ws.name}</option>\n                  )\n                })}\n              </select>\n              {wsError && (<p className='error'>{wsError}</p>)}\n            </div>\n            {showNewWorkspaceInput ?\n              <div className=\"col-md-12\">\n                <label>New workspace name:</label>\n                <input type=\"text\" name=\"title\" ref={sWorkspaceRef} className=\"form-control\" />\n                {sNewWsError && (<p className='error'>{sNewWsError}</p>)}\n              </div> : null\n            }\n            <div className=\"col-md-12\">\n              <label>Title:</label>\n              <input type=\"text\" name=\"title\" ref={sTitleRef} className=\"form-control\" />\n              {sTitleError && (<p className='error'>{sTitleError}</p>)}\n            </div>\n            <div className=\"col-md-12\">\n              <label>Description:</label>\n              <input type=\"text\" name=\"title\" ref={sDescRef} className=\"form-control\" />\n              {sDescError && (<p className='error'>{sDescError}</p>)}\n            </div>\n\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={toggleModal}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={() => {\n            getNewWorkspaceId()\n          }}>Submit</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loader.loading,\n    download_count: state.data.download_count,\n    subscriptionId: state.data.subscriptionId,\n    dataAccess_count: state.data.dataAccess_count,\n    totalWorkspace: state.data.totalWorkspace,\n    subUserCount: state.data.subUserCount,\n    queryPerDay: state.data.queryPerDay,\n    downloadArray: state.data.downloadArray,\n    countryList: state.data.countryList,\n    dataAccessInMonth: state.data.dataAccessInMonth,\n    download_count_subUser: state.data.download_count_subUser,\n    dataAccessUpto: state.data.dataAccessUpto,\n    maxDownload: state.data.maxDownload,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadingStart: () => dispatch(loaderStart()),\n    loadingStop: () => dispatch(loaderStop()),\n    updateSubscriptionCount: (data) => dispatch(updateSubscriptionCount(data)),\n    updateDownloadArrayCount: (data) => dispatch(updateDownloadArrayCount(data)),\n    setDloadCountSubuser: (data) => dispatch(setDloadCountSubuser(data)),\n    setSearchQuery: (data) => dispatch(setSearchQuery(data))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(List));\n"],"sourceRoot":""}