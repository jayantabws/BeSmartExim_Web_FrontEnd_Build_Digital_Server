{"version":3,"sources":["components/ViewSubscription.js","pages/subscriptions.js"],"names":["ViewSubscription","props","subscriptionDetails","setSubscriptionDetails","useState","useEffect","getSubscriptionDetails","subscriptionId","rowData","AxiosMaster","method","url","then","res","data","catch","err","_jsx","children","_jsxs","class","downloadLimit","subUserCount","workspaceLimit","totalWorkspace","dataAccess","dataAccessInMonth","searchQueryPerDay","queryPerDay","colSpan","moment","createdDate","format","accountExpireDate","Markets","userId","localStorage","getItem","loading","isLoading","subscriptionList","setSubscriptionList","subscriptionListData","setSubscriptionListData","showModal","setShowModal","setRowData","AxiosUser","userSubscriptionList","console","log","_Fragment","className","type","onChange","e","text","subscriptionData","filter","subscription","name","toLowerCase","includes","userSubscription","target","value","placeholder","length","map","index","validityInDay","isActive","style","color","fontWeight","onClick","UserSubscriptionDetails","textAlign","Modal","bsSize","show","onHide","Header","closeButton","Body","isAdmin"],"mappings":"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","file":"static/js/8.3ebad8d8.chunk.js","sourcesContent":["import React, { Component,useState, useRef, useCallback, useEffect, Fragment } from 'react'\nimport moment from 'moment';\nimport AxiosMaster from '../shared/AxiosMaster';\n\n\nconst ViewSubscription = (props) => {\n\n  const [subscriptionDetails, setSubscriptionDetails] = useState([]);\n\n  const getSubscriptionDetails = () => {\n    let subscriptionId = props.rowData.subscriptionId\n\n    AxiosMaster({\n      method: \"GET\",\n      url: `masterdata-management/subscription/${subscriptionId}`,    \n    })\n      .then(res => {\n        setSubscriptionDetails(res.data)\n      })\n      .catch(err => {\n        setSubscriptionDetails([])\n      });\n  }\n\n\n  useEffect(() => {\n    getSubscriptionDetails(props)\n  },[])\n\n\n    return (\n      <div>\n          <table class=\"table table-striped table-hover\">\n            \n              <thead>\n              <tr>\n                <th>Item Name</th>\n                <th>Assigned</th>\n                <th>Available</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td>Total Download Limit</td>\n                <td>{subscriptionDetails && subscriptionDetails.downloadLimit}</td>\n                <td>{props.rowData.downloadLimit}</td>\n              </tr>\n              <tr>\n                <td>Total Sub User</td>\n                <td>{subscriptionDetails && subscriptionDetails.subUserCount}</td>\n                <td>{props.rowData.subUserCount}</td>\n              </tr>\n              <tr>\n                <td>Total Workspace</td>\n                <td>{subscriptionDetails && subscriptionDetails.workspaceLimit}</td>\n                <td>{props.rowData.totalWorkspace}</td>\n              </tr>\n              {/*\n              <tr>\n                <td>Maximum Number of Records Per Workspace</td>\n                <td>{subscriptionDetails && subscriptionDetails.recordPerWorkspace}</td>\n                <td>{props.rowData.recordsPerWorkspace}</td>\n              </tr>\n               */}\n              <tr>\n                <td>Data Available Upto</td>\n                <td>{subscriptionDetails && subscriptionDetails.dataAccess}</td>\n                <td>{props.rowData.dataAccessInMonth}</td>\n              </tr>\n              <tr>\n                <td>Search Query Per Day</td>\n                <td>{subscriptionDetails && subscriptionDetails.searchQueryPerDay}</td>\n                <td>{props.rowData.queryPerDay}</td>\n              </tr>                    \n              <tr>\n                <td>Plan Create Date</td>                     \n                <td colSpan={2}>{moment(props.rowData.createdDate).format(\"DD-MM-YYYY\")}</td>\n              </tr>\n              <tr>\n                <td>Plan Expire Date</td>\n                <td colSpan={2}>{moment(props.rowData.accountExpireDate).format(\"DD-MM-YYYY\")}</td>\n              </tr>\n            </tbody>\n            \n          </table>\n      </div>\n    )\n\n}\n\nexport default ViewSubscription\n","import React, { useEffect, useState } from 'react';\nimport AxiosUser from \"../shared/AxiosUser\";\nimport moment from 'moment';\nimport ViewSubscription from \"../components/ViewSubscription\"\nimport { Row, Col, Modal, Button, FormGroup } from 'react-bootstrap';\n\nexport default function Markets() {\n\n  const userId = localStorage.getItem(\"userToken\");\n\n  const [loading, isLoading] = useState(false);\n  const [subscriptionList, setSubscriptionList] = useState([]);\n  const [subscriptionListData, setSubscriptionListData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [rowData, setRowData] = useState([]);\n\n\n  const getSubscriptionList = () => {\n\n    AxiosUser({\n      method: \"GET\",\n      url: `user-management/user-subscription/list?userId=${userId}`\n    })\n      .then(res => {\n        setSubscriptionList(res.data.userSubscriptionList);\n        setSubscriptionListData(res.data.userSubscriptionList);\n        isLoading(true);\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        isLoading(true);\n      });\n  }\n\n  useEffect(() => {\n    getSubscriptionList();\n  }, []);\n\n  const userSubscription = (text) => {\n    console.log(\"text\", text)\n    let subscriptionData = subscriptionList.filter((subscription) => subscription.name.toLowerCase().includes(text.toLowerCase()));\n    setSubscriptionListData(subscriptionData);\n  }\n\n  const UserSubscriptionDetails = (rowData) => {\n   setShowModal(true)\n   setRowData(rowData)    \n  }\n\n  const handleClose = (e) => {\n    setShowModal(false)\n  }\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n\n        <div className=\"row\">\n          <div className=\"col-md-12 list-page mt-3\">\n\n\n            <div className=\"search-ar mt-2 mb-2\">\n              <h2 className=\"headl\">Subscriptions</h2>\n              <div className=\"wrap float-right\">\n                <div className=\"search\">\n                  <input type=\"text\" onChange={(e) => { userSubscription(e.target.value) }} className=\"searchTerm\" placeholder=\"What are you looking for?\" />\n                  <button type=\"submit\" className=\"searchButton\">\n                    <i className=\"icon ion-md-search\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <table className=\"table table-striped table-hover\">\n              <thead className=\"\">\n                <tr>\n                  <th>Sl. No.</th>\n                  <th>Package Name</th>\n                  {/*<th>Price (in INR)</th>*/}\n                  <th>Validity (in Days)</th>\n                  <th>Added On</th>\n                  <th>Expire On</th>\n                  <th>Status</th>                  \n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {loading ? (\n                  subscriptionListData.length > 0 ? (\n                    subscriptionListData.map((subscription, index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{index + 1}.</td>\n                          <td>{subscription.name}</td>\n                          {/*<td>{subscription.price}</td>*/}\n                          <td>{subscription.validityInDay}</td>\n                          <td>{moment(subscription.createdDate).format(\"MMM. DD, YYYY\")}</td>\n                          <td>{moment(subscription.accountExpireDate).format(\"MMM. DD, YYYY\")}</td>\n                          <td>{subscription.isActive=='Y' ? <div style={{color:\"green\",fontWeight:\"bold\",}}>ACTIVE</div> : <div style={{color:\"red\",fontWeight:\"bold\"}}>INACTIVE</div>}</td>\n                          <td><button className=\"btn btn-primary btn-sm\" onClick = {()=> { UserSubscriptionDetails(subscription)}}><i className=\"icon ion-md-eye\"></i></button></td>\n                        </tr>\n                      )\n\n                    })\n                  ) : (<tr><td colSpan=\"7\" style={{ textAlign: \"center\" }}>No record found</td></tr>)\n                ) : (\n                  <div className=\"loaderBlock\">\n                    <div className=\"loader\"></div>\n                  </div>\n                )}\n              </tbody>\n            </table>\n\n          </div>\n        </div>\n\n\n      </div>\n      \n        <div>\n            <Modal className=\"customModal brandModal\" bsSize=\"md\"\n                show={showModal}\n                onHide={handleClose}>\n                <Modal.Header closeButton className=\"custmModlHead\">\n                    <div ><h3>Subscription Details </h3> </div>\n                </Modal.Header>\n                <Modal.Body>                                           \n                <ViewSubscription \n                  rowData = {rowData}\n                  isAdmin = {false}\n                />                       \n                </Modal.Body>\n            </Modal>\n        </div>\n\n    </>\n  );\n}\n"],"sourceRoot":""}