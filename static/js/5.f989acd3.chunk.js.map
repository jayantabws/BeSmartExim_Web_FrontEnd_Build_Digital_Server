{"version":3,"sources":["assets/image/pencil-square.svg","pages/searchlog.js"],"names":["searchBYList","cityDestinationList","cityOriginList","exporterList","hsCode4DigitList","hsCodeList","importerList","portDestinationList","portOriginList","rangeQuantityStart","rangeQuantityEnd","rangeValueUsdStart","rangeValueUsdEnd","rangeUnitPriceUsdStart","rangeUnitPriceUsdEnd","consumptionType","incoterm","notifyParty","searchValue","relation","searchBy","queryBuilder","withRouter","connect","state","loading","loader","download_count","data","subscriptionId","dataAccess_count","totalWorkspace","subUserCount","queryPerDay","dispatch","loadingStart","loaderStart","loadingStop","loaderStop","updateSubscriptionCount","props","history","useHistory","userId","localStorage","getItem","userData","JSON","parse","searchList","setSearchList","useState","searchListData","setSearchListData","sortName","setSortName","undefined","sortOrder","setSortOrder","useEffect","getSearchList","userID","uplineId","Axios","method","url","then","res","tempQueryList","queryList","length","map","item","index","jsonData","Object","keys","key","Val","subKey","subVal","item2","index2","subitem","subindex","push","catch","err","console","log","options","onSortChange","_jsx","_Fragment","children","className","_jsxs","BootstrapTable","striped","hover","pagination","search","TableHeaderColumn","width","isKey","dataField","dataFormat","indexN","cell","row","enumObject","dataSort","QueryFormat","filter","elements","periodFormat","moment","fromDate","format","toDate","searchedByFormat","createdByEmail","searchedOnFormat","createdDate","actionFormatter","onClick","pathname","search_id","workspace_id","search_type"],"mappings":"4GAAe,G,mCCAf,oGAaA,MAAMA,EAAe,CACnBC,oBAAqB,mBACrBC,eAAgB,iBAChBC,aAAc,gBACdC,iBAAkB,oBAClBC,WAAY,oBACZC,aAAc,gBACdC,oBAAqB,mBACrBC,eAAgB,iBAEhBC,mBAAoB,mBACpBC,iBAAkB,mBAClBC,mBAAoB,yBACpBC,iBAAkB,yBAClBC,uBAAwB,8BACxBC,qBAAsB,8BACtBC,gBAAiB,mBACjBC,SAAU,WACVC,YAAa,eAEbC,YAAa,eACbC,SAAU,WACVC,SAAU,YACVC,aAAc,cAkNDC,sBAAWC,aAnBFC,IACf,CACLC,QAASD,EAAME,OAAOD,QACtBE,eAAgBH,EAAMI,KAAKD,eAC3BE,eAAgBL,EAAMI,KAAKC,eAC3BC,iBAAkBN,EAAMI,KAAKE,iBAC7BC,eAAgBP,EAAMI,KAAKG,eAC3BC,aAAcR,EAAMI,KAAKI,aACzBC,YAAaT,EAAMI,KAAKK,gBAIDC,IAClB,CACLC,aAAcA,IAAMD,EAASE,eAC7BC,YAAaA,IAAMH,EAASI,eAC5BC,wBAA0BX,GAASM,EAASK,YAAwBX,OAG9CL,EA7MTiB,IACf,MAAMC,EAAUC,cAEVC,EAASC,aAAaC,QAAQ,aACpC,IAAIC,EAAWF,aAAaC,QAAQ,QACpCC,EAAWA,EAAWC,KAAKC,MAAMF,GAAY,CAAC,EAE9C,MAAOG,EAAYC,GAAiBC,mBAAS,KACtCC,EAAgBC,GAAqBF,mBAAS,KAC9CG,EAAUC,GAAeJ,wBAASK,IAClCC,EAAWC,GAAgBP,wBAASK,GAwD3CG,qBAAU,KArDYC,MAEpB,IAAIC,EAAS,GACbA,EAASf,GAAiC,GAArBA,EAASgB,SAAgB,WAAa,SAC3DtB,EAAML,eACN4B,YAAM,CACJC,OAAQ,MACRC,IAAK,oCAAoCJ,KAAUlB,MAElDuB,MAAKC,IACJ,IAAIC,EAAgB,GAChBD,EAAIvC,KAAKyC,WAAaF,EAAIvC,KAAKyC,UAAUC,OAAS,GACpDH,EAAIvC,KAAKyC,UAAUE,KAAI,CAACC,EAAMC,KAC5B,IAAIC,EAAW,CAAC,EAChBC,OAAOC,KAAKJ,GAAMD,KAAI,CAACM,EAAKC,KACf,mBAAPD,EACFH,EAASG,GAAOL,EAAKK,GAGrBF,OAAOC,KAAKJ,EAAsB,iBAAGD,KAAI,CAACQ,EAAQC,KAClC,YAAVD,IACFL,EAASK,GAAUP,EAAsB,gBAAEO,GAC3CL,EAAqB,WAAI1E,EAAe2E,OAAOC,KAAK5E,GAAcuE,KAAI,CAACU,EAAOC,IACnE,gBAATD,GAA2BT,EAAsB,gBAAES,GACjDT,EAAsB,gBAAES,GAAOV,KAAI,CAACY,EAASC,IAC3C,MAAMpF,EAAaiF,IAAUG,EAAW,eAClCpF,EAAuB,kBAAkBmF,EAAQhE,SAAW,WAAa,MAAMnB,EAAuB,kBAAkBmF,EAAQ/D,SAAW,WAAa,MAAMpB,EAA0B,qBAAkBmF,EAAQjE,cAGvL,IAAlCsD,EAAsB,gBAAES,IAAkD,MAAlCT,EAAsB,gBAAES,GAAiB,YAAYjF,EAAaiF,YAAuBT,EAAsB,gBAAES,GAAS,OAClK,KACP,GAEJ,IAEFb,EAAciB,KAAKX,EAAS,IAGhCxB,EAAckB,GACdf,EAAkBe,GAClB5B,EAAMH,aAAa,IAEpBiD,OAAMC,IACLC,QAAQC,IAAI,MAAOF,GACnB/C,EAAMH,aAAa,GACnB,EASJuB,EAAe,GACd,IAEH,MA0DM8B,EAAU,CACdpC,SAAUA,EACVG,UAAWA,EACXkC,aAtEF,SAAsBrC,EAAUG,GAC9BF,EAAYD,GACZI,EAAaD,EACf,GA0EA,OACEmC,cAAAC,WAAA,CAAAC,SACEF,cAAA,OAAKG,UAAU,kBAAiBD,SAE9BF,cAAA,OAAKG,UAAU,MAAKD,SAClBF,cAAA,OAAKG,UAAU,2BAA0BD,SAEvCF,cAAA,OAAKG,UAAU,MAAKD,SAClBF,cAAA,OAAKG,UAAU,qCAAoCD,SACjDF,cAAA,OAAKG,UAAU,OAAMD,SACnBE,eAAA,OAAKD,UAAU,YAAWD,SAAA,CACxBF,cAAA,MAAIG,UAAU,aAAYD,SAAC,mBAC3BF,cAAA,OAAAE,SACEE,eAACC,iBAAc,CAACrE,KAAMqB,EAAYiD,SAAO,EAACC,OAAK,EAC7CC,YAAY,EAAMC,QAAM,EACxBX,QAASA,EAAQI,SAAA,CAEjBF,cAACU,oBAAiB,CAACC,MAAM,KAAKC,OAAK,EAACC,UAAU,KAAKC,WArB1DC,CAACC,EAAMC,EAAKC,EAAYrC,IAC7BmB,cAAA,OAAAE,SAAMrB,EAAQ,IAoBoEqB,SAAC,UACvEF,cAACU,oBAAiB,CAACC,MAAM,MAAME,UAAU,aAAaM,UAAU,EAAKjB,SAAC,gBACtEF,cAACU,oBAAiB,CAACC,MAAM,MAAME,UAAU,aAAaC,WAnFxDM,CAACJ,EAAMC,EAAKC,EAAYrC,IAchCmC,EAAKK,QAAOC,GACA,OAAbA,IAoE0FH,UAAU,EAAKjB,SAAC,UAC/FF,cAACU,oBAAiB,CAACC,MAAM,MAAME,UAAU,YAAYM,UAAU,EAAKjB,SAAC,eACrEF,cAACU,oBAAiB,CAACC,MAAM,KAAKE,UAAU,cAAcM,UAAU,EAAKjB,SAAC,YACtEF,cAACU,oBAAiB,CAACC,MAAM,MAAME,UAAU,kBAAkBC,WAzD5DS,CAACP,EAAMC,IACnBO,IAAOP,EAAIQ,UAAUC,OAAO,iBAAmB,MAAQF,IAAOP,EAAIU,QAAQD,OAAO,iBAwDiBP,UAAU,EAAKjB,SAAC,WACrGF,cAACU,oBAAiB,CAACC,MAAM,MAAME,UAAU,eAAeM,UAAU,EAAKjB,SAAC,kBACvEhD,GAAiC,GAArBA,EAASgB,SACpB8B,cAACU,oBAAiB,CAACC,MAAM,MAAME,UAAU,gBAAgBC,WApDxDc,CAACZ,EAAMC,IACvBD,EAAO,MAAQC,EAAIY,eAAiB,KAmDkEV,UAAU,EAAKjB,SAAC,gBAAkC,KAE3IF,cAACU,oBAAiB,CAACC,MAAM,MAAME,UAAU,kBAAkBC,WA1DxDgB,CAACd,EAAMC,IACvBO,IAAOP,EAAIc,aAAaL,OAAO,4BAyDuEP,UAAU,EAAKjB,SAAC,gBACzGF,cAACU,oBAAiB,CAACC,MAAM,KAAKE,UAAU,WAAWC,WAlDjDkB,CAAChB,EAAMC,IACrBb,eAAA,OAAAF,SAAA,CAAK,IAACF,cAAA,UAAQiC,QAASA,KAC7BpF,EAAQ4C,KAAK,CACXyC,SAAU,SACVtG,MAAO,CACLuG,UAAWnB,EAAMoB,aAAc,MAAOC,YAAa,YAErD,EACDlC,UAAU,+CAA8CD,SAACF,cAAA,KAAGG,UAAU,4BA0C0BD,SAAC,gCAgBjG,I","file":"static/js/5.f989acd3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pencil-square.75d078b5.svg\";","import React, { useEffect, useState } from 'react';\nimport Axios from \"../shared/Axios\";\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport imagePencil from '../assets/image/pencil-square.svg';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { loaderStart, loaderStop } from \"../store/actions/loader\";\nimport { updateSubscriptionCount } from \"../store/actions/data\"\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\n\n// const searchBYList = { \"HS_CODE\": \"HS Code\", \"PRODUCT\": \"Product\", \"IMPORTER\": \"Importer\", \"EXPORTER\": \"Exporter\" };\n\nconst searchBYList = {\n  cityDestinationList: \"Destination City\",\n  cityOriginList: \"City of Origin\",\n  exporterList: \"Exporter List\",\n  hsCode4DigitList: \"HS Code (4 Digit)\",\n  hsCodeList: \"HS Code (8 Digit)\",\n  importerList: \"Importer List\",\n  portDestinationList: \"Destination Port\",\n  portOriginList: \"Port of Origin\",\n\n  rangeQuantityStart: \"Minimum Quantity\",\n  rangeQuantityEnd: \"Maximun Quantity\",\n  rangeValueUsdStart: \"Minimum Value (in USD)\",\n  rangeValueUsdEnd: \"Maximun Value (in USD)\",\n  rangeUnitPriceUsdStart: \"Minimum Unit Price (in USD)\",\n  rangeUnitPriceUsdEnd: \"Maximun Unit Price (in USD)\",\n  consumptionType: \"Consumption Type\",\n  incoterm: \"Incoterm\",\n  notifyParty: \"Notify Party\",\n\n  searchValue: \"Search Value\",\n  relation: \"Relation\",\n  searchBy: \"Search By\",\n  queryBuilder: \"Additional\"\n\n}\n\n\nconst Markets = (props) => {\n  const history = useHistory();\n\n  const userId = localStorage.getItem(\"userToken\");\n  let userData = localStorage.getItem(\"user\");\n  userData = userData ? JSON.parse(userData) : {};\n\n  const [searchList, setSearchList] = useState([]);\n  const [searchListData, setSearchListData] = useState([]);\n  const [sortName, setSortName] = useState(undefined);\n  const [sortOrder, setSortOrder] = useState(undefined);\n\n\n  const getSearchList = () => {\n\n    let userID = \"\"\n    userID = userData && userData.uplineId == 0 ? \"uplineId\" : \"userId\";\n    props.loadingStart()\n    Axios({\n      method: \"GET\",\n      url: `search-management/search/listAll?${userID}=${userId}`\n    })\n      .then(res => {\n        let tempQueryList = []\n        if (res.data.queryList && res.data.queryList.length > 0) {\n          res.data.queryList.map((item, index) => {\n            let jsonData = {}\n            Object.keys(item).map((key, Val) => {\n              if (key != \"userSearchQuery\") {\n                jsonData[key] = item[key]\n              }\n              else {\n                Object.keys(item[\"userSearchQuery\"]).map((subKey, subVal) => {\n                  if (subKey != \"searchId\") {\n                    jsonData[subKey] = item[\"userSearchQuery\"][subKey]\n                    jsonData['querySting'] = searchBYList ? Object.keys(searchBYList).map((item2, index2) => (\n                      item2 == \"queryBuilder\" && item[\"userSearchQuery\"][item2] ? (\n                        item[\"userSearchQuery\"][item2].map((subitem, subindex) => (\n                          `<b>${searchBYList[item2] + (subindex + 1)}</b>` + \" : \" +\n                          `<b>${searchBYList[\"relation\"]}</b>` + \" : \" + subitem.relation + \" ,&nbsp \" + `<b>${searchBYList[\"searchBy\"]}</b>` + \" : \" + subitem.searchBy + \" ,&nbsp \" + `<b>${searchBYList[\"searchValue\"]}</b>` + \" : \" + subitem.searchValue\n                        ))\n                      ) :\n                        (item[\"userSearchQuery\"][item2] != \"\" && item[\"userSearchQuery\"][item2] != null ? `<b>&nbsp;${searchBYList[item2]}</b>` + \" : \" + item[\"userSearchQuery\"][item2] : null)\n                    )) : null\n                  }\n                })\n              }\n            })\n            tempQueryList.push(jsonData)\n          })\n        }\n        setSearchList(tempQueryList);\n        setSearchListData(tempQueryList);\n        props.loadingStop()\n      })\n      .catch(err => {\n        console.log(\"Err\", err);\n        props.loadingStop()\n      });\n  }\n\n  function onSortChange(sortName, sortOrder) {\n    setSortName(sortName);\n    setSortOrder(sortOrder);\n  }\n\n  useEffect(() => {\n    getSearchList();\n  }, []);\n\n  const searchTypeFormat = (cell, row) => {\n    return cell.searchType\n  }\n\n  const QueryFormat = (cell, row, enumObject, index) => {\n\n    // let textString  =  searchBYList ? Object.keys(searchBYList).map((item, index) => (\n    //   item == \"queryBuilder\" && row[item] && row[item].length > 0 ? (\n    //     row[item].map((subitem, subindex) => (\n    //       `<b>${searchBYList[item]+(subindex+1)}</b>` +\" : \"+\n    //       `<b>${searchBYList[\"relation\"]}</b>` +\" : \"+ subitem.relation + \" , \"+ `<b>${searchBYList[\"searchBy\"]}</b>` +\" : \"+ subitem.searchBy + \" , \"+ `<b>${searchBYList[\"searchValue\"]}</b>` +\" : \"+ subitem.searchValue\n    //     ))\n    //   ) : \n    //   (row[item] != \"\" && row[item] != null ? `<b>${searchBYList[item]}</b>` +\" : \"+ row[item] : null)\n    // )) : null\n\n\n\n    let res = cell.filter(elements => {\n      return elements !== null;\n    });\n    return (res)\n\n  }\n\n  const tradeTypeFormat = (cell, row) => {\n    return cell.tradeType\n  }\n\n  const countryFormat = (cell, row) => {\n    return cell.countryCode\n  }\n\n  const periodFormat = (cell, row) => {\n    return moment(row.fromDate).format(\"MMM. DD, YYYY\") + \" - \" + moment(row.toDate).format(\"MMM. DD, YYYY\");\n  }\n\n  const searchedOnFormat = (cell, row) => {\n    return moment(row.createdDate).format(\"MMM. DD, YYYY, h:mm:ss a\")\n  }\n\n  const searchedByFormat = (cell, row) => {\n    return cell + \" [ \" + row.createdByEmail + \" ]\"\n  }\n\n\n  const actionFormatter = (cell, row) => {\n    return (<div> <button onClick={() => {\n      history.push({\n        pathname: '/list1',\n        state: {\n          search_id: cell, workspace_id: \"NIL\", search_type: \"HISTORY\"\n        }\n      })\n    }} className=\"effect-btn btn btn-primary mt-2 mr-2 icon-lg\"><i className=\"icon ion-md-search\"></i></button>\n    </div>)\n  }\n\n  const options = {\n    sortName: sortName,\n    sortOrder: sortOrder,\n    onSortChange: onSortChange\n  };\n\n  const indexN = (cell, row, enumObject, index) => {\n    return (<div>{index + 1}</div>);\n  }\n\n  return (\n    <>\n      <div className=\"container-fluid\">\n\n        <div className=\"row\">\n          <div className=\"col-md-12 list-page mt-3\">\n\n            <div className=\"row\">\n              <div className=\"col-lg-12 grid-margin stretch-card\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <h4 className=\"card-title\">Search History</h4>\n                    <div >\n                      <BootstrapTable data={searchList} striped hover\n                        pagination={true} search\n                        options={options}\n                      >\n                        <TableHeaderColumn width='50' isKey dataField='id' dataFormat={indexN}>Sl No</TableHeaderColumn>\n                        <TableHeaderColumn width='100' dataField='searchType' dataSort={true}>Search Type</TableHeaderColumn>\n                        <TableHeaderColumn width='520' dataField='querySting' dataFormat={QueryFormat} dataSort={true}>Query</TableHeaderColumn>\n                        <TableHeaderColumn width='100' dataField='tradeType' dataSort={true}>Trade Type</TableHeaderColumn>\n                        <TableHeaderColumn width='80' dataField='countryCode' dataSort={true}>Country</TableHeaderColumn>\n                        <TableHeaderColumn width='150' dataField='userSearchQuery' dataFormat={periodFormat} dataSort={true}>Period</TableHeaderColumn>\n                        <TableHeaderColumn width='100' dataField='totalRecords' dataSort={true}>Total Records</TableHeaderColumn>\n                        {userData && userData.uplineId == 0 ?\n                          <TableHeaderColumn width='150' dataField='createdByName' dataFormat={searchedByFormat} dataSort={true}>Searched By</TableHeaderColumn> : null\n                        }\n                        <TableHeaderColumn width='160' dataField='userSearchQuery' dataFormat={searchedOnFormat} dataSort={true}>Searched On</TableHeaderColumn>\n                        <TableHeaderColumn width='50' dataField='searchId' dataFormat={actionFormatter}>Action</TableHeaderColumn>\n                      </BootstrapTable>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n\n      </div>\n\n\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loader.loading,\n    download_count: state.data.download_count,\n    subscriptionId: state.data.subscriptionId,\n    dataAccess_count: state.data.dataAccess_count,\n    totalWorkspace: state.data.totalWorkspace,\n    subUserCount: state.data.subUserCount,\n    queryPerDay: state.data.queryPerDay,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadingStart: () => dispatch(loaderStart()),\n    loadingStop: () => dispatch(loaderStop()),\n    updateSubscriptionCount: (data) => dispatch(updateSubscriptionCount(data)),\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Markets));\n"],"sourceRoot":""}